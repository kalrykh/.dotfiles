<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<HostPackage>
		<Host autoClearCommandLineAfterSend="no" HighlightHistory="yes" printCommand="yes" USE_IRE_DRIVER_BUGFIX="no" mUSE_FORCE_LF_AFTER_PROMPT="yes" mUSE_UNIX_EOL="yes" mNoAntiAlias="no" mEchoLuaErrors="yes" runAllKeyMatches="no" AmbigousWidthGlyphsToBeWide="auto" mRawStreamDump="yes" mIsLoggingTimestamps="no" logDirectory="" logFileName="" logFileNameFormat="yyyy-MM-dd" mAlertOnNewData="yes" mFORCE_NO_COMPRESSION="no" mFORCE_GA_OFF="no" mFORCE_SAVE_ON_EXIT="yes" mEnableGMCP="yes" mEnableMSSP="yes" mEnableMSDP="no" mEnableMSP="yes" mEnableMTTS="yes" mEnableMNES="no" mMapStrongHighlight="no" mEnableSpellCheck="no" mEnableUserDictionary="yes" mUseSharedDictionary="no" mAcceptServerGUI="yes" mAcceptServerMedia="yes" mMapperUseAntiAlias="yes" mMapperShowRoomBorders="yes" mFORCE_MXP_NEGOTIATION_OFF="no" mFORCE_CHARSET_NEGOTIATION_OFF="no" forceNewEnvironNegotiationOff="no" enableTextAnalyzer="yes" mRoomSize="0.5" mLineSize="20.0" mBubbleMode="no" mMapViewOnly="no" mShowRoomIDs="no" mShowPanel="yes" mHaveMapperScript="yes" mEditorAutoComplete="no" mEditorShowBidi="no" mEditorTheme="Monokai-Midnight" mEditorThemeFile="Monokai-Midnight.tmTheme" mThemePreviewItemID="4" mThemePreviewType="trigger" mSearchEngineName="Google" mTimerSupressionInterval="00:00:00.000" mUseProxy="no" mProxyAddress="" mProxyPort="0" mProxyUsername="" mProxyPassword="" mSslTsl="no" mSslIgnoreExpired="no" mSslIgnoreSelfSigned="no" mSslIgnoreAll="no" mAskTlsAvailable="no" mDiscordAccessFlags="2495" mRequiredDiscordUserName="" mRequiredDiscordUserDiscriminator="" mSGRCodeHasColSpaceId="no" mServerMayRedefineColors="yes" playerRoomPrimaryColor="#ff990000" playerRoomSecondaryColor="#ffffffff" playerRoomStyle="1" playerRoomOuterDiameter="100" playerRoomInnerDiameter="83" CompactInputLine="no" CommandLineHistorySaveSize="500" mDoubleClickIgnore="&quot;'" EditorSearchOptions="2" DebugShowAllProblemCodepoints="no" announceIncomingText="yes" advertiseScreenReader="no" caretShortcut="None" blankLineBehaviour="Show" NetworkPacketTimeout="300" ShowIDsInEditor="no">
			<name>t2tmud</name>
			<mInstalledPackages>
				<string>run-lua-code-v4</string>
				<string>echo</string>
				<string>deleteOldProfiles</string>
				<string>generic_mapper</string>
			</mInstalledPackages>
			<url>104.239.142.24</url>
			<serverPackageName>nothing</serverPackageName>
			<serverPackageVersion>-1</serverPackageVersion>
			<port>9999</port>
			<borderTopHeight>0</borderTopHeight>
			<borderBottomHeight>0</borderBottomHeight>
			<borderLeftWidth>0</borderLeftWidth>
			<borderRightWidth>835</borderRightWidth>
			<wrapAt>110</wrapAt>
			<wrapIndentCount>0</wrapIndentCount>
			<mFgColor>#c0c0c0</mFgColor>
			<mBgColor>#000000</mBgColor>
			<mCommandFgColor>#ffff0a</mCommandFgColor>
			<mCommandBgColor>#000000</mCommandBgColor>
			<mCommandLineFgColor>#ffffff</mCommandLineFgColor>
			<mCommandLineBgColor>#333333</mCommandLineBgColor>
			<mBlack>#000000</mBlack>
			<mLightBlack>#808080</mLightBlack>
			<mRed>#800000</mRed>
			<mLightRed>#ff0000</mLightRed>
			<mBlue>#000080</mBlue>
			<mLightBlue>#0000ff</mLightBlue>
			<mGreen>#008000</mGreen>
			<mLightGreen>#00ff00</mLightGreen>
			<mYellow>#808000</mYellow>
			<mLightYellow>#ffff00</mLightYellow>
			<mCyan>#008080</mCyan>
			<mLightCyan>#00ffff</mLightCyan>
			<mMagenta>#800080</mMagenta>
			<mLightMagenta>#ff00ff</mLightMagenta>
			<mWhite>#c0c0c0</mWhite>
			<mLightWhite>#ffffff</mLightWhite>
			<mDisplayFont>JetBrains Mono,12,-1,5,50,0,0,0,1,0</mDisplayFont>
			<mCommandLineFont>Bitstream Vera Sans Mono,14,-1,5,50,0,0,0,0,0</mCommandLineFont>
			<mCommandSeparator>;</mCommandSeparator>
			<commandLineMinimumHeight>30</commandLineMinimumHeight>
			<mFgColor2>#c8c8c8</mFgColor2>
			<mBgColor2>#000000</mBgColor2>
			<mRoomBorderColor>#ffffff</mRoomBorderColor>
			<mMapInfoBg alpha="255">#333333</mMapInfoBg>
			<mBlack2>#000000</mBlack2>
			<mLightBlack2>#808080</mLightBlack2>
			<mRed2>#800000</mRed2>
			<mLightRed2>#ff0000</mLightRed2>
			<mBlue2>#000080</mBlue2>
			<mLightBlue2>#0000ff</mLightBlue2>
			<mGreen2>#008000</mGreen2>
			<mLightGreen2>#00ff00</mLightGreen2>
			<mYellow2>#808000</mYellow2>
			<mLightYellow2>#ffff00</mLightYellow2>
			<mCyan2>#008080</mCyan2>
			<mLightCyan2>#00ffff</mLightCyan2>
			<mMagenta2>#800080</mMagenta2>
			<mLightMagenta2>#ff00ff</mLightMagenta2>
			<mWhite2>#c0c0c0</mWhite2>
			<mLightWhite2>#ffffff</mLightWhite2>
			<mSpellDic>en_US</mSpellDic>
			<mLineSize>20.0</mLineSize>
			<mRoomSize>0.5</mRoomSize>
			<mapInfoContributor>Custom</mapInfoContributor>
			<profileShortcut key="Script editor">Ctrl+E</profileShortcut>
			<profileShortcut key="Show Map">Ctrl+M</profileShortcut>
			<profileShortcut key="Compact input line">Ctrl+L</profileShortcut>
			<profileShortcut key="Preferences">Ctrl+P</profileShortcut>
			<profileShortcut key="Notepad">Ctrl+N</profileShortcut>
			<profileShortcut key="Package manager">Ctrl+O</profileShortcut>
			<profileShortcut key="Module manager">Ctrl+I</profileShortcut>
			<profileShortcut key="MultiView">Ctrl+Alt+V</profileShortcut>
			<profileShortcut key="Mute all media">Ctrl+K</profileShortcut>
			<profileShortcut key="Play">Ctrl+Alt+C</profileShortcut>
			<profileShortcut key="Disconnect">Ctrl+D</profileShortcut>
			<profileShortcut key="Reconnect">Ctrl+R</profileShortcut>
			<profileShortcut key="Close profile">Ctrl+W</profileShortcut>
			<stopwatches>
				<stopwatch id="1" running="yes" effectiveStartDateTimeEpochMSecs="1710559317742" name="mordorPassStopWatch" />
			</stopwatches>
		</Host>
	</HostPackage>
	<TriggerPackage>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Echoes</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Bone Armour</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Looking</name>
					<script>cecho("&lt;red&gt;     LOOKING")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    Regal mutters angrily as he gets up from the table and starts</string>
						<string>^    Regal screams: "No! It doesn't work! I will never get this</string>
						<string>^    As he turns to another page of the tome, a small paper</string>
						<string>^    Suddenly there is a squeaking noise from the outside,</string>
						<string>^You hear the sound of footsteps in the main room.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Not Looking</name>
					<script>cecho("&lt;green&gt;     NOT LOOKING")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    Finally, Regal sits back down at the table and starts reading</string>
						<string>^    Regal sighs tiredly as he approaches the house doors and</string>
						<string>^    Regal approaches the shelf filled with old books and starts</string>
						<string>^    Regal takes a small booklet from the shelf, sits back down at</string>
						<string>^You hear a loud sigh and a squeaking of a chair in the main room.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Far Harad Pelts</name>
				<script>--cecho(" &lt;yellow&gt;100")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A sharp-tusked boar</name>
					<script>cecho(" &lt;yellow&gt;38")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A sharp-tusked boar</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A rabbit hopping around in the grass</name>
					<script>cecho(" &lt;yellow&gt;18")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A rabbit hopping around in the grass</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A plump sow lounges in the grass</name>
					<script>cecho(" &lt;yellow&gt;31")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A plump sow lounges in the grass$|^ An angered sow$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A zebra grazes on the plains</name>
					<script>cecho(" &lt;yellow&gt;49")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A zebra grazes on the plains</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A large hyena laughs as you walk past</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A large hyena laughs as you walk past</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A coyote searches for prey</name>
					<script>cecho(" &lt;yellow&gt;69")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A coyote searches for prey</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A small herd of gazelle</name>
					<script>cecho(" &lt;yellow&gt;38*")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A small herd of gazelle</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A black panther crouches before you</name>
					<script>cecho(" &lt;yellow&gt;53")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A black panther crouches before you</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A long, thin snake</name>
					<script>cecho(" &lt;yellow&gt;9")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A long, thin snake</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A gazelle roams the plains</name>
					<script>cecho(" &lt;yellow&gt;38")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A gazelle roams the plains</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A dirty ram grazes here</name>
					<script>cecho(" &lt;yellow&gt;54")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A dirty ram grazes here</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A large, black snake</name>
					<script>cecho(" &lt;yellow&gt;51")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A large, black snake</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A small pack of panthers</name>
					<script>cecho(" &lt;yellow&gt;159")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A small pack of panthers</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A family of gorillas</name>
					<script>cecho(" &lt;yellow&gt;367/456")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A family of gorillas</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A spider-monkey swings on a tree</name>
					<script>cecho(" &lt;yellow&gt;31")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A spider-monkey swings on a tree</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A long-eared rabbit hops around in the grass</name>
					<script>cecho(" &lt;yellow&gt;12")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A long-eared rabbit hops around in the grass</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A rhinoceros grazing in the grasses</name>
					<script>cecho(" &lt;yellow&gt;47")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A rhinoceros grazing in the grasses</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A lizard</name>
					<script>cecho(" &lt;yellow&gt;22")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A lizard$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A meek ewe grazes on the grass</name>
					<script>cecho(" &lt;yellow&gt;29")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A meek ewe grazes on the grass</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A mountain lion</name>
					<script>cecho(" &lt;yellow&gt;44")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A mountain lion$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A silverback gorilla</name>
					<script>cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A silverback gorilla</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>A female gorilla stands here</name>
					<script>cecho(" &lt;yellow&gt;89")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A female gorilla stands here</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Keys</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Edoras Cupboard</name>
					<script>cecho("&lt;cyan&gt; Edoras Cupboard")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A large, sturdy iron key.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>DWS</name>
					<script>cecho("&lt;cyan&gt; DWS")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ An iron flat key.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Loth Armoury</name>
					<script>cecho("&lt;cyan&gt; Loth Armoury")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A small steel key.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Calembel Scholar Key</name>
					<script>cecho("&lt;cyan&gt; Calembel")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A small, iron key.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Erebor Gate</name>
					<script>cecho("&lt;cyan&gt; Erebor")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ A jeweled key.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Thief Echoes</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>South Gondor</name>
					<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Calembel</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Atli, the barkeep</name>
							<script>cecho(' &lt;yellow&gt;180')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^  Atli, the barkeep$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A red-haired glassblower stokes the furnace</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A red-haired glassblower stokes the furnace$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A patient leatherworker minds his craft</name>
							<script>cecho(' &lt;yellow&gt;78')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A patient leatherworker minds his craft$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ethring</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A young man fishes wood out of the river</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A young man fishes wood out of the river$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Linhir</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Serith, an archer of Linhir</name>
							<script>cecho(' &lt;yellow&gt;120')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Serith, an archer of Linhir$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Duncan is training his sparring techniques</name>
							<script>cecho(' &lt;yellow&gt;110')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Duncan is training his sparring techniques$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hally winks at you as she awaits your order</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Hally winks at you as she awaits your order$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A weathered man with a stern glance</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A weathered man with a stern glance$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The ship's first mate</name>
							<script>cecho(' &lt;yellow&gt;120')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The ship's first mate$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The councilor of war</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The councilor of war$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An angry-looking jailor</name>
							<script>cecho(' &lt;yellow&gt;85')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An angry-looking jailor$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A refugee woman is sitting here</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A refugee woman is sitting here$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A cheerful woman is aiding the refugees</name>
							<script>cecho(' &lt;yellow&gt;75')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A cheerful woman is aiding the refugees$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Grok, the keeper of this shop</name>
							<script>cecho(' &lt;yellow&gt;172')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Grok, the keeper of this shop$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Kelsey, the keeper of this shop</name>
							<script>cecho(' &lt;yellow&gt;166')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Kelsey, the keeper of this shop$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dominique, the keeper of this shop</name>
							<script>cecho(' &lt;yellow&gt;214')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Dominique, the keeper of this shop$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Cassidy, the keeper of this shop</name>
							<script>cecho(' &lt;yellow&gt;175')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Cassidy, the keeper of this shop$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Galmir</name>
							<script>cecho(' &lt;yellow&gt;175')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Galmir, the shop keeper</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tarnost</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Atarinya, the village elder</name>
							<script>cecho(' &lt;yellow&gt;90')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Atarinya, the village elder$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A dark hooded figure lurks in the shadows.</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A dark hooded figure lurks in the shadows$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A drunk mercenary sitting at the bar</name>
							<script>cecho(' &lt;yellow&gt;95')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A drunk mercenary sitting at the bar$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dol Amroth</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lieutenant of the Guard</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Lieutenant of the Guard$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lendin</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Salfin the innkeeper</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Salfin the innkeeper$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pelargir</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A dunedain maiden</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A dunedain maiden$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A mischievous-looking pirate</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A mischievous-looking thug$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A rough-looking sailor</name>
							<script>cecho(' &lt;yellow&gt;75')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A rough-looking sailor$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A frazzled woman</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A frazzled woman$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A cloaked figure</name>
							<script>cecho(' &lt;yellow&gt;120')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A cloaked figure$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An elderly man fighting for his life</name>
							<script>cecho(' &lt;yellow&gt;191')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An elderly man fighting for his life$</string>
								<string>^ An elderly man$</string>
								<string>^ An elderly man is sleeping here$</string>
								<string>^ An elderly man is sitting here$</string>
								<string>^ An elderly man stands here$</string>
								<string>^ An elderly man tries to hide behind the bed$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An officer of the city guard</name>
							<script>cecho(' &lt;yellow&gt;120')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An officer of the city guard\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ramthur, the armoursmith</name>
							<script>cecho(' &lt;yellow&gt;75')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Ramthur, the armoursmith$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jarain, the weaponsmith</name>
							<script>cecho(' &lt;yellow&gt;75')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Jarain, the weaponsmith$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A dunedain guard</name>
							<script>cecho(' &lt;yellow&gt;200')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A dunedain guard\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A resting dunedain guard</name>
							<script>cecho(' &lt;yellow&gt;220')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A resting dunedain guard\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Elgard, Commander of the Guard</name>
							<script>cecho(' &lt;yellow&gt;000')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Elgard, Commander of the Guard$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gondor</name>
					<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Pelennor</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Lord Duinhir of Morthond leads the way</name>
							<script>cecho(' &lt;yellow&gt;95')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Lord Duinhir of Morthond leads the way$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A battle scarred easterling</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A battle scarred easterling$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gothmog, Lieutenant of Morgul</name>
							<script>cecho(' &lt;yellow&gt;300')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Gothmog, Lieutenant of Morgul$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Heruharoth'Qata Padishah</name>
							<script>cecho(' &lt;yellow&gt;120')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Heruharoth'Qata Padishah$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A dreaded black necromancer of Barad-dur</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A dreaded black necromancer of Barad-dur$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A massive mountain-troll towers over his foes</name>
							<script>cecho(' &lt;yellow&gt;200')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A massive mountain-troll towers over his foes$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A huge orc commander</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A huge orc commander$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Troll Counter Enable/disable</name>
							<script>enableTrigger("Troll Counter")
enableTrigger("Mark Trolls")
cecho("\n&lt;cyan&gt;Troll Counter Enabled.\n")
trollCount = 0
trollRooms = {}

if disableTroll then killTrigger(disableTroll) end
disableTroll = tempRegexTrigger("^Trigger deactivated.",function()
  cecho("\n&lt;cyan&gt;Troll Counter Disabled.\n")
  disableTrigger("Troll Counter")
  disableTrigger("Mark Trolls")
  trollCount = nil
  t2tMapperAddons.resetTrollRooms()
end, 1)</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^The next time you see 'mountain-troll', you will do: 'steal all gold from troll'.</string>
								<string>^Trigger activated: 'mountain-troll' todo 'steal all gold from troll'</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Troll Counter</name>
							<script>local theftAmount = tonumber(matches[2])

if theftAmount &gt; 100 then
  trollCount = trollCount +1
  cecho(f"\n&lt;cyan&gt;Troll Count: &lt;red&gt;{trollCount}\n")
end
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^You put (\d+) gold in your pockets.</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Mark Trolls</name>
							<script>t2tMapperAddons.addTroll()</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A massive mountain-troll towers over his foes$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Osgiliath</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A tall, dark-skinned man stands here issuing orders</name>
							<script>cecho(" &lt;yellow&gt;128")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A tall, dark-skinned man stands here issuing orders</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A half-orc guards a pile of arms</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A half-orc guards a pile of arms</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A routed and retreating horde of orcs</name>
							<script>cecho(" &lt;yellow&gt;136")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A routed and retreating horde of orcs</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A fleeing band of Easterlings</name>
							<script>cecho(" &lt;yellow&gt;136")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A fleeing band of Easterlings</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A silent sentinel stands watch over the gat</name>
							<script>cecho(" &lt;yellow&gt;104")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A silent sentinel stands watch over the gat</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A scrounging orc</name>
							<script>cecho(" &lt;yellow&gt;150")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A scrounging orc</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A Ranger of Ithilien</name>
							<script>cecho(" &lt;yellow&gt;150")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A Ranger of Ithilien</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Minas Tirith</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A weary, bloody archer</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A weary, bloody archer\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A weary, bloody guard</name>
							<script>cecho(" &lt;yellow&gt;85")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A weary, bloody guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A tall guard of Minas Tirith</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A tall guard of Minas Tirith\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A well-muscled Dunnish man of western Gondor</name>
							<script>cecho(" &lt;yellow&gt;80")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A well-muscled man of western Gondor\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Eluchil, a good apothecary-man</name>
							<script>cecho(" &lt;yellow&gt;150")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Eluchil, a good apothecary-man</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An apprentice baker</name>
							<script>
cecho(" &lt;yellow&gt;90")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An apprentice baker</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An archer keeps watch</name>
							<script>cecho(" &lt;yellow&gt;150")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An archer keeps watch\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Darpalan, wise astrologer</name>
							<script>cecho(" &lt;yellow&gt;200")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Darpalan, wise astrologer</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Savrin, a blacksmith of Minas Tirith</name>
							<script>cecho(" &lt;yellow&gt;82")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Savrin, a blacksmith of Minas Tirith</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Brechan the butcher</name>
							<script>cecho(" &lt;yellow&gt;90")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Brechan the butcher</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Paleas the candlemaker</name>
							<script>cecho(" &lt;yellow&gt;110")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Paleas the candlemaker</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A citizen of Minas Tirith</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A citizen of Minas Tirith\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A citizen of Minas Tirith</name>
							<script>cecho(" &lt;yellow&gt;75")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A citizen of Minas Tirith\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A Gondorian civilian</name>
							<script>cecho(" &lt;yellow&gt;85")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A Gondorian civilian\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A desperate man</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A desperate man</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tholten, a big angry man</name>
							<script>cecho(" &lt;yellow&gt;90")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Tholten, a big angry man</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The guard of the level two guard station</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The guard of the level two guard station\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A guard</name>
							<script>cecho(" &lt;yellow&gt;170")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vermont, a proud Gondorian citizen</name>
							<script>cecho(" &lt;yellow&gt;155")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Vermont, a proud Gondorian citizen</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An injured guard</name>
							<script>cecho(" &lt;yellow&gt;170")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An injured guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A solemn lookout scans the mountainside</name>
							<script>cecho(" &lt;yellow&gt;150")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A solemn lookout scans the mountainside\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Aldamir is here almost in tears</name>
							<script>cecho(" &lt;yellow&gt;120")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Aldamir is here almost in tears|^ Aldamir is here looking almost cheerful$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dornegil, an unsavory looking character</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Dornegil, an unsavory looking character</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A Minas Tirith citizen out on some errand</name>
							<script>cecho(" &lt;yellow&gt;80")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A Minas Tirith citizen out on some errand\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Tabetha, the laundry maid</name>
							<script>cecho(" &lt;yellow&gt;275")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Tabetha, the laundry maid</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Phyllmore, the guard on duty</name>
							<script>cecho(" &lt;yellow&gt;280")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Phyllmore, the guard on duty</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A shady figure stands here</name>
							<script>cecho(" &lt;yellow&gt;200")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A shady figure stands here</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Norlan, the laundry attendant</name>
							<script>cecho(" &lt;yellow&gt;194")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Norlan, the laundry attendant</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Kikerig the cooper</name>
							<script>cecho(" &lt;yellow&gt;225")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Kikerig the cooper</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The Town crier</name>
							<script>cecho(" &lt;yellow&gt;243")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The Town crier</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vern the street vendor</name>
							<script>cecho(" &lt;yellow&gt;224")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Vern the street vendor</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hidler the jolly barber waits here</name>
							<script>cecho(" &lt;yellow&gt;102")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Hidler the jolly barber waits here</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Huey the local botanist</name>
							<script>cecho(" &lt;yellow&gt;120")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Huey, the local botanist</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A big and powerful-looking cook</name>
							<script>cecho(" &lt;yellow&gt;95")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A big and powerful-looking cook</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The doorman</name>
							<script>cecho(" &lt;yellow&gt;154")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The doorman\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Arin the goldsmith</name>
							<script>cecho(" &lt;yellow&gt;157")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Arin the goldsmith</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The Head Researcher is here looking worried.</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The Head Researcher is here looking worried.</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A High Guard of Minas Tirith</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A High Guard of Minas Tirith\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A maid of the Fellowship.</name>
							<script>cecho(" &lt;yellow&gt;95")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A maid of the Fellowship.</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The Master blinks his eyes, roused from sleep</name>
							<script>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then
  cecho(" &lt;yellow&gt;120")
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The Master blinks his eyes, roused from sleep$</string>
								<string>^ The Master Stonewright sleeps fitfully$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A researcher is here busily working away.</name>
							<script>cecho(" &lt;yellow&gt;95")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A researcher is here busily working away.</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A secretary is whittling away at a pile of work here.</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A secretary is whittling away at a pile of work here.</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A Stonewright is resting here.</name>
							<script>cecho(" &lt;yellow&gt;95")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A Stonewright is resting here.</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Thralis, the shopkeeper of the Fellowship</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Thralis, the shopkeeper of the Fellowship</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A Stonewright is here looking thoughtful.</name>
							<script>cecho(" &lt;yellow&gt;95")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A Stonewright is here looking thoughtful.</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A worker practicing his stoneworking skills</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A worker practicing his stoneworking skills</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Bare-chested Hunthor is here watching the furnace</name>
							<script>cecho(" &lt;yellow&gt;128")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Bare-chested Hunthor is here watching the furnace</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A linguist</name>
							<script>cecho(" &lt;yellow&gt;210")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A linguist</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Halls of Learning' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A weary old man</name>
							<script>cecho(" &lt;yellow&gt;134")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A weary old man</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Halls of Learning' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An inconspicuous man is lurking in the shadows</name>
							<script>cecho(" &lt;yellow&gt;120")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An inconspicuous man is lurking in the shadows</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A captain of the guard</name>
							<script>cecho(" &lt;yellow&gt;78")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A captain of the guard</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Jalex, the house's owner</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Jalex, the house's owner</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Leord, the Director of the Office of Estate</name>
							<script>cecho(" &lt;yellow&gt;150")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Leord, the Director of the Office of Estate</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An official</name>
							<script>cecho(" &lt;yellow&gt;120")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An official\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A very busy scholar</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A very busy scholar</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Halls of Learning' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A waterwright</name>
							<script>cecho(" &lt;yellow&gt;90")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A waterwright\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A woman stands here</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A woman stands here</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A worried guard is on duty here</name>
							<script>cecho(" &lt;yellow&gt;150")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A worried guard is on duty here</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A worried merchant</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An anxious merchant$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Captain of the guard</name>
							<script>cecho(" &lt;yellow&gt;80")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Captain of the guard$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Raphial the Fellowship's Master</name>
							<script>cecho(" &lt;yellow&gt;230")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Raphial the Fellowship's Master</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A butler stands here</name>
							<script>cecho(" &lt;yellow&gt;130")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A butler stands here $</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A cook</name>
							<script>cecho(" &lt;yellow&gt;166")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A cook\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A regal knight</name>
							<script>cecho(" &lt;yellow&gt;202")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A regal knight</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A nervous looking man</name>
							<script>cecho(" &lt;yellow&gt;100+r(20)")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A nervous looking man\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Trathorn the locksmith</name>
							<script>cecho(" &lt;yellow&gt;200")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Trathorn the locksmith</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A menacing thug</name>
							<script>cecho(" &lt;yellow&gt;90")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A menacing thug\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A distressed Ranger of Ithilien</name>
							<script>cecho(" &lt;yellow&gt;255")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A distressed Ranger of Ithilien</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' or getRoomAreaName(getRoomArea(map.currentRoom)) == "The King's Ward" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Linimir the bartender is here serving drinks</name>
							<script>cecho(" &lt;yellow&gt;80")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Linimir the bartender is here serving drinks</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Éowyn, princess of Rohan</name>
							<script>cecho(" &lt;yellow&gt;200")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Éowyn, princess of Rohan</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' or getRoomAreaName(getRoomArea(map.currentRoom)) == "The King's Ward" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A talkative, old nurse</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A talkative, old nurse</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' or getRoomAreaName(getRoomArea(map.currentRoom)) == "The King's Ward" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A Tower Guard</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A Tower Guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A guard on patrol</name>
							<script>cecho(" &lt;yellow&gt;98/148")

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A guard on patrol\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A relaxing officer</name>
							<script>cecho(" &lt;yellow&gt;80")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A relaxing officer\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Chadlin the Innkeeper</name>
							<script>cecho(" &lt;yellow&gt;83")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Chadlin the Innkeeper</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A great, fat cook</name>
							<script>cecho(" &lt;yellow&gt;80")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A great, fat cook</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An off-duty tower guard</name>
							<script>cecho(" &lt;yellow&gt;75")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An off-duty tower guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An off-duty soldier stands here</name>
							<script>cecho(" &lt;yellow&gt;90")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An off-duty soldier stands here\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Cellar' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Citadel' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Walkway' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 1' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 2' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 3' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 4' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 6' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 7' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A solemn librarian</name>
							<script>cecho(" &lt;yellow&gt;75")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A solemn librarian$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Tirith Level 5' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Stonewain</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The army of the Rohirrim</name>
							<script>cecho(" &lt;yellow&gt;500")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The army of the Rohirrim</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A company of Rohan's warriors</name>
							<script>cecho(" &lt;yellow&gt;200")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A company of Rohan's warriors</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The king's men, led by their lord Theoden</name>
							<script>cecho(" &lt;yellow&gt;500")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The king's men, led by their lord Theoden</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An official of the golden house</name>
							<script>cecho(" &lt;yellow&gt;100 + random(60)")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An official of the golden house</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An intense Rohirrim soldier</name>
							<script>cecho(" &lt;yellow&gt;80")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An intense Rohirrim soldier</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A horseman of the Rohirrim</name>
							<script>cecho(" &lt;yellow&gt;80")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A horseman of the Rohirrim</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A skillful Rohirrim soldier</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A skillful Rohirrim soldier</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A lean Rohirrim warrior</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A lean Rohirrim warrior</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A Rohirrim warrior locked in combat</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A Rohirrim warrior locked in combat</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A noble Rohirrim soldier rides his steed</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A noble Rohirrim soldier rides his steed</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Eonaros, a warrior of the Rohirrim</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Eonaros, a warrior of the Rohirrim</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A soldier leads a Rohirrim horse away from the battlefield</name>
							<script>cecho(" &lt;yellow&gt;80")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A soldier leads a Rohirrim horse away from the battlefield</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A horseman of the Rohirrim</name>
							<script>cecho(" &lt;yellow&gt;80")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A horseman of the Rohirrim</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A Rohirrim soldier walks by</name>
							<script>cecho(" &lt;yellow&gt;75")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A Rohirrim soldier walks by</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>West Arda</name>
					<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Grey Havens</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Cirdan</name>
							<script>cecho(" &lt;yellow&gt;150")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Círdan the Shipwright</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Glorfindel</name>
							<script>cecho(" &lt;yellow&gt;76")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Glorfindel, a radiant elven lord</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Galdor</name>
							<script>cecho(" &lt;yellow&gt;76")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Galdor, Círdan's messenger</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Shopkeeper</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Your friendly shopkeeper, Amorphorn</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dell's Farm</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Dell</name>
							<script>cecho(" &lt;yellow&gt;272")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A handsome farmer</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A plump woman stands here cooking</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A plump woman stands here cooking</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A handsome lad</name>
							<script>cecho(" &lt;yellow&gt;255")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A handsome lad</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A buxom blonde</name>
							<script>cecho(" &lt;yellow&gt;167")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A buxom blonde</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A short red headed girl</name>
							<script>cecho(" &lt;yellow&gt;167")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A short red headed girl</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Northern Rhovanion</name>
					<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Esgaroth</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A defender of Esgaroth protects his city</name>
							<script>cecho(" &lt;yellow&gt;143")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A defender of Esgaroth protects his city</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Erebor</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Glomird the Clerk</name>
							<script>cecho(" &lt;yellow&gt;150")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Glomird the Clerk</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Banda the Bad, Trainer</name>
							<script>cecho(" &lt;yellow&gt;75")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Banda the Bad, Trainer</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Beorn's House</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Grimbeorn sits here in his magnificent black chair</name>
							<script>cecho(" &lt;yellow&gt;245")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Grimbeorn sits here in his magnificent black chair</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Valbeorn sits at his desk, writing a letter</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Valbeorn sits at his desk, writing a letter</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Captain's Blade</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orcish cook</name>
							<script>cecho(" &lt;yellow&gt;81")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orcish cook</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orcish guard on duty</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orcish guard on duty\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A proud orcish guard</name>
							<script>cecho(" &lt;yellow&gt;125")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A proud orcish guard</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Gunthruktu, the Orc Captain</name>
							<script>cecho(" &lt;yellow&gt;175")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Gunthruktu, the Orc Captain</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Southern Rhovanion</name>
					<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>East Wains</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The Captain of the easterlings</name>
							<script>cecho(" &lt;yellow&gt;85")

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The Captain of the easterlings</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An easterling guard</name>
							<script>cecho(" &lt;yellow&gt;80")

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An easterling guard\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A distracted easterling guard</name>
							<script>cecho(" &lt;yellow&gt;80")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A distracted easterling guard</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lothlorien and Moria</name>
					<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Orc Brew/Great Iron Axe</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A large dwarven guard</name>
							<script>cecho(" &lt;yellow&gt;125")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A large dwarven guard\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A large dwarven sentry</name>
							<script>cecho(" &lt;yellow&gt;80")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A large dwarven sentry\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A dwarven lookout</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A dwarven lookout\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A large dwarven soldier</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A large dwarven soldier\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An alert dwarf</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An alert dwarf\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A confident looking dwarf</name>
							<script>cecho(" &lt;yellow&gt;135")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A confident looking dwarf\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A tall orc leader</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A tall orc leader\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Lothlorien</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc slouches here, guarding a catapult</name>
							<script>cecho(" &lt;yellow&gt;108")

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc slouches here, guarding a catapult\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A tall lord of the easterlings</name>
							<script>cecho(" &lt;yellow&gt;100")

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A tall lord of the easterlings\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A darkly clad man</name>
							<script>cecho(" &lt;yellow&gt;140")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A darkly clad man</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A small troll</name>
							<script>cecho(" &lt;yellow&gt;88")
--if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Lothlorien War Camp' then return true end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A small troll\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Lothlorien War Camp' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A short rough orcish lumberjack</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A short rough orcish lumberjack\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An elite uruk-hai guard</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An elite uruk-hai guard\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Khamûl the Nazgûl Warlord</name>
							<script>cecho(" &lt;yellow&gt;200")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Khamûl the Nazgûl Warlord</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A very large olog-hai troll</name>
							<script>cecho(" &lt;yellow&gt;80")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A very large olog-hai troll\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The supply sergeant</name>
							<script>cecho(" &lt;yellow&gt;88")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The supply sergeant</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A really large troll blacksmith</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A really large troll blacksmith</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A tall proud underlord</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A tall proud underlord\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An Uruk-hai guard eyes you</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An Uruk-hai guard eyes you\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A burly orc in brown</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A burly orc in brown\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Calad the Traitor</name>
							<script>cecho(" &lt;yellow&gt;108")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Calad the Traitor</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A wounded Elven warrior is waiting to be healed</name>
							<script>cecho(" &lt;yellow&gt;90")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A wounded Elven warrior is waiting to be healed</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A tall elven minstrel</name>
							<script>cecho(" &lt;yellow&gt;100")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A tall elven minstrel</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Page the silvan Civilian</name>
							<script>cecho(" &lt;yellow&gt;200")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Page the silvan Civilian</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A pale scribe with stains all over his clothes</name>
							<script>cecho(" &lt;yellow&gt;88")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A pale scribe with stains all over his clothes</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A roughly dressed archer</name>
							<script>cecho(" &lt;yellow&gt;243")

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A roughly dressed archer</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A ratty looking elf all in black</name>
							<script>cecho(" &lt;yellow&gt;251")

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A ratty looking elf all in black</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A small man humming to himself</name>
							<script>cecho(" &lt;yellow&gt;90")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A small elf humming to himself</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A huge orcish battle lord ready to kill.</name>
							<script>cecho(" &lt;yellow&gt;150")
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A huge orcish battle lord ready to kill.\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Rohan</name>
					<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Harrowdale</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Armitor, a pissed off female warrior</name>
							<script>cecho(' &lt;yellow&gt;93')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Armitor, a pissed off female warrior$</string>
								<string>^ Armitor rests here on a stone$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A girl clad in black</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A girl clad in black$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Leisha, the mayor's wife</name>
							<script>cecho(' &lt;yellow&gt;76')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Leisha, the mayor's wife$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Tenzek</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A Dunlending warlord stands here, preparing for battle</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^A Dunlending warlord stands here, preparing for battle</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Edoras</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A woman is preparing a meal for the wounded</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A woman is preparing a meal for the wounded</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A guard stands watch over the gate</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A guard stands watch over the gate\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A woman is tending the sick</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A woman is tending the sick</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A peasant worker looks at you in wonder</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A peasant worker looks at you in wonder</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A wizened old man looks at you with interest</name>
							<script>cecho(" &lt;yellow&gt;200")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A wizened old man looks at you with interest</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A wounded soldier warms himself by the hearth</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A wounded soldier warms himself by the hearth</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A wounded soldier is lying beside the fireplace</name>
							<script>cecho(" &lt;yellow&gt;100")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A wounded soldier is lying beside the fireplace</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Harondor</name>
					<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>GWS/DSL</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A dark-looking bounty hunter</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A dark-looking bounty hunter$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A haradrim commander</name>
							<script>cecho(' &lt;yellow&gt;120')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A haradrim commander$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A haradrim guard</name>
							<script>cecho(' &lt;yellow&gt;150')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A haradrim guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Great War Shield" or t2tMapper.returnShort(map.currentRoom) == "gws" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dreyban, the numenorean smith</name>
						<script>cecho(' &lt;yellow&gt;150')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Dreyban, the numenorean smith$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Galenwath</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Nid, the village leader</name>
							<script>cecho(' &lt;yellow&gt;82')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Nid, the village leader$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Kadar</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Varun the boat craftsman</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Varun the boat craftsman$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A large assassin</name>
							<script>cecho(' &lt;yellow&gt;87')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A large assassin$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A tough haradrim guard</name>
							<script>cecho(' &lt;yellow&gt;130')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A tough haradrim guard\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A large prison guard</name>
							<script>cecho(' &lt;yellow&gt;77')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A large prison guard$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Raleem'tani, a proud haradrim</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Raleem'tani, a proud haradrim$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Sandra roams around tidying up the shop</name>
							<script>cecho(' &lt;yellow&gt;76')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Sandra roams around tidying up the shop$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Zaben tends to the shop</name>
							<script>cecho(' &lt;yellow&gt;76')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Zaben tends to the shop$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Haradrim Encampment</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Azimor, captain of the haradrim</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Azimor, captain of the haradrim$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Haradrim Encampment" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A haradrim guard</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A haradrim guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Haradrim Encampment" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Near Harad</name>
					<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Skarabash, a tall and imposing numenorean militant</name>
						<script>cecho(' &lt;yellow&gt;150')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Skarabash, a tall and imposing numenorean militant$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>A nervous guard</name>
						<script>cecho(' &lt;yellow&gt;80')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ A nervous guard\s?\[?[\d+]?\]?$|^ An unconscious guard\s?\[?[\d+]?\]?$</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Dharan-Sar" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>A watchful guard</name>
						<script>cecho(' &lt;yellow&gt;80')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ A watchful guard\s?\[?[\d+]?\]?$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Motaz Gahtani</name>
						<script>cecho(' &lt;yellow&gt;85')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Motaz Gahtani$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>A numenorean captain</name>
						<script>cecho(' &lt;yellow&gt;100')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ A numenorean captain$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>A short portly cook</name>
						<script>cecho(' &lt;yellow&gt;100')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ A short portly cook$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Outpost</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A wiry haradrim quietly paces about</name>
							<script>cecho(' &lt;yellow&gt;87')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A wiry haradrim quietly paces about$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Vitak, an unrivaled soldier, roaming the pit</name>
							<script>cecho(' &lt;yellow&gt;110')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Vitak, an unrivaled soldier, roaming the pit$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mordor</name>
					<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>CU</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc foot soldier</name>
							<script>cecho(' &lt;yellow&gt;81')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc foot soldier\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A runty uruk-hai</name>
							<script>cecho(' &lt;yellow&gt;100')

</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A runty uruk-hai\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Hronk the orc</name>
							<script>cecho(' &lt;yellow&gt;90')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Hronk the orc$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An ugly, smelly orc</name>
							<script>cecho(' &lt;yellow&gt;206')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An ugly, smelly orc\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A patrol of fierce Uruk-hai</name>
							<script>
cecho(' &lt;yellow&gt;100')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A patrol of fierce Uruk-hai\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A large orc guard</name>
							<script>
cecho(' &lt;yellow&gt;240')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A large orc guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Orc sentry</name>
							<script>
cecho(' &lt;yellow&gt;201')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Orc sentry\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A starving orc hunter</name>
							<script>cecho(' &lt;yellow&gt;311')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A starving orc hunter$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc wagon guard</name>
							<script>
cecho(' &lt;yellow&gt;122')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc wagon guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A large orc barman</name>
							<script>
cecho(' &lt;yellow&gt;110')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A large orc barman$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An ugly orc guard</name>
							<script>cecho(' &lt;yellow&gt;110')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An ugly orc guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A very upset orc</name>
							<script>
cecho(' &lt;yellow&gt;97')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A very upset orc\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orcish guard of the Undergate</name>
							<script>cecho(' &lt;yellow&gt;110')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orcish guard of the Undergate\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A large muscular orc reinforcement</name>
							<script>cecho(' &lt;yellow&gt;150')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A large muscular orc reinforcement\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A tall, thin orc worker</name>
							<script>
cecho(' &lt;yellow&gt;100')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A tall, thin orc worker$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A lazy snaga</name>
							<script>
cecho(' &lt;yellow&gt;105')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A lazy snaga\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A small orc with a potato peeler</name>
							<script>cecho(' &lt;yellow&gt;100')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A small orc with a potato peeler$|^ A small orc stands here in a fighting stance$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An angry-looking orc sits here, peeling spuds</name>
							<script>cecho(' &lt;yellow&gt;100')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An angry-looking orc sits here, peeling spuds$|^ An angry-looking orc</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A furtive orc crouches on his heels whilst he peels</name>
							<script>cecho(' &lt;yellow&gt;100')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A furtive orc crouches on his heels whilst he peels$|^ A furtive orc$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An arrogant-looking snaga</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An arrogant-looking snaga$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc spearman</name>
							<script>cecho(' &lt;yellow&gt;85')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc spearman\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol Courtyard" or getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol Scullery" or getRoomAreaName(getRoomArea(map.currentRoom)) =="Cirith Ungol Tower" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc squatting as he takes a dump</name>
							<script>cecho(' &lt;yellow&gt;100')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc squatting as he takes a dump$|^ An annoyed and very dirty orc$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A snaga stablehand</name>
							<script>cecho(' &lt;yellow&gt;120')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A snaga stablehand$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc archer monitors the courtyard</name>
							<script>cecho(' &lt;yellow&gt;150')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc archer monitors the courtyard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A tall wiry Orc sharpening his blade</name>
							<script>cecho(' &lt;yellow&gt;96')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A tall wiry Orc sharpening his blade$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A short, broad, Uruk-hai captain polishing a gruesome skull</name>
							<script>cecho(' &lt;yellow&gt;88')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A short, broad, Uruk-hai captain polishing a gruesome skull$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ingornt stands here prepared for battle</name>
							<script>cecho(' &lt;yellow&gt;100')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Ingornt stands here prepared for battle$|^ Ingornt sits here peacefully eating$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc subofficer in a nasty mood</name>
							<script>cecho(' &lt;yellow&gt;120')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc subofficer in a nasty mood$|^ A tired orc subofficer$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A patrolling guard</name>
							<script>cecho(' &lt;yellow&gt;148')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A patrolling guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A cowering Snaga</name>
							<script>cecho(' &lt;yellow&gt;75')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A cowering Snaga\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A flabby orc guard</name>
							<script>cecho(' &lt;yellow&gt;90')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A flabby orc guard$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The officer Torgart sleeps in his bed</name>
							<script>cecho(' &lt;yellow&gt;120')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The officer Torgart sleeps in his bed$|^ The officer Torgart stands prepared for battle$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The dark form of a Nazgul</name>
							<script>cecho(' &lt;yellow&gt;100')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The dark form of a Nazgul$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc official</name>
							<script>cecho(' &lt;yellow&gt;100')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc official\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An archer stands guard on the tower</name>
							<script>cecho(' &lt;yellow&gt;150')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An archer stands guard on the tower\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A scrawny orc holding a curved knife</name>
							<script>cecho(' &lt;yellow&gt;116')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A scrawny orc holding a curved knife$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc lookout</name>
							<script>cecho(' &lt;yellow&gt;110')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc lookout\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A taciturn understudy</name>
							<script>cecho(' &lt;yellow&gt;99')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A taciturn understudy$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc spearman watches over the turret</name>
							<script>cecho(' &lt;yellow&gt;90')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc spearman watches over the turret\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Cirith Ungol" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>BD</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Delgurth the silver-scaled dragon</name>
							<script>cecho(' &lt;yellow&gt;321')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Delgurth the silver-scaled dragon$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A stout easterling wall guard</name>
							<script>cecho(' &lt;yellow&gt;93')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A stout easterling wall guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Prince Gimlibar</name>
							<script>cecho(' &lt;yellow&gt;128')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Prince Gimlibar$|^ Prince Gimlibar \[ Asleep \]</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ugrunakkho, seething in anger</name>
							<script>cecho(' &lt;yellow&gt;216')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Ugrunakkho, seething in anger$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A wandering man</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A wandering man$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A variag disciple</name>
							<script>cecho(' &lt;yellow&gt;208')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A variag disciple\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An easterling general</name>
							<script>cecho(' &lt;yellow&gt;311')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An easterling general$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An easterling necromancer</name>
							<script>cecho(' &lt;yellow&gt;292')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An easterling necromancer\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A black numenorean general</name>
							<script>cecho(' &lt;yellow&gt;240')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A black numenorean general$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A haradrim general</name>
							<script>cecho(' &lt;yellow&gt;311')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A haradrim general$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc general</name>
							<script>cecho(' &lt;yellow&gt;292')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc general$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc officer</name>
							<script>cecho(' &lt;yellow&gt;256')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc officer\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A variag priestess</name>
							<script>cecho(' &lt;yellow&gt;200')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A black númenórean priestess\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A troll warrior</name>
							<script>cecho(' &lt;yellow&gt;292')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A troll warrior\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An uruk-hai guard</name>
							<script>cecho(' &lt;yellow&gt;256')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An uruk-hai guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A variag armourer works the forge</name>
							<script>cecho(' &lt;yellow&gt;243')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A variag armourer works the forge$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A variag general</name>
							<script>cecho(' &lt;yellow&gt;311')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A variag general$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Rimrol attentively watches his bar</name>
							<script>cecho(' &lt;yellow&gt;196')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Rimrol attentively watches his bar$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orcish captain</name>
							<script>cecho(' &lt;yellow&gt;150')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orcish captain\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A busy cook</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A busy cook$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A great easterling flexes his arms</name>
							<script>cecho(' &lt;yellow&gt;214')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A great easterling flexes his arms\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc sits here eating at a table</name>
							<script>cecho(' &lt;yellow&gt;153')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc sits here eating at a table\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A troll stuffs himself near the table</name>
							<script>cecho(' &lt;yellow&gt;153')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A troll stuffs himself near the table\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An ugly orc courier</name>
							<script>cecho(' &lt;yellow&gt;185')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An ugly orc courier\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A patrolling orc</name>
							<script>cecho(' &lt;yellow&gt;104')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A patrolling orc\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A dark figure silently scans the merchandise</name>
							<script>cecho(' &lt;yellow&gt;168')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A dark figure silently scans the merchandise$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A sleeping troll</name>
							<script>cecho(' &lt;yellow&gt;133')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A sleeping troll\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A sleeping orc</name>
							<script>cecho(' &lt;yellow&gt;133')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A sleeping orc\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A mean-looking troll</name>
							<script>cecho(' &lt;yellow&gt;109')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A mean-looking troll\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A haradrim smith looks up from the forge</name>
							<script>cecho(' &lt;yellow&gt;160')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A haradrim smith looks up from the forge$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc stands here guarding the hatch door</name>
							<script>cecho(' &lt;yellow&gt;86')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc stands here guarding the hatch door\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A dark sorcerer</name>
							<script>cecho(' &lt;yellow&gt;272')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A dark sorcerer\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A growling Olog-hai</name>
							<script>cecho(' &lt;yellow&gt;130')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A growling Olog-hai\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An easterling guard</name>
							<script>cecho(' &lt;yellow&gt;159')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An easterling guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A hulking easterling</name>
							<script>cecho(' &lt;yellow&gt;170')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A hulking easterling\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A hideous orc</name>
							<script>cecho(' &lt;yellow&gt;90')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A hideous orc\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A massive Uruk-hai</name>
							<script>cecho(' &lt;yellow&gt;272')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A massive Uruk-hai\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A troll guard</name>
							<script>cecho(' &lt;yellow&gt;136')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A troll guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A smelly uruk</name>
							<script>cecho(' &lt;yellow&gt;171')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A smelly uruk\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An Uruk warrior</name>
							<script>cecho(' &lt;yellow&gt;257')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An Uruk warrior\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The Questioner</name>
							<script>cecho(' &lt;yellow&gt;120')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The Questioner$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A bent servant</name>
							<script>cecho(' &lt;yellow&gt;96')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A bent servant$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Barad-dur" then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Narchost</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A orc is lying on a mat trying to get to sleep</name>
							<script>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Narchost" then
cecho(' &lt;yellow&gt;75')
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A orc is lying on a mat trying to get to sleep$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc prison guard</name>
							<script>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Narchost" then
cecho(' &lt;yellow&gt;100')
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc prison guard\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc guard</name>
							<script>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Narchost" then
cecho(' &lt;yellow&gt;100')
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc guard\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ughnogk, the general of the orcs of Narchost</name>
							<script>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Narchost" then
cecho(' &lt;yellow&gt;150')
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Ughnogk, the general of the orcs of Narchost$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An evil orc guard of Narchost</name>
							<script>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Narchost" then
cecho(' &lt;yellow&gt;100')
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An evil orc guard of Narchost\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An off-duty orc guard is here trying to rest</name>
							<script>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Narchost" then
cecho(' &lt;yellow&gt;75')
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An off-duty orc guard is here trying to rest\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A orc is relieving himself at the pit</name>
							<script>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Narchost" then
cecho(' &lt;yellow&gt;75')
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A orc is relieving himself at the pit$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Scarface, the Narchost cook</name>
							<script>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Narchost" then
cecho(' &lt;yellow&gt;100')
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Scarface, the Narchost cook$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A huge Uruk-hai sentinel is guarding the gate!</name>
							<script>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Narchost" then
cecho(' &lt;yellow&gt;75')
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A huge Uruk-hai sentinel is guarding the gate!\s?\[?[\d+]?\]?$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Carchost</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ulkhalad, a necromancer is here</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Ulkhalad, a necromancer is here$</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>ASB</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A large orc guards the camp</name>
							<script>cecho(' &lt;yellow&gt;75')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A large orc guards the camp$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'ASB' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc sits here eating his gruel</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc sits here eating his gruel$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'ASB' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Ughlaken, an Orc Warlord</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Ughlaken, an Orc Warlord$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'ASB' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Two handed orc sword</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A disgruntled cook</name>
							<script>cecho(' &lt;yellow&gt;89')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A disgruntled cook$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Huge Two-handed orc sword' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc is here doing inventory</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc is here doing inventory$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Huge Two-handed orc sword' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A sleeping orc</name>
							<script>cecho(' &lt;yellow&gt;100')
</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A sleeping orc$|^ A raging orc$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Huge Two-handed orc sword' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Silent Slayer</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc rests here| An orc stands ready to defend himself</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc rests here$|^ An orc stands ready to defend himself$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Silent Slayer' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The Orc Warlord looks at you with an appraising glance.</name>
							<script>cecho(' &lt;yellow&gt;150')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The Orc Warlord looks at you with an appraising glance.$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Silent Slayer' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
					<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>MM</name>
						<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList />
						<regexCodePropertyList />
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A powerful olog-hai</name>
							<script>cecho(' &lt;yellow&gt;120')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A powerful olog-hai\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A burly beast of a guard</name>
							<script>cecho(' &lt;yellow&gt;75')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A burly beast of a guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An orc prowler</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An orc prowler\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An amazingly sweaty troll</name>
							<script>cecho(' &lt;yellow&gt;175')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An amazingly sweaty troll$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A junior officer</name>
							<script>cecho(' &lt;yellow&gt;150')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A junior officer$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A sleeping guard</name>
							<script>cecho(' &lt;yellow&gt;80')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A sleeping guard\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A shouting cook</name>
							<script>cecho(' &lt;yellow&gt;150')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A shouting cook$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A wounded Colonel</name>
							<script>cecho(' &lt;yellow&gt;300')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A wounded Colonel$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A young harem girl</name>
							<script>cecho(' &lt;yellow&gt;150')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A young harem girl\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An exhausted cook</name>
							<script>cecho(' &lt;yellow&gt;150')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An exhausted cook$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A quiet orc</name>
							<script>cecho(' &lt;yellow&gt;140')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A quiet orc\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>An intoxicated sergeant</name>
							<script>cecho(' &lt;yellow&gt;140')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ An intoxicated sergeant$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A young officer</name>
							<script>cecho(' &lt;yellow&gt;256')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A young officer$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A patrolling orc</name>
							<script>cecho(' &lt;yellow&gt;120')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A patrolling orc\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A patrolling variag</name>
							<script>cecho(' &lt;yellow&gt;150')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A patrolling variag\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Akhor, the necromancer's apprentice</name>
							<script>cecho(' &lt;yellow&gt;100')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ Akhor, the necromancer's apprentice$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A burly numenorean</name>
							<script>cecho(' &lt;yellow&gt;110')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A burly numenorean\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A crouched troll</name>
							<script>cecho(' &lt;yellow&gt;79')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A crouched troll $</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A lost uruk-hai</name>
							<script>cecho(' &lt;yellow&gt;112')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A lost uruk-hai\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A numenorean intelligence officer</name>
							<script>cecho(' &lt;yellow&gt;76')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A numenorean intelligence officer\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>The commander of the guard</name>
							<script>cecho(' &lt;yellow&gt;259')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ The commander of the guard$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A numenorean sentry eying you suspiciously</name>
							<script>cecho(' &lt;yellow&gt;182')</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A numenorean sentry eying you suspiciously\s?\[?[\d+]?\]?$</string>
								<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then return true end</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>4</integer>
							</regexCodePropertyList>
						</Trigger>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>A trapped ranger of Ithilien</name>
							<script>if getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul' or getRoomAreaName(getRoomArea(map.currentRoom)) == 'Minas Morgul Tier 2' then
  cecho(' &lt;yellow&gt;110')
end</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string>^ A trapped ranger of Ithilien$</string>
								<string>^ A ranger of Ithilien with his hands tied up</string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>1</integer>
								<integer>1</integer>
							</regexCodePropertyList>
						</Trigger>
					</TriggerGroup>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Umbar</name>
					<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>A shady character searches the ruins</name>
						<script>cecho(' &lt;yellow&gt;120')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ A shady character searches the ruins$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>A filthy assassin lurks in the shadows</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ A filthy assassin lurks in the shadows$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Eldegur, a keep guard</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Eldegur, a keep guard</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Dirvion, a keep guard</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Dirvion, a keep guard</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Araahim, a keep guard</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Araahim, a keep guard</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Delebar, a keep guard</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Delebar, a keep guard</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Calmant, a keep guard</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Calmant, a keep guard</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Estaron, a keep guard</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Estaron, a keep guard</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Beomich, a keep guard</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Beomich, a keep guard</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Barlach, a keep guard</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Barlach, a keep guard</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Ceandil, a keep guard</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Ceandil, a keep guard</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>A haradrim scentmaster</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ A haradrim scentmaster$</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>A Numenorean scholar</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ A Numenorean scholar$</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>A haradrim mail courier</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ A haradrim mail courier$</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>A haradrim mail clerk</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ A haradrim mail clerk$</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>A corsair captain</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ A corsair captain$</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Amendur, a keep guard</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Amendur, a keep guard</string>
							<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Umbar City" then return true end</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>4</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Rhun</name>
					<script>--\s?\[?[\d+]?\]?$
--cecho(" &lt;yellow&gt;100")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Abagar of the Kine, the town ruler</name>
					<script>cecho(" &lt;yellow&gt;80")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ Abagar of the Kine, the town ruler$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gypsy Caravan</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Jabir, the joyman</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Jabir, the joyman$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Alima dances here</name>
						<script>cecho(' &lt;yellow&gt;000')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Alima dances here$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sadira, the Charm Maker</name>
						<script>cecho(' &lt;yellow&gt;400+')</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Sadira, the Charm Maker</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>You miss</name>
				<script>cecho("&lt;ansi_light_white&gt;..... &lt;red&gt;MISS")


--^You miss (?&lt;target&gt;\X+)\.$</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#fc0107</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You miss (\X+)$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Casting</name>
				<script>cecho("&lt;ansi_light_white&gt;..... &lt;red&gt;CASTING")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You are still casting your spell.</string>
					<string>^You begin to conjure an ice spike.</string>
					<string>^You begin to feel moisture collect on your hands.</string>
					<string>^You form the moisture in your hands into a wedge-shaped mass.</string>
					<string>^You concentrate hard and turn the water into a perfect cone of ice.</string>
					<string>^You gather water from your environment into a small puddle.</string>
					<string>^You concentrate as the water is turned into ice.</string>
					<string>^You grab the ice and mold it into a perfect cone of ice.</string>
					<string>^You continue to focus your efforts on leeching life from [\w\s]+.</string>
					<string>^The atmosphere convulses with angry winds!</string>
					<string>^You complete your ritual and release your deadly grasp from [\w\s]+.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Eaglesight</name>
				<script>cecho("&lt;green&gt; ---STOP WASTING EP&lt;reset&gt;")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>transparent</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Your eyes ache from the strain of maintaining your enhanced vision.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Events</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>step forward</name>
				<script>send("step forward")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>no harm, step forward so I can take a better look at you.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>drop vial</name>
				<script>send("drop empty vial")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^The fluid tastes bitter in your mouth\.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Wine trigger</name>
				<script>if not negativeHPLock then
  send("get wine from cloak;open wine;drink wine")
  timeframe("negativeHPLock", 0, 10)
end
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^.+HP:-\d+</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Damien</name>
				<script>send("spank boy")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^ An annoying little boy</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>falls</name>
				<script>send("kill")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^.* falls to the ground\.$</string>
					<string>Slimy tentacle falls back into the water!</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>0</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>You killed</name>
				<script>send("take all from corpse into wagon;take all from corpse into panniers;take all from corpse into saddlebags;take all from corpse into pack;take all from corpse", false)
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ffffff</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You killed \X+.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Dark Ring Chess</name>
				<script>send("play")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^    The old man raises his staff high in the air and shatters</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Asturasartes Slave Torture</name>
				<script>local torture = matches[2]
send(f"{torture} slave")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Angry necromancer says in Westron: You need to (\w+) the slave now!</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Belegost Mining</name>
				<script>send("get all into pack")
send("get all into basket")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^After a couple picks, you knock the last jewel out of wall onto the ground.$</string>
					<string>^After a couple strikes, you knock the last bit of good metal</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>ER Level 19</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Lead</name>
					<script>local moveDir = matches[2]
tempTimer(3,function() send(moveDir) end)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The haradrim points you in the (\w+) direction.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Ost-in-edhil</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Pour</name>
					<script>send("do close mould,pull out crucible,pour metal into mould,drop crucible,get tongs,get hammer,wield hammer")
tempTimer(120,function() send("do open mould,grip ingot,sit on block,hammer ring") end)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You may pull out the crucible and pour the melted metal into a mould.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hammer</name>
					<script>send("hammer ring")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    With delicate strikes of your hammer, you finally shape the ingot</string>
						<string>^    Gripping your hammer tightly, you aim a few strong blows on the ring,</string>
						<string>^    You gently remove the metal protrusions from inside the ring, caused</string>
						<string>^    You flatten the outside surface of the ring with precisely aimed</string>
						<string>^    With a lot of concentration, you shape the edges of the ring to</string>
						<string>^    You examine the ring carefully and fix some more defects in its</string>
						<string>^    Spotting some not quite flat places inside the ring, you</string>
						<string>^    Your recent fixes to the inside of the ring slightly defected</string>
						<string>^    Having finally made the sides of the ring really smooth,</string>
						<string>^    You alter the shape and size of the ingot, making it possible to</string>
						<string>^    You strike the inside of the ring gently, removing the metal </string>
						<string>^    Taking great care not to spoil your recent work with flattening</string>
						<string>^    Aiming your strikes at the ring precisely, you flatten the outside</string>
						<string>^    With few gentle and precise strikes you manage to fix some more</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Reheat for hammering</name>
					<script>send("do stand up,heat ring,sit on block,hammer ring")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The ring is too cold for the hammering.  Heat it in fire.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Drop Hammer/Get Chisel</name>
					<script>send("do drop hammer,get chisel,engrave ring")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    Taking far more time to look and check your ring than to</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Reheat for engraving</name>
					<script>send("do stand up,heat ring,sit on block,engrave ring")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The ring is too cold for the engraving, heat it in fire.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Reheat to attach gems</name>
					<script>send("do stand up,heat ring,sit on block,attach gem")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The ring is too cold; heat it in the forge first.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Hammering Finished</name>
					<script>send("drop hammer")
cecho("&lt;green&gt;Hammering Finished!  Now choose to engrave and/or attach gems\n")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    Taking far more time to look and check your ring than to</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Thief</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>MT Vault</name>
					<script>t2tMapper.tele("mtvault")
tempTimer(1, function()
  expandAlias("sneak n")
  send("e")
  send("do unlock south door with ornate key,drop key")
  send("s")
  send("do unbuckle chest,open chest,get gold from chest")
  send("n")
end)
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Guards appear and escort you gently, yet firmly, out of the bank.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Spider Mound</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Get equipment</name>
					<script>send("out;wear all from cocoon 1;get all from cocoon 1;draw sword;draw axe;draw spear;cut cocoon 2;cut cocoon 3;cut cocoon 4;cut cocoon 5;drop all from cocoon 2;drop all from cocoon 3;drop all from cocoon 4;drop all from cocoon 5")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You feel you may be able to get out of the cocoon now</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Rohan Joust</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Move lance</name>
					<script>local xAxis, yAxis, xMag, yMag, xMove, yMove
if matches.magX then
  if matches.magX == "off" or matches.magX == "a smidgeon" then
    xMag = "a little"
  end
  if matches.magX == "way off" then
    xMag = "a lot"
  end
end

if matches.magY then
  if matches.magY == " " or matches.magY == " a smidgeon " then
    yMag = "a little"
  end
  if matches.magY == " way " then
    yMag = "a lot"
  end
end

if matches.x then
  if matches.x == "right" then
    xAxis = "left"
  elseif matches.x == "left" then
    xAxis = "right"
  end
end

if matches.y then
  if matches.y == "above" then
    yAxis = "down"
  elseif matches.y == "below" then
    yAxis = "up"
  end
end

local function sendMoves()
  if xAxis then
    xMove = f"move {xAxis} {xMag}"
    send(f"{xMove}")
  end
  if yAxis then
    yMove = f"move {yAxis} {yMag}"
    send(f"{yMove}")
  end
end

sendMoves()</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your lance appears to be dead (?&lt;centered&gt;centered) on the ring</string>
						<string>^Your lance appears to be (?&lt;magX&gt;off|way off|a smidgeon) to the (?&lt;x&gt;right|left+) of the ring</string>
						<string>^Your lance appears to be(?&lt;magY&gt; | way | a smidgeon )(?&lt;y&gt;above|below) the ring</string>
						<string>^Your lance appears to be (?&lt;magX&gt;off|way off|a smidgeon) to the (?&lt;x&gt;right|left+) and(?&lt;magY&gt; | way | a smidgeon )(?&lt;y&gt;above|below) the ring</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Move Lance 2</name>
					<script>if not lanceLock then
  tempTimer(1, function() send("look") end)
  timeframe("lanceLock", 0, 1)
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You move your lance</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Human Hide Pack</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 1</name>
					<script>send("answer terrible dread;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ What is the meaning of the word 'Gorthaur'?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 2</name>
					<script>send("answer anfauglir;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ Who was the mightiest werewolf of Angband?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 3</name>
					<script>send("answer bringer of life;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ What was Lord Melkor called by the Númenoreans?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 4</name>
					<script>send("answer gorthaur;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ What was Lord Sauron called by the elves during the first age?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 5</name>
					<script>send("answer maeglin;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ Who helped Lord Melkor destroy Gondolin?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 6</name>
					<script>send("answer glaurung;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ Who was the father of all uruloki?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 7</name>
					<script>send("answer 3319;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ In what year of the second age did Ar-Pharazon invade Valinor?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 8</name>
					<script>send("answer annatar;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ What was Lord Sauron called in Eregion and Númenor?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 9</name>
					<script>send("answer ungoliant;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ Who helped Lord Melkor darken the bliss of Valinor?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 10</name>
					<script>send("answer 583;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ In what year of the first age was Ancalagon the Black brutally slain?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 11</name>
					<script>send("answer utumno;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ What was the name of the first stronghold that Lord Melkor made?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 12</name>
					<script>send("answer shelob;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ Who is the guardian of Cirith Ungol?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 13</name>
					<script>send("answer scatha;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ Who was the mightiest cold drake in Arda?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 14</name>
					<script>send("answer 1600;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ In what year of the second age did Lord Sauron forge his ring?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 15</name>
					<script>send("answer gothmog;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ Who was the lord of Balrogs?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>HHP 16</name>
					<script>send("answer 510;request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ In what year of the first age was the lord of Balrogs slain?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>DAP</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da16</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Angelimar,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff3300</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Who was the twentieth Prince of Belfalas and Lord</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da15</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Galador,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Who was the first Lord of Dol Amroth</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da14</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Nimrodel,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Who was the "Lady of the White Grotto"</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da13</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Adrahil,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>What was the name of Lord Imrahil's father</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da12</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Amdir,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>What was the name of Amroth's father</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da11</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Ringlo,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>What river forms the northern boundary of Belfalas</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da10</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Gilrain,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>What river forms the eastern boundary of Belfalas</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da9</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Edhellond,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>What is the name of the "Elf Haven" in South Gondor</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da8</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Mithrellas,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>What Elven lady brought Silvan blood to</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da7</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Hill of Amroth,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>What does "Dol Amroth" mean</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da6</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Ciril,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>What is the name of the river between the Ringló and the Morthond?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da5</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer 2129, request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>In what year did Galador die</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da4</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer 1981,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>In what year did Amroth and Nimrodel leave Lórien</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da3</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Dagorlad,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>In what famous battle did Amroth's father die</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da2</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer Drowned,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>How did Amroth die</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>da1</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>do answer 2004,request question</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>In what year was Dol Amroth founded</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>dap</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>yes</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>but perhaps you can help me with one item</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>scribe</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>up</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You may call on the First Knight now</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Derhail's Staff</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Azk Staff 1</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer amandil</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^What was the name of the leader of the traitorous rebels?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Azk Staff 2</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer alcarondas</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^What was the name of Ar-Pharazon's ship?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Azk Staff 3</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer melkor</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Who is the giver of freedom?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Azk Staff 4</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>nswer miriel</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^What was the name of Ar-Pharazon's wife?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Azk Staff 5</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer king's men</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^What was the group of people faithful to Númenor called?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Azk Staff 6</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer eagles</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^What cursed animals did the Valar send to attack Númenor?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Azk Staff 7</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer gimilzor</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Who banned the use of Elven language in Númenor?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Azk Staff 8</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer ban of the valar</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^What was set to prevent mortals from entering Aman?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Azk Staff 9</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer pharazon</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Who was Gimilkhad's great son?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Azk Staff 10</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer atanamir</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Who was the 13th king of Númenor?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Beginning</name>
					<script>send("do enter,e,yank book")
send("do w,out,give book to derhail")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Derhail says in Westron: Hey there, youngling.  Interested in hearing a</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Request question</name>
					<script>send("request question")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Derhail says in Westron: That was the sad story of Westernesse as the</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Receipt of Staff</name>
					<script>send("do enter,w,search under bed")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Derhail gives you an old plain staff.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dead Rat</name>
					<script>send("do store sword,get pebble,e,out,give pebble to derhail,give staff to derhail")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You killed Large rat.</string>
						<string>if getRoomAreaName(getRoomArea(map.currentRoom)) == "Azrakadar" then return true end</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>4</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Crystal Quest</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>crys1</name>
					<script>send("answer two")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>If you were to take two apples from</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>crys2</name>
					<script>send("answer few")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>I know a word of letters three</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>crys3</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer hole</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>the barrel would become lighter</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>crys4</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer nothing</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>What's better than the best thing</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>crys5</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer stars</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>At night they come without being fetched</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>crys6</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer goose</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>What grows up while growing down?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>crys7</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>answer half way</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>How far can a dog run into the woods?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>crys8</name>
					<script>send("give cloth to wizard;give crystal to wizard")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>I'll need a large piece of crystal and some sort</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>BSL</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>BSL 1</name>
					<script>t2tMapper.go("underbrush")
tempTrigger("On a path in the forest", function() send("examine underbrush") end, 1)
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>How can I live with such guilt?</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>BSL 2</name>
					<script>t2tMapper.go("bsl")
tempTrigger("Inside the elf commander's tent", function() send("inform commander about attack") end, 1)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>you bury his corpse to prevent the orcs</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>BSL 3</name>
					<script>t2tMapper.go("underbrush")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^     me, and I will reward you.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>BSL4</name>
					<script>send("reassure elf",false)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>You begin to examine the underbrush</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>FR Level 19 Quest</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gollum - Lvl 19</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand>tame gollum</mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Having suffered massive damage, Gollum falls to the ground!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gollum points</name>
					<script>send(f"{matches[2]}")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Gollum points you toward the (\w+).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Shadow Sword</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Jailboat</name>
					<script>t2tMapper.tele("jailboat")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^before being dragged off to the quays of the city.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Quest complete</name>
					<script>t2tMapper.tele(70390)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Jureka runs out of the room, dragging you and Galor behind him.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Gags</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Gags</name>
				<script>deleteLine()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^The puppy</string>
					<string>^ An annoying puppy</string>
					<string>^Damien</string>
					<string>^Duck</string>
					<string>^Puppy</string>
					<string>^The Puppy</string>
					<string>^Gleam starts casting a spell.</string>
					<string>^    Gleam opens up his arms and attempts to form a flower.  At his</string>
					<string>^command, a small green plant grows and blooms into a beautiful flower.</string>
					<string>^Dell tells you: Hey there, buckaroo.</string>
					<string>chestnut gelding neighs</string>
					<string>chestnut gelding paws</string>
					<string>chestnut gelding whinnies</string>
					<string>chestnut gelding lets loose</string>
					<string>^Karen</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Bars</name>
				<script>deleteLine()
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Dwallen, rather drunkenly, belches and takes another gulp of his ale.$\n</string>
					<string>^A soldier takes a swig from his cup.$\n</string>
					<string>^Dwallen smiles at you with glazed-over eyes and giggles.$\n</string>
					<string>^A soldier pulls a locket out of his tunic, stares at it, and$\n</string>
					<string>^puts it away with a tear in his eye.$\n</string>
					<string>^A soldier slams his cup on the bar and says: Those orcs will$\n</string>
					<string>^pay for Jolgar's death!$\n</string>
					<string>^A soldier burps rudely\.$\n</string>
					<string>^A soldier mutters something about fallen comrades.$\n</string>
					<string>^A soldier mutters: All dead, they are all dead\.\.\.$\n</string>
					<string>^     need some wine!$\n</string>
					<string>^     the gut for nothing but water\?$\n</string>
					<string>^     ale\?$\n</string>
					<string>^Dairuia says in Silvan: What shall it be for ya soldier\.\.\. you look to$\n</string>
					<string>^Dairuia says in Silvan: You look as though you need a beer\.\.\. or have you$\n</string>
					<string>^Dairuia says in Silvan: I can get you some mead or would you like a little$\n</string>
					<string>^Dunyth says in Variag: Hey buddy, couldzya givess meeee gold\?$\n</string>
					<string>^Dunyth says in Variag: Waf abut this wether, beer\?$\n</string>
					<string>^Treg says in Haradaic: What'll it be then\?$\n</string>
					<string>^Dunyth mumbles under his breath.$\n</string>
					<string>^Treg walks over and takes an order from another customer.$\n</string>
					<string>^Treg cleans out a mug.\n</string>
					<string>^Treg says in Haradaic: Have you heard any news from the north\?$\n</string>
					<string>^Dairuia says: What shall it be for ya soldier\.\.\. you look to need some</string>
					<string>^Dairuia says: I can get you some mead or would you like a little ale\?</string>
					<string>^Dairuia says: You look as though you need a beer\.\.\. or have you the gut</string>
					<string>^     for nothing but water\?</string>
					<string>^     wine\!</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Highlights</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Light Cyan</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#20ffff</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>\((rough)\)</string>
					<string>\((wielded)\)</string>
					<string>A large mat of moss</string>
					<string>^Suddenly you have a massive headache.$</string>
					<string>^Your headache clears up.</string>
					<string>^You are totally wasted.$</string>
					<string>^You have a bad headache.$</string>
					<string>^You are somewhat drunk.$</string>
					<string>^You are a bit tipsy.$</string>
					<string>^You are completely smashed.$</string>
					<string>^You are too drunk to remember even your own name.$</string>
					<string>^Your head is clearing.$</string>
					<string>^You still feel drunk.$</string>
					<string>^You can see straight again.$</string>
					<string>^You are suddenly able to remember your own name.$</string>
					<string>^The world finally stops spinning and settles down.$</string>
					<string>^The room stops spinning.$</string>
					<string>\((guildmistress)\)  $</string>
					<string>\((guildmaster)\)  $</string>
					<string>^ A brightly painted gypsy wagon</string>
					<string>^You are rather drunk.</string>
					<string>\((Guildmaster)\)</string>
					<string>\((Guildmistress)\) </string>
					<string>^You are too drunk to care how skilled you are.</string>
					<string>^You attempt to check the inventory, but are much too drunk.</string>
					<string>^You attempt to check your inventory, but are much too drunk.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>0</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Parenthesis</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffff0a</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\(</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Parenthesis 2</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffff0a</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Blue</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#0000ff</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>\((worn)\)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Parenthesis</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffff0a</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(\()</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Parenthesis 2</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffff0a</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(\))</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Magenta</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#fc02ff</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>\((being led by you)\)</string>
					<string>\((being pulled by your mount)\)</string>
					<string>\[(packed)\]</string>
					<string>^You begin to hunt \X+.</string>
					<string>^Oh no, \X+ avoids your fireball!</string>
					<string>^The fireball fizzles out harmlessly.</string>
					<string>^You are too busy to make an attack!</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Parenthesis</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffff0a</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\(</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Parenthesis 2</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffff0a</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</Trigger>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Professional Skills</name>
				<script>profSkills = profSkills or {}
profSkills.profLines = nil
</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>4</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Professional Skills:.+</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Prof Skill values</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#20ffff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string> (\d+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Prof Skills names</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffffff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([A-Za-z ]+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Colon highlight</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>\:</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Score</name>
				<script>max_hp = matches.maxhp
max_ep = matches.maxep</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>4</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^HP\: \d+\/(?&lt;maxhp&gt;\d+)\s+END\: \d+\/(?&lt;maxep&gt;\d+)\s+Avg\. Stats\: \d+\s+Quests done\: \d+$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Color Words</name>
					<script>
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffffff</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([A-Za-z]+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Color Values</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#21ff06</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(\d+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Color Colon</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(\:)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Level and Alignment</name>
					<script>local avgStats = t2tvars.avgStats
local expLevels = t2tvars.expLevels
currentProf = matches.prof
currentLevel = matches.level
local nextLevel = currentLevel+1
local nextLevelExp = expLevels[nextLevel]
local nextLevelStats = avgStats[nextLevel]
local currLevel = tonumber(currentLevel)

if nextLevelStats and nextLevelStats ~= "" then
  cecho(f"\n\n&lt;white&gt;Avg Stats required for next level: &lt;ansi_light_cyan&gt;{nextLevelStats}&lt;reset&gt;.")
end

if expLevels[nextLevel] and expLevels[nextLevel] ~= "" and expLevels[nextLevel] &gt; tonumber(currentExp) then
    local remainingExp = expLevels[nextLevel] - tonumber(currentExp)
    cecho(f"\n&lt;white&gt;Experience remaining for next level: &lt;ansi_light_cyan&gt;{remainingExp}&lt;reset&gt;.")
else 
    cecho(f"\n&lt;white&gt;Experience requirement for next level has been met.")
end

if (expLevels[currLevel]/.8) &gt; tonumber(currentExp) then
    local remainingExp = (expLevels[currLevel]/.8) - tonumber(currentExp)
    cecho(f"\n&lt;white&gt;Experience needed to remain at current level after death: &lt;ansi_light_cyan&gt;{remainingExp}&lt;reset&gt;.")
else 
    cecho(f"\n&lt;white&gt;Experience loss after death will not cause level drop.")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffffff</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Level (?&lt;level&gt;\d+) (?&lt;prof&gt;\w+),\X+Alignment: \X+$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Exp</name>
					<script>currentExp = matches[2]</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#21ff06</mFgColor>
					<mBgColor>#000000</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Current exp: (\d+).*Total exp: (\d+)$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Skills</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>3</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Common Skills</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Color Words</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ffffff</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>([A-Za-z]+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Color Values</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#21ff06</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(\d+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Color Colon</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(\:)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Uptime</name>
				<script>--raiseEvent('onUptime')</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ffffff</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^(The Two Towers has been up for) [\w\s\d]+.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>uptime time</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#00ff00</mFgColor>
					<mBgColor>transparent</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The Two Towers has been up for ([\w\s\d]+).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Uptime Value Days</name>
					<script>t2tvars["uptimeDays"] = matches.days
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string> (?&lt;days&gt;\d+)d </string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Uptime Value Hours</name>
					<script>t2tvars["uptimeHours"] = matches.hours</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string> (?&lt;hours&gt;\d+)h </string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Uptime Value Minutes</name>
					<script>t2tvars["uptimeMinutes"] = matches.minutes</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string> (?&lt;minutes&gt;\d+)m </string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Uptime Value Seconds</name>
					<script>t2tvars["uptimeSeconds"] = matches.seconds</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string> (?&lt;seconds&gt;\d+)s.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Light Yellow</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ffff0a</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You put (\d+) gold in your pockets.$|^You put (\d+) gold in your pocket.$</string>
					<string>^Your current balance is (\d+) gold.</string>
					<string>\((Power)\)  $</string>
					<string>\((Maia)\)  $</string>
					<string>\((Elder)\)  $</string>
					<string>\((Overlord)\)  $</string>
					<string>\((burning)\)</string>
					<string>^Old man gives you an ominous dark ring.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>White</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ffffff</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>\((in hands)\)</string>
					<string>\((open)\)</string>
					<string>There is too much light here</string>
					<string>^Darkness surrounds you.$</string>
					<string>\((free)\)  $</string>
					<string>^ An Orc courier pack</string>
					<string>^You continue to focus on making your staff emit light.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>0</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Red</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#990000</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>\((evil)\)  $</string>
					<string>^ A dark (red) medallion.</string>
					<string>^ A (bloodstained) cloak</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Dark Cyan</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#00716e</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>\((Imended)\)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Multi</name>
				<script>--showCaptureGroups()
local encumbrance = string.trim(matches[3])

selectCaptureGroup(2)
fg("ansi_light_yellow")
deselect()
resetFormat()

selectCaptureGroup(3)
if encumbrance == "unencumbered" then
	fg("ansi_light_cyan")
elseif encumbrance == "lightly encumbered" then
	fg("ansi_cyan")
elseif encumbrance == "moderately encumbered" then
	fg("ansi_light_blue")
elseif encumbrance == "heavily encumbered" then
	fg("ansi_red")
elseif encumbrance == "severely encumbered" then
	fg("ansi_light_red")
end
deselect()
resetFormat()</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Gold: (\d+).+Encumbrance:(.+)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Light Green</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#21ff06</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>A worried merchant flees to safety</string>
					<string>A street thug</string>
					<string>An old wise man stands here, staring at you calmly</string>
					<string>A salierim flower</string>
					<string>A vial of vigour</string>
					<string>^[\*\s](A crystal)\s+\(worn\)</string>
					<string>^[\*\s](A crystal)\s+\(glowing\)</string>
					<string>^You start casting lightning.</string>
					<string>^The air charges with electricity!</string>
					<string>^You begin summoning the destructive forces of nature!</string>
					<string>^ A calm Ranger, scouting the land</string>
					<string>^ An orc healer</string>
					<string>^Your lance appears to be dead centered on the ring.</string>
					<string>^ A senile healer$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>0</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Light Red</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^ An ugly orc$</string>
					<string>^YoU aRE MUch tOo DRunK tO TakE iNvenTory.</string>
					<string>^You sneak up and stab \X+ from behind!</string>
					<string>^Your concentration has been broken!</string>
					<string>^Your spell is aborted!</string>
					<string>^Your will has been broken!</string>
					<string>^You become too distracted to continue.</string>
					<string>^You are still unconscious.</string>
					<string>^You fall to the ground.</string>
					<string>^You regain conciousness.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Orange</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#fd8008</mFgColor>
				<mBgColor>#000000</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You are wearing barkskin.$</string>
					<string>^You are giving off light and wearing barkskin.$</string>
					<string>^You are giving off light.$</string>
					<string>^You are sitting down, relaxing peacefully.$</string>
					<string>^You are surrounded by flames.</string>
					<string>^You are hunting Orc.</string>
					<string>^You are extending your vision.</string>
					<string>^Your skin is beginning to soften.</string>
					<string>^Your skin returns to normal.</string>
					<string>^You have a stinging sensation in your skin.</string>
					<string>^You undergo a few moments of intense pain as your skin hardens into bark.</string>
					<string>^You are casting a spell and wearing barkskin.</string>
					<string>^You undergo a few moments of intense pain as your skin re-hardens into bark.</string>
					<string>^You are extending your vision and wearing barkskin.</string>
					<string>^You are preparing to multinock.</string>
					<string>^You are so full that you fear you might explode any minute now\!\!\!</string>
					<string>^You are full!  You feel like a blimp.</string>
					<string>^Your stomach is almost full, barely room for another bite.</string>
					<string>^Your tummy is very happy, but not yet full.</string>
					<string>^You have had just enough food to silence your stomach.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Daytime</name>
				<script>if matches[1] == "A faint glow appears in the east." then
  tempDaytime = 0500
  cecho(f" &lt;red&gt;{tempDaytime}")
elseif matches[1] == "The sun appears at the edge of the eastern sky." then
  tempDaytime = 0600
  cecho(f" &lt;red&gt;{tempDaytime}")
elseif matches[1] == "The sun has risen and the day begins." then
  tempDaytime = 0700
  cecho(f" &lt;red&gt;{tempDaytime}")
elseif matches[1] == "The sun climbs into the highest part of the sky." then
  tempDaytime = 1100
  cecho(f" &lt;red&gt;{tempDaytime}")
elseif matches[1] == "The sun begins to pass towards the western sky." then
  tempDaytime = 1300
  cecho(f" &lt;red&gt;{tempDaytime}")
elseif matches[1] == "The sun sinks towards the western horizon." then
  tempDaytime = 1700
  cecho(f" &lt;red&gt;{tempDaytime}")
elseif matches[1] == "The sun sets beyond the western horizon." then
  tempDaytime = 1800
  cecho(f" &lt;red&gt;{tempDaytime}")
elseif matches[1] == "Twilight fades and the night begins." then
  tempDaytime = 1900
  cecho(f" &lt;red&gt;{tempDaytime}")
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#20ffff</mFgColor>
				<mBgColor>transparent</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^A faint glow appears in the east.</string>
					<string>^The sun appears at the edge of the eastern sky.</string>
					<string>^The sun has risen and the day begins.</string>
					<string>^The sun climbs into the highest part of the sky.</string>
					<string>^The sun begins to pass towards the western sky.</string>
					<string>^The sun sinks towards the western horizon.</string>
					<string>^The sun sets beyond the western horizon.</string>
					<string>^Twilight fades and the night begins.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Party Mode</name>
			<script>showCaptureGroups()</script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList>
				<string>(\w+)</string>
			</regexCodeList>
			<regexCodePropertyList>
				<integer>1</integer>
			</regexCodePropertyList>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Substitutions</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Sizing you up</name>
				<script>deleteLine()
cecho(f"\n&lt;red&gt;You notice &lt;white&gt;{matches[2]} &lt;red&gt;sizing you up.")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You notice (.+) sizing you up\.</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Target Condition</name>
				<script>local target = matches.target
local shape = matches.shape
local epShape = matches.epShape

deleteLine()

local shapeText, shapeTextEnd, targetText, epText, shapeLine
if shape == "perfect shape" then
	shapeText = "&lt;ansi_light_green&gt;*** PERFECT "
	shapeTextEnd = " &lt;ansi_light_green&gt;PERFECT ***&lt;reset&gt;"

elseif shape == "good shape" then
	shapeText = "&lt;ansi_light_cyan&gt;*** GOOD "
	shapeTextEnd = " &lt;ansi_light_cyan&gt;GOOD ***&lt;reset&gt;"

elseif shape == "average shape" then
	shapeText = "&lt;ansi_light_yellow&gt;*** AVERAGE "
	shapeTextEnd = " &lt;ansi_light_yellow&gt;AVERAGE ***&lt;reset&gt;"

elseif shape == "look so great" then
	shapeText = "&lt;ansi_light_magenta&gt;*** DLSG "
	shapeTextEnd = " &lt;ansi_light_magenta&gt;DLSG ***&lt;reset&gt;"

elseif shape == "near death" then
	shapeText = "&lt;ansi_light_red&gt;*** NEAR DEATH "
	shapeTextEnd = " &lt;ansi_light_red&gt;NEAR DEATH ***&lt;reset&gt;"
end

targetText = f"&lt;ansi_light_white&gt;{target}&lt;reset&gt;"

if epShape then
	if epShape == "very energized" then
		epText = "&lt;ansi_green&gt; EP VERY HIGH&lt;reset&gt;"
	elseif epShape == "quite spry" then
		epText = "&lt;ansi_cyan&gt; EP HIGH&lt;reset&gt;"
	elseif epShape == "somewhat worn" then
		epText = "&lt;ansi_yellow&gt; EP MEDIUM&lt;reset&gt;"
	elseif epShape == "rather fatigued" then
		epText = "&lt;ansi_magenta&gt; EP LOW&lt;reset&gt;"
	elseif epShape == "completely exhausted" then
		epText = "&lt;ansi_red&gt; EP VERY LOW&lt;reset&gt;"
	end
end

if epText then
  shapeLine = shapeText .. targetText .. shapeTextEnd .. epText
else
  shapeLine = shapeText .. targetText .. shapeTextEnd
end

cecho(f"\n{shapeLine}\n")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^(?&lt;target&gt;.+) (is|are|doesn't|don't) (in)?\s?(?&lt;shape&gt;perfect shape|good shape|average shape|near death|look so great)\.?\s?(and|but)?\s?(look |looks )?(?&lt;epShape&gt;very energized|quite spry|somewhat worn|rather fatigued|completely exhausted)?\.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>t2t addons</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Mapper Addons</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shelob Movement</name>
					<script>local shortDirs = {north = 'n', south = 's', west = 'w', east = 'e', down = 'd', up = 'u', northeast = 'ne', northwest = 'nw', southeast = 'se', southwest = 'sw', ['in'] = 'in', out = 'out'}

local nextMove
if shortDirs[lastMove] then
  nextMove = shortDirs[lastMove]
else
  nextMove = lastMove
end
send(nextMove)





--if tempDir ~= command then
 -- local exitRepeat = shortDirs[tempDir]
 -- send(exitRepeat)
--end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your legs tire as they push through air as thick as treacle</string>
						<string>^Doubts and fears assail you, filling you with the desire</string>
						<string>^You seem to get nowhere as you welcome and dwell on the delicious</string>
						<string>^The air seems to be running out in this tunnel</string>
						<string>^Shelob must be messing with your mind. The darkness seems</string>
						<string>^The atmosphere feels like it has turned to cotton wool</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>COU</name>
					<script>tempTimer(.5, [[ map.find_me(nil, nil, nil, true)]])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    WHAM!!!  You smash into the deck of the ship, obviously$</string>
						<string>^    SPLASH!!!!  You descend beautifully into the cool waters of$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Random Locations</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Kurak</name>
						<script>kurak = map.currentRoom
cecho(f"\n&lt;cyan&gt;Location of Kurak saved at {getRoomName(map.currentRoom)} -- Room:  &lt;red&gt;{map.currentRoom}")
cecho("\n&lt;ansi_light_green&gt;To return to Kurak, use the alias 'kurak'.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#20ffff</mFgColor>
						<mBgColor>transparent</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Kurak, the Renegade Ranger stands ready</string>
							<string>^ A large rock, covered with leaves</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Kheligan</name>
						<script>kheligan = map.currentRoom
cecho(f"\n&lt;cyan&gt;Location of Kheligan saved at {getRoomName(map.currentRoom)} -- Room:  &lt;red&gt;{map.currentRoom}")
cecho("\n&lt;ansi_light_green&gt;To return to Kheligan, use the alias 'kheligan'.")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#20ffff</mFgColor>
						<mBgColor>transparent</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^ Kheligan, the not-so feeble fighter</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Travelto Location Reset</name>
					<script>send("glance")
expandAlias("map me")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Travelto: Destination reached</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Follow</name>
					<script>
send(matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Orc leaves (\w+)\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>PVP</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>PVP Check Trigger</name>
					<script>local pvpon = matches[2]
table.insert(pvpScript.whoList.pvpList, pvpon)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+)\'s PvP flag is set to on.</string>
						<string>^(\w+)\' PvP flag is set to on.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Who All Group</name>
					<script>local whoName = matches[2]
table.insert(pvpScript.whoList.userList, whoName)
--setTriggerStayOpen("Who All Group", 1)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>10</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+)\s.*the dunedain</string>
						<string>^(\w+)\s.*the dunlending</string>
						<string>^(\w+)\s.*the dwarf</string>
						<string>^(\w+)\s.*the edain</string>
						<string>^(\w+)\s.*the eorling</string>
						<string>^(\w+)\s.*the hobbit</string>
						<string>^(\w+)\s.*the silvan</string>
						<string>^(\w+)\s.*the sindar</string>
						<string>^(\w+)\s.*the easterling</string>
						<string>^(\w+)['\w]+?\s.*the haradrim</string>
						<string>^(\w+)\s.*the numenorean</string>
						<string>^(\w+)\s.*the variag</string>
						<string>^(\w+)\s.*the uruk-hai</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Who All Trigger Disable</name>
						<script>disableTrigger("Who All Group")
raiseEvent("onPVP")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Total users: \d+$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Backstab</name>
					<script>if matches.backstabber then
  raiseEvent("onBackstab", matches.backstabber)
end

if matches.failedbackstabber then
  raiseEvent("onFailedBackstab", matches.failedbackstabber)
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Without warning, (?&lt;backstabber&gt;\w+) stabs you from behind!</string>
						<string>^You hear (?&lt;failedbackstabber&gt;\w+) sneaking up behind you, suddenly you spin and throw him to</string>
						<string>^(?&lt;backstabber&gt;\w+) circles around you and stabs you from behind!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Current HP/EP</name>
					<script>--showMultimatches()
currentHP = multimatches[2][2]
currentEP = multimatches[2][3]</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string></string>
						<string>HP:(\d+) EP:(\d+)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>7</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Inventory Management Triggers</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Disable Inventory Capture</name>
					<script>disableTrigger("Inventory Management Triggers")
raiseEvent("onSetCurrentInventory")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string></string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>7</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Inventory Match</name>
					<script>local nameCapture = tostring(matches[2])

if table.contains(invTables, nameCapture) then
  invFlags[nameCapture] = true
end

if table.contains(invTables.Weapons, nameCapture) then
  weapFlags[nameCapture] = true
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ (.+)\s\(</string>
						<string>^ (.+)\.</string>
						<string>^ (.+)$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Info Panels</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Forge</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Forge 1</name>
						<script>raiseEvent("onNewForgeRound")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>transparent</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You place it on the table to inspect it. </string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Forge 2</name>
						<script>send("hammer metal")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>The tongs now hold a bar of metal that</string>
							<string>^You are ready for the next phase of hammering.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Forge 3</name>
						<script>send("quench blade")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#008000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>with a hilt attached and a good</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Forge 4</name>
						<script>if t2tvars["forgeCount"] and (t2tvars["forgeCount"] &gt; 0) and (t2tvars["forgeCount"] &lt; 9) then
  send("drink keg")
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are suddenly able to remember your own name.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Forge 5</name>
						<script>raiseEvent("onForgeStop")

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your time is up.  Finish up now.</string>
							<string>Alas, your time has run out.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Forge 6</name>
						<script>raiseEvent("onForgeStart")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>turns and adds some more wood to the forge.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Workshop 1</name>
						<script>send("3")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Ah, I see your blade needs some work</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Workshop 2</name>
						<script>send("wrap hilt")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>Your blade now has a cross-piece securely attached</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Workshop 3</name>
						<script>send("polish blade")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>you have a grip which feels extremely comfortable</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Workshop 4</name>
						<script>send("sharpen blade")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>After using the wheeled buffers</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Workshop 5</name>
						<script>raiseEvent("onForgeReset")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>It takes dedication and perseverance</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>0</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>No keg</name>
						<script>expandAlias("wine")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^There is no keg here.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Inns</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Inn Reset</name>
						<script>raiseEvent("onInnReset")
cecho("\n&lt;cyan&gt;Inns Reset\n")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^The sun has risen, and it is time to check out</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Inn Rental</name>
						<script>if map.currentRoom then
  local innName = t2tMapperAddons.returnInn(map.currentRoom)
  if table.contains(t2tvars.innTable,innName) then
    t2tvars.innTable[innName] = true
  end
  --raiseEvent("onUpdateInns")
end

</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Quartermaster says: (.*), yes, (.*)  Your room is upstairs</string>
							<string>^    You are tossed a standard issue tent</string>
							<string>^You already have a tent rented here</string>
							<string>^Thank you!  Your room is upstairs</string>
							<string>^You already have a room rented here</string>
							<string>^Sina thanks you and points towards the west door</string>
							<string>^You've already rented a room here.</string>
							<string>^The merchant tells you: Thank you. Pick a tent west of here.</string>
							<string>^The merchant tells you: You've already rented a tent. Just go to it. It's west of here</string>
							<string>^Gertruda says: Thanks for the gold, now get out of my sight</string>
							<string>^The proprietor thanks you and directs you up the stairs to your room</string>
							<string>^Your room already awaits you</string>
							<string>^The innkeeper says: Be blessed.  I have a room for you upstairs.</string>
							<string>^Your room already awaits my friend.</string>
							<string>^Voshlor points towards your cave</string>
							<string>^You have a cave already.</string>
							<string>^Your room is upstairs.</string>
							<string>^Your room is just to the south.  Have a quiet sleep.</string>
							<string>^    The bartender takes your gold and </string>
							<string>^Thank you!  Your room is just east, among the guest bedrooms.</string>
							<string>^You sign your name in the ledger.  Your room is upstairs!</string>
							<string>^Sealeya points upstairs and says: Your room is up and to the right!</string>
							<string>^Gilmar points upstairs and says in a gruff voice: Your room is up there!</string>
							<string>^Thanks, friend.  Your room is through the door to the west.</string>
							<string>Atli takes your gold with a smile. </string>
							<string>^    The innkeeper smiles at you warmly and takes</string>
							<string>^Your box has been moved to your new room.</string>
							<string>^You rent a space on the floor of the common sleeping room upstairs.</string>
							<string>^You've already rented a space on the floor.</string>
							<string>^Thanks, friend.  Your room is up the stairs.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mordor Password Capture</name>
					<script>tempPass = matches[2]
raiseEvent('onSetMordorUptime', tempPass)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\s\s\s\s\s\'(\w+)\'... but I must go now!$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Bank Gold</name>
					<script>currentBalance = matches.balance</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your current balance is (?&lt;balance&gt;\d+) gold.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Find System</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Find Request</name>
					<script>local sender = multimatches[1][2]
local target = multimatches[1][3]
sender = string.lower(sender)
target = string.lower(target)
raiseEvent("onFindRequest",sender,target)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#00ff00</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(\w+) tells you: find (\w+)$</string>
						<string>FG5BG-2</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>6</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Find Results Group</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Sense</name>
						<script></script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You focus your dark powers around you, and are able to tell that (\w+)\s?\w?\w?$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Zone and Subzone</name>
						<script>result_zone = matches[2]
result_subzone = matches[3]
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^\w+ is in (\X+) at (\X+).$</string>
							<string>^in (\X+) at (\X+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Room</name>
						<script>result_room = matches[2]
raiseEvent("onFindSuccess")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^In the room: (\X+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Boat</name>
						<script>result_room = matches[2]
raiseEvent("onBoat")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^In a boat in: (\X+)\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Mount</name>
						<script>result_room = matches[2]
raiseEvent("onMount")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^On a mount in: (\X+).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>User Not Online</name>
						<script>raiseEvent("onTargetOffline")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+) is not logged in right now.$</string>
							<string>^You can sense no such presence in Arda.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Not Online Long Enough</name>
						<script>raiseEvent("onTooSoon")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You have not been online long enough to find that player.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Find Failure</name>
						<script>raiseEvent("onFindFailure")
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Your sense attempt fails.$</string>
							<string>^Your find attempt fails.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Fighting</name>
						<script>raiseEvent("onInCombat")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^Try fighting first, then worry about other stuff.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Not enough EP</name>
						<script>raiseEvent("onLowEP")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are too tired to concentrate that much.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Self Find</name>
						<script>raiseEvent("onSelfFind")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You should be experienced enough by now to figure where you are\.$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Chat Window</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tells In</name>
					<script>selectCurrentLine() 
setBgColor(0,0,0)
deselect()
resetFormat()


local tellsIn = tellsIn or {}
tellsIn.lines = copy2decho()
tabEMCO:decho("Tells", "\n" ..tellsIn.lines.. "\n") </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#00ff00</colorTriggerFgColor>
					<colorTriggerBgColor>#c0c0c0</colorTriggerBgColor>
					<regexCodeList>
						<string>FG5BG16</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>6</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Tells Out</name>
					<script>selectCurrentLine() 
setBgColor(0,0,0)
deselect()
resetFormat()


local tellsOut = tellsOut or {}
tellsOut.lines = copy2decho()
tabEMCO:decho("Tells", "\n" ..tellsOut.lines.. "\n") </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#ff0000</colorTriggerFgColor>
					<colorTriggerBgColor>#c0c0c0</colorTriggerBgColor>
					<regexCodeList>
						<string>FG3BG16</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>6</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Guild Comm</name>
					<script>selectCurrentLine() 
setBgColor(0,0,0)
setFgColor(0,255,0)
deselect()
resetFormat()


local guildComm = guildComm or {}
guildComm.lines = copy2decho()
tabEMCO:decho("Guild", "\n" ..guildComm.lines.. "\n") </script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#008080</colorTriggerFgColor>
					<colorTriggerBgColor>#c0c0c0</colorTriggerBgColor>
					<regexCodeList>
						<string>FG14BG16</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>6</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Map Alignment</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Align Me</name>
					<script>raiseEvent("onClearAlign")
enableTrigger("Align Results")
send("score")
send("align me here")

</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You return from the dead.$</string>
						<string>^You restore your alignment description.$</string>
						<string>^You remove an iridescent black cloak.$</string>
						<string>^You hide your alignment.$</string>
						<string>^You wear an iridescent black cloak.$</string>
						<string>^The captive screams in agony!</string>
						<string>^    Aghast, the watchguard runs out of the room in horror!</string>
						<string>^You eat a human leg.  Disgusting!</string>
						<string>^Prisca snatches her stuffed bear!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="yes" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Login/Recon</name>
					<script>raiseEvent("onClearAlign")
enableTrigger("Align Results")
tempTimer(1, [[ send("score;align me here;glance;uptime")]])
tempTimer(2, [[ map.find_me(nil, nil, nil, true)]])
t2tMapper.nextRoomName = nil
local condition = matches[2]
if condition == "Last logon" then
  raiseEvent("onInnReset")
  cecho("\n&lt;cyan&gt;Inns Reset\n")
end
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(Last logon):</string>
						<string>^(Reconnected).</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Align Results</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Score Alignment for ERs</name>
						<script>local freeRaces = {"dunedain", "dunlending", "dwarf", "edain", "eorling", "hobbit", "silvan", "sindar"}
local evilRaces = {"easterling", "haradrim", "numenorean", "variag", "uruk-hai"}

local race = matches.race
if table.contains(freeRaces, race) then
	evilRace = false
elseif table.contains(evilRaces, race) then
	evilRace = true
end
</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^(\w+)\s.*the (?&lt;race&gt;easterling)</string>
							<string>^(\w+)['\w]+?\s.*the (?&lt;race&gt;haradrim)</string>
							<string>^(\w+)\s.*the (?&lt;race&gt;numenorean)</string>
							<string>^(\w+)\s.*the (?&lt;race&gt;variag)</string>
							<string>^(\w+)\s.*the (?&lt;race&gt;uruk-hai)</string>
							<string>^(\w+)\s.*the (?&lt;race&gt;dunedain)</string>
							<string>^(\w+)\s.*the (?&lt;race&gt;dunlending)</string>
							<string>^(\w+)\s.*the (?&lt;race&gt;dwarf)</string>
							<string>^(\w+)\s.*the (?&lt;race&gt;edain)</string>
							<string>^(\w+)\s.*the (?&lt;race&gt;eorling)</string>
							<string>^(\w+)\s.*the (?&lt;race&gt;hobbit)</string>
							<string>^(\w+)\s.*the (?&lt;race&gt;silvan)</string>
							<string>^(\w+)\s.*the (?&lt;race&gt;sindar)</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Servant</name>
						<script>servant = true</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are a servant of the Dark Lord.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Disguised Alignment</name>
						<script>--echo("\ndisguised working\n")
raiseEvent("onDisguisedAlign",matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>10</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are disguised as (Hand of Eru).$</string>
							<string>^You are disguised as (Angelic).$</string>
							<string>^You are disguised as (Heroic).$</string>
							<string>^You are disguised as (Moral).$</string>
							<string>^You are disguised as (Impartial).$</string>
							<string>^You are disguised as (Immoral).$</string>
							<string>^You are disguised as (Villainous).$</string>
							<string>^You are disguised as (Demonic).$</string>
							<string>^You are disguised as (Shadowspawn).$</string>
							<string>^You are disguised as (Shadowspawn of Mordor).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>Disguised Map Align on Prompt</name>
							<script>--raiseEvent("onMapAlign")
setTriggerStayOpen("Disguised Alignment", 0)
disableTrigger("Align Results")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>True Alignment</name>
						<script>--echo("\ntrue working\n")
raiseEvent("onTrueAlign",matches[2])</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>10</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You are (Hand of Eru).$</string>
							<string>^You are (Angelic).$</string>
							<string>^You are (Heroic).$</string>
							<string>^You are (Moral).$</string>
							<string>^You are (Impartial).$</string>
							<string>^You are (Immoral).$</string>
							<string>^You are (Villainous).$</string>
							<string>^You are (Demonic).$</string>
							<string>^You are (Shadowspawn).$</string>
							<string>^You are (Shadowspawn of Mordor).$</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
						<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
							<name>True Map Align on Prompt</name>
							<script>raiseEvent("onMapAlign")
setTriggerStayOpen("True Alignment", 0)
disableTrigger("Align Results")</script>
							<triggerType>0</triggerType>
							<conditonLineDelta>0</conditonLineDelta>
							<mStayOpen>0</mStayOpen>
							<mCommand></mCommand>
							<packageName></packageName>
							<mFgColor>#ff0000</mFgColor>
							<mBgColor>#ffff00</mBgColor>
							<mSoundFile></mSoundFile>
							<colorTriggerFgColor>#000000</colorTriggerFgColor>
							<colorTriggerBgColor>#000000</colorTriggerBgColor>
							<regexCodeList>
								<string></string>
							</regexCodeList>
							<regexCodePropertyList>
								<integer>7</integer>
							</regexCodePropertyList>
						</Trigger>
					</Trigger>
				</TriggerGroup>
			</TriggerGroup>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>t2t mapper</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Horse Location Tracking</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Horse Location</name>
					<script>horseRoom = map.currentRoom
cecho(f"\n&lt;cyan&gt;Your horse location has been saved at {getRoomName(map.currentRoom)} -- Room:  &lt;red&gt;{map.currentRoom}")
cecho("\n&lt;ansi_light_green&gt;To return to your horse, use the alias horse.")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You cannot ride your mount there(.*)$</string>
						<string>^Your mount won't follow you there(.*)$</string>
						<string>is taken to a stall.$</string>
						<string>^You secure your \X+ to the hitching post.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Failed Movement</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Failed Move</name>
					<script>raiseEvent("onMoveFail")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(?:Alas, )?[Yy]ou can(?:no|')t (?:go|move) .*$</string>
						<string>^The .+ (?:is|seems to be) closed.$</string>
						<string>.+ (?:is not going to|will not) let you pass.$</string>
						<string>^That exit is blocked.$</string>
						<string>^You are blocked by .*$</string>
						<string>^There is no exit in that direction.$</string>
						<string>^The .* is locked.$</string>
						<string>^Alas, you cannot go that way\.\.\.$</string>
						<string>^You can't go that way!</string>
						<string>^You have not rented a room.$</string>
						<string>^.*blocks your exit.$</string>
						<string>^Only members are allowed inside the Guildhall.$</string>
						<string>^The gate is closed.</string>
						<string>^You lose your footing on the stone and fall back down to the ground!</string>
						<string>^A mysterious force prevents you from going up the stairs.</string>
						<string>^You remain where you are.</string>
						<string>^Fallen boards in the doorway block your way.</string>
						<string>^The guard says: That is off limits to non guild members.</string>
						<string>But you take your life into your own hands with this decision</string>
						<string>name are you doing down there?  You'll be killed</string>
						<string>^You haven't rented a room yet.</string>
						<string>^Guard dog blocks your way.</string>
						<string>^The waters are much too treacherous to navigate in that direction.</string>
						<string>^A HUGE wave comes in and pushes you back closer to shore.</string>
						<string>^The waters are much too treacherous to navigate.</string>
						<string>^Further out is just more crocodiles... not a good idea to go there.</string>
						<string>^The desert is much too hot in that direction to sustain life.</string>
						<string>^You have not rented a tent.</string>
						<string>^The orc halts you!</string>
						<string>^The gate to the pen is locked, and you decide not to climb in.</string>
						<string>^The strong current prevents you from moving your boat there.</string>
						<string>The guards step in front of you barring you</string>
						<string>^How are you going to climb without a free hand</string>
						<string>^The orc prevents you from climbing the tree</string>
						<string>^hands. 'Very well,' he calls out. 'Drop something, then ask again</string>
						<string>^You dare not move while Grond is present</string>
						<string>^You are pushed away, Mordor scum</string>
						<string>^all non-combatants.  You are too young and inexperienced to be of use</string>
						<string>^As you approach the gates, a Guard calls out to you:</string>
						<string>^    As you approach the gates of Minas Tirith, a guard on the</string>
						<string>^The way is blocked by the gate.</string>
						<string>^There is no way you can climb without a free hand!</string>
						<string>^The dog bares its teeth, blocking your passage.</string>
						<string>As you consider moving into the vegetable garden to your</string>
						<string>The flock of birds swoops down from the trees and blocks</string>
						<string>^The guard is between you and the tent!</string>
						<string>^You climb towards a ledge...BUT YOU SLIP AND FALL!</string>
						<string>You begin to climb the ladder, but Muzah's eyes fall upon you and you cease.</string>
						<string>A little kid blocks your way down the stairs</string>
						<string>The variag guard stops you and says: Variags only!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Failed Move 2</name>
					<script>raiseEvent("onMoveFail")
--^What\?$ add back if needed</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>The guard growls at you and blocks the way.</string>
						<string>You can't seem to climb over the barrier.</string>
						<string>It's not a clever idea to approach an aggressive oliphaunt without reason.</string>
						<string>^Guard says in Westron: I cannot get that.</string>
						<string>^Guard is nowhere to be found.</string>
						<string>^Your pounding seems to have gone unnoticed.</string>
						<string>^The guard ignores you.  It looks like you will have to find another way out.</string>
						<string>^You need to have at least one free hand!</string>
						<string>^As you try to enter the room some hot embers crash down, burning you.</string>
						<string>^There is no ladder, looks like you'll have to leap!</string>
						<string>You try and try but just can't climb out.</string>
						<string>Fallen boards in the doorway block your way.</string>
						<string>^The cobbler stops you: Excuse me but that is not a public area.</string>
						<string>^Huey steps in front of you and says: That's my personal room.</string>
						<string>^You haven't been admitted to the office.</string>
						<string>^The old mutt blocks the doorway</string>
						<string>^Trathorn blocks your way and says: You may not go back there.</string>
						<string>^The small brown-haired woman fixes you with a deadly gaze and you reconsider.</string>
						<string>^The guard glares at you.</string>
						<string>It must be blocked or something on the other side.</string>
						<string>^You are unconscious and can do nothing!</string>
						<string>^The barricade prevents you from going there.</string>
						<string>^    The gate is closed and will likely remain so until dawn.  Perhaps</string>
						<string>^    You have neither reason, nor incentive to barge into the home of the </string>
						<string>^You can't just barge into someone's home!</string>
						<string>^The hound stands between you and the way out.  Only one of you is leaving.</string>
						<string>^The boards are secured in place and there is no room to squeeze through.</string>
						<string>^An extremely heavy iron grill covers the hole, halting your progress.</string>
						<string>^You fall to your knees and hold them with a look of pain.</string>
						<string>^If you're going to go through the gate, you will have to go through</string>
						<string>^The door seems to be stuck!</string>
						<string>^You try to go .+, but a soldier blocks your way.</string>
						<string>^You feel that you're now too big for the tunnels further west.</string>
						<string>^\X+ stops you.</string>
						<string>^You are not of high enough rank to enter this room.</string>
						<string>^that you are in a different section of the cave.</string>
						<string>^The guards block your way into the camp!</string>
						<string>^Guard says to the intruder: You can't pass!</string>
						<string>^The guard blocks your way</string>
						<string>^You have no reason to go down there. </string>
						<string>^The haradrim screams at you: Only minions may board the caravan!</string>
						<string>^The orc blocks your access to the north.</string>
						<string>^The guard growls: You may not pass!</string>
						<string>^A large bat swoops down and blocks you from going there.</string>
						<string>^A web blocks your way.</string>
						<string>^The elf vigilante whips out his sword and glares at you.</string>
						<string>^    The wagon has already collapsed, it would be impossible to crawl under there now.</string>
						<string>^The door to the tavern is locked from the inside.</string>
						<string>^that under the warlord's decree, the gates are not to be opened at night.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Failed Move 3</name>
					<script>raiseEvent("onMoveFail")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    As you approach the northeast direction, a monstrous troll</string>
						<string>^The troll growls and blocks your path.</string>
						<string>^You cannot just waltz in there with a guard at the gate</string>
						<string>^The guard blocks your attempt to enter the camp and glowers menacingly</string>
						<string>^top of it has been barricaded with heavy pieces of furniture</string>
						<string>^The bear, growling, blocks your path.</string>
						<string>^You try to go \w+, but the sentry blocks you.</string>
						<string>^You cannot possibly manage that without all your hands free.</string>
						<string>^The bandits attacks you.</string>
						<string>^Ranger stands in front of you and grins.</string>
						<string>^A pile of stone rubble is in the way.</string>
						<string>^The tree guardians do not understand you, so you are not allowed to pass.</string>
						<string>^The door is barred.</string>
						<string>^You fall and slam your knee into a nearby rock!  Ouch!</string>
						<string>^The pain from your leg stops you in your tracks!</string>
						<string>^You begin to dig into the dirt, piling the gravel neatly next to the hole.</string>
						<string>^You continue to excavate the gravel, little by little</string>
						<string>^Your muscles begin to grow tired as you deepen the hole.  This is hard work.</string>
						<string>^You continue to scoop the gravel out of the hole, and you pray you're nearing an end.</string>
						<string>^Drops of sweat sliding down your face, you continue to shovel out the gravel.</string>
						<string>^The haradrim blocks your way.</string>
						<string>^The panther leaps up with a snarl as you approach the curtain. </string>
						<string>^The guard sees your sword and stops you from leaving south!</string>
						<string>^Thug places a hand on your shoulder and says: You may not pass.</string>
						<string>^You hear some screams coming from the trail and hesitate briefly.</string>
						<string>shoves you back, not allowing you to pass by.</string>
						<string>^    As you try to enter the bathhouse, a guard runs in to block your way.</string>
						<string>^The eel prevents you from leaving.</string>
						<string>^The snake slithers across your narrow path.</string>
						<string>^The memory of that claustrophobic feeling is still much too fresh.</string>
						<string>^The gate to the pen is locked, and you decide not to climb in.</string>
						<string>^    but halfway up you lose your footing and slide back down!</string>
						<string>^The guard says: The execution square is inaccessible at the moment. </string>
						<string>^Crocodile blocks you from passing!</string>
						<string>^You need at least two free hands to climb down the rope.</string>
						<string>^The bandit blocks you from entering the tent.</string>
						<string>^The bandit blocks the trail!  You cannot pass him that easily!</string>
						<string>^The valley is far too charred to be worth exploring.</string>
						<string>^The guard shoves you away.</string>
						<string>^The massive gate blocks your way.</string>
						<string>^You dare not try to pass the Horseman.</string>
						<string>^You can't pass the scouts that easily!</string>
						<string>^As you start to go into the house of Ethen Stallwick, the guard</string>
						<string>^You move the branches and find nothing.</string>
						<string>^That house is ruined; the upper floor has caved in and blocks the entrance.</string>
						<string>^How can you pull the rope without a free hand?</string>
						<string>^out what it's like in there, he'd be glad to accomodate you</string>
						<string>^have no choice other than to wait for your sentence to expire</string>
						<string>^you felt the floor give way slightly.  You look down at the floor but see</string>
						<string>^You seem to make some progress.  Perhaps you should dig some more.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>0</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Failed Move 4</name>
					<script>raiseEvent("onMoveFail")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You try to climb the hill, $</string>
						<string>^You back away from the door.</string>
						<string>^The door is designed to be moved rather than opened. </string>
						<string>^One of them bashes you over the head with a club.</string>
						<string>^The entrance of the barrow is too tight for you.</string>
						<string>^Rookie says in some strange tongue: Wait! Don't oe rau arofin</string>
						<string>^You are too busy to climb now</string>
						<string>^You are too tired to climb now.</string>
						<string>^You can hardly climb when you can't see!</string>
						<string>^the cold, cold waters of Long Lake with a splash.</string>
						<string>^A burly hobbit guard stops you and shakes his head.</string>
						<string>^The guard stops you and says: You may not enter here.</string>
						<string>^better find some way to hide!</string>
						<string>^Earl says: I don't think you are going anywhere.</string>
						<string>^You're too frightened to move!</string>
						<string>^out of the wall and strikes you!</string>
						<string>^at the moment. Going that way could be dangerous.</string>
						<string>^The guard will not allow you past the northeast door.</string>
						<string>^That area is strictly off limits right now.</string>
						<string>^The troll won't let you pass!</string>
						<string>^    The shop is obviously closed... </string>
						<string>^steward, I cannot allow you beyond this point," he says.</string>
						<string>^You're too busy to do that!</string>
						<string>^The answer is silence. The huge doors remain shut.</string>
						<string>^wasting your time there.  You remain in the dining room.</string>
						<string>^no one noticed your rude attempt to wander the house.</string>
						<string>^You're too drunk to swim there properly!</string>
						<string>^The Headmaster smiles at you and says: 'Enlist with us first!'</string>
						<string>^The orc is blocking your exit there.</string>
						<string>^The easterling bars your way.</string>
						<string>^The guard growls: No one may enter unless summoned by the council!</string>
						<string>^You have not rented space on the floor of the common sleeping room.</string>
						<string>^Perhaps you should go to the main room?</string>
						<string>^Some workers stand up and block the doorway.  You don't have access.</string>
						<string>^Reg says: Hold on.  You cannot go inside unless you are a member of</string>
						<string>^The guard grins at you and you change your mind.</string>
						<string>^    A terrifying vampire bat flies between you and the passage </string>
						<string>^to even think about going that way.</string>
						<string>^You haven't rented a room.</string>
						<string>^    You peer over the wall but discover that the tide is in. </string>
						<string>^You kick a pebble off of the stairway and it taps many</string>
						<string>^    As you approach the gate, two mean-looking dwarves with battle axes</string>
						<string>^The wolf growls and blocks your way!</string>
						<string>^A couple of ruffians block your entrance, saying: "You look</string>
						<string>^The orc is guarding the trail against intruders.</string>
						<string>^You search the rushes, but fail to find anything of interest.</string>
						<string>^An Uruk charges towards you, knocking you to the floor.</string>
						<string>^Guard steps forward and blocks your way!</string>
						<string>^you stare angrily at the wall and vow that one day you will defeat it.</string>
						<string>^You attempt to leave, but a guard blocks your way!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Failed Move 5</name>
					<script>raiseEvent("onMoveFail")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The sound of rushing water below makes you hesitate.</string>
						<string>^Patrol leader shouts: Get away from there!</string>
						<string>^Redhorn Pass is too cold for you to cross!</string>
						<string>^Guard says: No evil people allowed!</string>
						<string>^    The guard moves in front of the steps and places a hand against</string>
						<string>^Dornas steps in your way, scowling.</string>
						<string>^You cannot swim that way!</string>
						<string>^The small skiff must be in the water first!</string>
						<string>^You cannot launch in that direction.</string>
						<string>^You'll have to board</string>
						<string>^You cannot land in water, look for dry ground.</string>
						<string>^Land in what direction\?</string>
						<string>^A small peep-slot slips open and an eye on the other side examines</string>
						<string>^You have to crawl out of the hole before you can leave the area</string>
						<string>^    As you begin to ascend the hill, you realize that continuing may be</string>
						<string>^The dunlending is blocking your path.</string>
						<string>^You are too much of a weakling to open the massive gates.</string>
						<string>^You hear a deep voice growl:  Members only, buster!</string>
						<string>^You're too frightened to move!</string>
						<string>^    Fear overwhelms you as you approach the wreckage.</string>
						<string>^The crewmember blocks your path</string>
						<string>^You're too encumbered to swim there properly</string>
						<string>^You need to rent a room first before you can enter</string>
						<string>^Apprentice warrior says to you: You do not have access to this passage.</string>
						<string>^The Ents guarding that area would hunt you down in no time!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shelob Failed Movement</name>
					<script>raiseEvent("onMoveFail")
</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Your legs tire as they push through air as thick as treacle</string>
						<string>^Doubts and fears assail you, filling you with the desire</string>
						<string>^You seem to get nowhere as you welcome and dwell on the delicious</string>
						<string>^The air seems to be running out in this tunnel</string>
						<string>^Shelob must be messing with your mind. The darkness seems</string>
						<string>^The atmosphere feels like it has turned to cotton wool</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Special Rooms</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Enc Rooms - Sends the command 'enc' to force map movement</name>
					<script></script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList />
					<regexCodePropertyList />
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Enc Rooms</name>
						<script>send("enc")</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^You hurtle into a rocky ledge, your head slamming into the rock with a loud CRACK!</string>
							<string>^to notice your fall has ended before you slam right into your discarded</string>
							<string>^You step out\.</string>
							<string>^on the floor.  It will be nice to get out of this thing.</string>
							<string>^Ahh, the ground feels so much safer than that old basket.</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</TriggerGroup>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Carapace Ledge</name>
					<script>t2tMapper.tele("ledge")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^and in the darkness, just above you, you spot a narrow ledge</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gulch</name>
					<script>t2tMapper.tele(57370)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^landing on the hard rock on the bottom of the slope.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gulch 2</name>
					<script>t2tMapper.tele(57368)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^ground, pulling yourself out into the big blue room outside.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="yes" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Gypsies</name>
					<script>if map.currentRoom ~= 57157 then
  gypsyExit = map.currentRoom
  t2tMapper.tele("gypsyin")
end</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#808000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You hop into the wagon and wait for it to commence its journey.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Stump</name>
					<script>t2tMapper.tele("stump")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    You insert a wooden key into the hole</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mirkwood Cabin Bedroom</name>
					<script>t2tMapper.tele(64243)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    You suddenly find yourself falling through a hole you didn't realize</string>
						<string>^    You drunkenly fall head first through a hole on the floor and land in</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dreyban</name>
					<script>t2tMapper.tele("dreyban")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Dreyban leaves first, and you follow.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Dark Ring</name>
					<script>t2tMapper.tele(22841)</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^is a bright burst of light and suddenly you find yourself</string>
						<string>^The old man disappears as he summons a dark vortex from within himself.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Shelob ledge</name>
					<script>t2tMapper.tele("mainlair")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^As you start to hurry across the ledge, you lose your footing and fall!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Cirith Ungol Watchers</name>
					<script>send("gate")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Watchers.  Tired but triumphant, you have dominated the guardians</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Mordor Password Entry</name>
					<script>t2tMapper.tele("inmor")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    As you speak the word \X+ the ground starts to shake</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Ledge Jump</name>
					<script>send("glance")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You hit the ground with a CRACK!</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Obsidian Jewel Tree</name>
					<script>send("glance")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^You manage to struggle your way up the tree.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Obsidian Jewel Tree 2</name>
					<script>t2tMapper.tele("64798")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^The branch suddenly sways, and you feel yourself slipping...</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>ER Lvl 19 Exit</name>
					<script>t2tMapper.tele("erlvl19exit")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^    Finally, coming out from the darkness of the caves, you barely have</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Flask Rushes</name>
					<script>t2tMapper.go("flaskrushes")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^into something that looked like solid ground but wasn't it.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Forced Move Trigger</name>
				<script>raiseEvent("onForcedMove",matches[2])</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You run (\w+).$</string>
					<string>^You follow your leader (\w+).$</string>
					<string>^You follow \X+ (\w+).$</string>
					<string>^The guard pushes you (\w+) the stairs!</string>
					<string>^The guard grabs you by the scruff of the neck and tosses you (\w+)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="yes" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Room and Exit Capture</name>
				<script>local mc = t2tvars["MudRoomColor"]
local dirs = {n = 'north', s = 'south', w = 'west', e = 'east', d = 'down', u = 'up', ne = 'northeast', nw = 'northwest', se = 'southeast', sw = 'southwest', ['in'] = 'in', out = 'out'}
local roomMatch, roomName, capturedExits, capturedWaterExits, exits, found_exits

selectString( matches[2], 1 )
if isAnsiFgColor(mc) then
  roomMatch = true
end
deselect()

if roomMatch and t2tvars["DeadMode"] == "off" then
  if matches[2] ~= "" and matches[3] ~= "" and matches[4]  then
  	roomName = matches[2] .. matches[3] .. matches[4]
  end
  if matches.land ~= "" then capturedExits = matches.land end
  if matches.water ~= "" then capturedWaterExits = matches.water end
  if t2tvars["WaterExits"] == "off" then
    if capturedExits then
      for w in capturedExits:gmatch("%a+") do
        if dirs[w] then
          found_exits = true
          if not exits then
            exits = dirs[w]
          else
            exits = exits .. " " .. dirs[w]
          end
        else 
          found_exits=true
          if not exits then
            exits = w
          else
            exits = exits .. " " .. w
          end
        end
      end
    end
  elseif t2tvars["WaterExits"] == "on" then
    if capturedWaterExits then
      for w in capturedWaterExits:gmatch("%a+") do
        if dirs[w] then
          found_exits = true
          if not exits then
            exits = dirs[w]
          else
            exits = exits .. " " .. dirs[w]
          end
        else 
          found_exits=true
          if not exits then
            exits = w
          else
            exits = exits .. " " .. w
          end
        end
      end
    end
  end  
  if found_exits then
    map.prompt.exits = exits
  else
  	map.prompt.exits = "special"      
  end
  if roomName then
  	t2tMapper.checkPR(roomName)
  end
elseif t2tvars["DeadMode"] == "on" then
  if matches[2] ~= "" and matches[3] ~= "" and matches[4]  then
    roomName = matches[2] .. matches[3] .. matches[4]
  end
  if matches.land ~= "" then capturedExits = matches.land end
  if capturedExits then
    for w in capturedExits:gmatch("%a+") do
      if dirs[w] then
        found_exits = true
        if not exits then
          exits = dirs[w]
        else
          exits = exits .. " " .. dirs[w]
        end
      else 
        found_exits=true
        if not exits then
          exits = w
        else
          exits = exits .. " " .. w
        end
      end
    end
  end
  if found_exits then
    map.prompt.exits = exits
  else
    map.prompt.exits = "special"      
  end
  if roomName then
    t2tMapper.checkPR(roomName)
  end  
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#999900</mFgColor>
				<mBgColor>transparent</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#808000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^(\p{L})([\p{L}\s\.\-\'\,]+)([\w\!])\(?(?&lt;land&gt;[\w\s\,]+)?\)?\s?\[?(?&lt;water&gt;[\w\s\,]+)?\]?$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Kicked out of the Inn</name>
				<script>local tempExits = getRoomExits(map.currentRoom)

if table.size(tempExits) == 1 then
	local dir = table.concat(table.keys(tempExits))
	t2tMapper.manualMoveMap(dir)
end</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Thank you for staying at this inn!</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>You have died.</name>
				<script>t2tvars["DeadMode"] = "on"</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You have died.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>You return from the dead.</name>
				<script>t2tvars["DeadMode"] = "off"</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You return from the dead.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Mud Room Color Setting Capture</name>
				<script>local aat = t2tvars.ansiTranslationTable
local color

selectCaptureGroup(2)
if isAnsiFgColor(1) then
	t2tvars["MudRoomColor"] = 1
elseif isAnsiFgColor(2) then
	t2tvars["MudRoomColor"] = 2
elseif isAnsiFgColor(3) then
	t2tvars["MudRoomColor"] = 3
elseif isAnsiFgColor(4) then
	t2tvars["MudRoomColor"] = 4
elseif isAnsiFgColor(5) then
	t2tvars["MudRoomColor"] = 5
elseif isAnsiFgColor(6) then
	t2tvars["MudRoomColor"] = 6
elseif isAnsiFgColor(7) then
	t2tvars["MudRoomColor"] = 7
elseif isAnsiFgColor(8) then
	t2tvars["MudRoomColor"] = 8
elseif isAnsiFgColor(9) then
	t2tvars["MudRoomColor"] = 9
elseif isAnsiFgColor(10) then
	t2tvars["MudRoomColor"] = 10
elseif isAnsiFgColor(11) then
	t2tvars["MudRoomColor"] = 11
elseif isAnsiFgColor(12) then
	t2tvars["MudRoomColor"] = 12
elseif isAnsiFgColor(13) then
	t2tvars["MudRoomColor"] = 13
elseif isAnsiFgColor(14) then
	t2tvars["MudRoomColor"] = 14
elseif isAnsiFgColor(15) then
	t2tvars["MudRoomColor"] = 15
elseif isAnsiFgColor(16) then
	t2tvars["MudRoomColor"] = 16
end

color = t2tvars["MudRoomColor"]
cecho(f"\n&lt;cyan&gt;Current room short color set to {aat[color]}\n")</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>23\) (room_short)</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Swimming Water Exits Off</name>
				<script>t2tvars["WaterExits"] = "off"</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^You stop swimming.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Swimming Water Exits On</name>
				<script>t2tvars["WaterExits"] = "on"</script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>^Taking a deep breath, you begin to swim.$</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>1</integer>
				</regexCodePropertyList>
			</Trigger>
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>Test Triggers</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName></packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
		</TriggerGroup>
		<TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
			<name>generic_mapper</name>
			<script></script>
			<triggerType>0</triggerType>
			<conditonLineDelta>0</conditonLineDelta>
			<mStayOpen>0</mStayOpen>
			<mCommand></mCommand>
			<packageName>generic_mapper</packageName>
			<mFgColor>#ff0000</mFgColor>
			<mBgColor>#ffff00</mBgColor>
			<mSoundFile></mSoundFile>
			<colorTriggerFgColor>#000000</colorTriggerFgColor>
			<colorTriggerBgColor>#000000</colorTriggerBgColor>
			<regexCodeList />
			<regexCodePropertyList />
			<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>onNewLine Trigger</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList>
					<string>raiseEvent("onNewLine")</string>
				</regexCodeList>
				<regexCodePropertyList>
					<integer>4</integer>
				</regexCodePropertyList>
			</Trigger>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>English Trigger Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>English Exits Trigger</name>
					<script>raiseEvent("onNewRoom",matches[2] or "")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(?i)^\s*\[\s*Exits:\s*(.*)\]</string>
						<string>^\s*There (?:is|are) \w+ (?:visible|obvious) exit[s]?:\s*(.*)</string>
						<string>^\[?[\s\w]*(?:[Vv]isible|[Oo]bvious) (?:[Pp]ath|[Ee]xit)[s]?(?: is| are)?:?\s*(.*)\]?</string>
						<string>^\s*You see[\w\s]* exit[s]? leading (.*)</string>
						<string>Exits:\s*(.*)</string>
						<string>There are no obvious exits.</string>
						<string>^\s*The (?:only )?obvious exit[s]? (?:is|are):? (.*)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>2</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>English Failed Move Trigger</name>
					<script>raiseEvent("onMoveFail")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^(?:Alas, )?[Yy]ou can(?:no|')t (?:go|move) .*$</string>
						<string>^The .+ (?:is|seems to be) closed.$</string>
						<string>.+ (?:is not going to|will not) let you pass.$</string>
						<string>^That exit is blocked.$</string>
						<string>^You are blocked by .*$</string>
						<string>^There is no exit in that direction.$</string>
						<string>^The .* is locked.$</string>
						<string>^Alas, you cannot go that way\.\.\.$</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>English Vision Fail Trigger</name>
					<script>raiseEvent("onVisionFail")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^It is pitch black...</string>
						<string>^It(?:'s| is) too dark</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>English Forced Move Trigger</name>
					<script>raiseEvent("onForcedMove",matches[2])</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^Carefully getting your bearings, you set off (\w+) toward your goal.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>English Multi-Line Exits Trigger</name>
					<script>map.prompt.exits = ""</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>1</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>(?i:^(obvious|visible) exits:)</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
					<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
						<name>Exit Line Trigger</name>
						<script>map.prompt.exits = map.prompt.exits .. ", " .. string.trim(matches[2])
setTriggerStayOpen("English Multi-Line Exits Trigger",1)</script>
						<triggerType>0</triggerType>
						<conditonLineDelta>0</conditonLineDelta>
						<mStayOpen>0</mStayOpen>
						<mCommand></mCommand>
						<packageName></packageName>
						<mFgColor>#ff0000</mFgColor>
						<mBgColor>#ffff00</mBgColor>
						<mSoundFile></mSoundFile>
						<colorTriggerFgColor>#000000</colorTriggerFgColor>
						<colorTriggerBgColor>#000000</colorTriggerBgColor>
						<regexCodeList>
							<string>^([\w\s]+)\s*: [\w\s]+</string>
						</regexCodeList>
						<regexCodePropertyList>
							<integer>1</integer>
						</regexCodePropertyList>
					</Trigger>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Russian Trigger Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Russian Exits Trigger</name>
					<script>raiseEvent("onNewRoom",matches[2] or "")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\s*\[\s*Выходы:\s*(.*)\]</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Russian Failed Move Trigger</name>
					<script>raiseEvent("onMoveFail")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Извини, но ты не можешь туда идти.</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Russian Vision Fail Trigger</name>
					<script>raiseEvent("onVisionFail")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>Здесь слишком темно ...</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
			<TriggerGroup isActive="no" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
				<name>Chinese Trigger Group</name>
				<script></script>
				<triggerType>0</triggerType>
				<conditonLineDelta>0</conditonLineDelta>
				<mStayOpen>0</mStayOpen>
				<mCommand></mCommand>
				<packageName></packageName>
				<mFgColor>#ff0000</mFgColor>
				<mBgColor>#ffff00</mBgColor>
				<mSoundFile></mSoundFile>
				<colorTriggerFgColor>#000000</colorTriggerFgColor>
				<colorTriggerBgColor>#000000</colorTriggerBgColor>
				<regexCodeList />
				<regexCodePropertyList />
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Chinese Exits Trigger</name>
					<script>raiseEvent("onNewRoom",matches[2] or "")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>^\s*这里明显的方向有 (.*)。</string>
						<string>^\s*这里明显的出口有 (.*)。</string>
						<string>^\s*这里明显的出口是 (.*)。</string>
						<string>^\s*这里唯一的出口是 (.*)。</string>
						<string>^\s*這裏明顯的出口是 (.*)。</string>
						<string>^\s*這裏唯一的出口是 (.*)。</string>
						<string>^\s*這裏明顯的方向有 (.*)。</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
				<Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
					<name>Chinese Failed Movement Trigger</name>
					<script>raiseEvent("onMoveFail")</script>
					<triggerType>0</triggerType>
					<conditonLineDelta>0</conditonLineDelta>
					<mStayOpen>0</mStayOpen>
					<mCommand></mCommand>
					<packageName></packageName>
					<mFgColor>#ff0000</mFgColor>
					<mBgColor>#ffff00</mBgColor>
					<mSoundFile></mSoundFile>
					<colorTriggerFgColor>#000000</colorTriggerFgColor>
					<colorTriggerBgColor>#000000</colorTriggerBgColor>
					<regexCodeList>
						<string>你又渴又饿，浑身无力，根本就走不动路。</string>
						<string>这个方向没有出路。</string>
						<string>^看来(\w+)不打算让你过去。</string>
					</regexCodeList>
					<regexCodePropertyList>
						<integer>0</integer>
						<integer>0</integer>
						<integer>1</integer>
					</regexCodePropertyList>
				</Trigger>
			</TriggerGroup>
		</TriggerGroup>
	</TriggerPackage>
	<TimerPackage>
		<TimerGroup isActive="yes" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
			<name>Info Panel</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<time>00:00:00.000</time>
			<Timer isActive="yes" isFolder="no" isTempTimer="no" isOffsetTimer="no">
				<name>Update Display</name>
				<script>raiseEvent("onUpdateDisplay")</script>
				<command></command>
				<packageName></packageName>
				<time>00:00:01.000</time>
			</Timer>
		</TimerGroup>
		<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>BashPick</name>
			<script>send("bash door")
send("pick door")
send("bash chest")
send("pick chest")</script>
			<command></command>
			<packageName></packageName>
			<time>00:00:51.000</time>
		</Timer>
		<Timer isActive="no" isFolder="no" isTempTimer="no" isOffsetTimer="no">
			<name>who</name>
			<script></script>
			<command>who all</command>
			<packageName></packageName>
			<time>00:04:38.000</time>
		</Timer>
	</TimerPackage>
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>run-lua-code-v4</name>
			<script></script>
			<command></command>
			<packageName>run-lua-code-v4</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>run lua code</name>
				<script>local f, e = loadstring("return "..matches[2])
if not f then
  f, e = assert(loadstring(matches[2]))
end

local r =
  function(...)
    if not table.is_empty({...}) then
      display(...)
    end
  end
r(f())</script>
				<command></command>
				<packageName></packageName>
				<regex>^lua (.*)$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>echo</name>
			<script></script>
			<command></command>
			<packageName>echo</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>`echo</name>
				<script>local s = matches[2]

--s = string.gsub(s, "%$", "\n")
--dfeedTriggers("&lt;138, 226, 52:0,0,0&gt;" .. s .. "\n")
--echo("\n")
cfeedTriggers(s .. "&lt;r&gt;")</script>
				<command></command>
				<packageName></packageName>
				<regex>`echo (.+)</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>deleteOldProfiles</name>
			<script></script>
			<command></command>
			<packageName>deleteOldProfiles</packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>delete old profiles</name>
				<script>deleteOldProfiles(matches[3], matches[2])

--Syntax examples: "delete old profiles"  -&gt; deletes profiles older than 31 days
--					"delete old maps 10"	-&gt; deletes maps older than 10 days</script>
				<command></command>
				<packageName></packageName>
				<regex>^delete old (profiles|maps|modules)(?: (\d+))?$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Comm Block</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="no" isFolder="no">
				<name>Comm Intercept</name>
				<script></script>
				<command>grovel</command>
				<packageName></packageName>
				<regex>^\^.*</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Comm Enable/Disable</name>
				<script>local commToggle = matches[2]

if commToggle == "on" then
  disableAlias("Comm Intercept")
  cecho("&lt;cyan&gt;Comm Intercept Disabled, lines are &lt;green&gt;open&lt;cyan&gt;.\n")
elseif commToggle == "off" then
  enableAlias("Comm Intercept")
  cecho("&lt;cyan&gt;Comm Intercept Enabled, lines are &lt;red&gt;closed&lt;cyan&gt;.\n")
else
  cecho("&lt;red&gt;Comm command not recognized.\n")
end</script>
				<command></command>
				<packageName></packageName>
				<regex>\/comm (on|off)$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Convenience</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Attach all pelts to strings</name>
				<script>send("do 5attach pelt to string,5attach pelt to string 2")</script>
				<command></command>
				<packageName></packageName>
				<regex>^ap$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Bash/Pick Timer On/Off</name>
				<script>if matches[2] == "on" then
  enableTimer("BashPick")
  cecho("&lt;cyan&gt;Bash/pick timer engaged.\n")
elseif matches[2] == "off" then
  disableTimer("BashPick")
  cecho("&lt;cyan&gt;Bash/pick timer disengaged.\n")
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^bashpick (on|off)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>ds</name>
				<script>send("draw sword;draw axe;draw mace;draw pole;draw cleaver",false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^ds$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Eat Corpse</name>
				<script>send("eat corpse",false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^ec$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>erfire</name>
				<script>send("do open lantern,get candle from lantern into fire,get candle into lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern;do light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern;do light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern")</script>
				<command></command>
				<packageName></packageName>
				<regex>^erfire$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>fire</name>
				<script>send("do drop candle from lantern,buy candle,put candle into lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern;do light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern;do light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern,light lantern,extinguish lantern")</script>
				<command></command>
				<packageName></packageName>
				<regex>^fire$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>for - Forage</name>
				<script>send("forage flower;put all petal in wagon;put all petal in panniers;put all petal in satchel;put all petal in cloak;put all petal in pack;put all star in wagon;put all star in panniers;put all star in pouch;put all star in cloak;put all star in pack;get all petal into wagon;get all petal into panniers;get all petal into satchel;get all petal into cloak;get all petal into pack;get all star into wagon;get all star into panniers;get all star into pouch;get all star into cloak;get all star into pack",false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^for$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Leif</name>
				<script>send("do hail leif, request passage")</script>
				<command></command>
				<packageName></packageName>
				<regex>^leif$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>List Clocks</name>
				<script>cecho("&lt;red&gt;Clock locations&lt;reset&gt;\n")
cecho("&lt;cyan&gt;adoinn&lt;reset&gt;\n")
cecho("&lt;cyan&gt;breebar&lt;reset&gt;\n")
cecho("&lt;cyan&gt;staddlebrew&lt;reset&gt;\n")
cecho("&lt;cyan&gt;pelclock&lt;reset&gt;\n")
cecho("&lt;cyan&gt;linhirgov&lt;reset&gt;\n")
cecho("&lt;cyan&gt;fraclock&lt;reset&gt;\n")
cecho("&lt;cyan&gt;coubar&lt;reset&gt;\n")

</script>
				<command></command>
				<packageName></packageName>
				<regex>^clocks$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Move from string to wagon</name>
				<script>send("do detach pelt from string,put pelt in wagon,get pelt into wagon,attach pelt to string,detach pelt from string 2,put pelt in wagon,get pelt into wagon,attach pelt to string 2")</script>
				<command></command>
				<packageName></packageName>
				<regex>^stringwag$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>newchar</name>
				<script>send("brief on")
send("alias sa shape all")
send("alias tt travelto")
send("alias tac take all from corpse")
send("alias tacp take all from corpse into pack")
send("alias k kill")
send("alias beer do order beer,drink beer,put bottle in trash")
send("alias t tell")
send("alias thug trigger A street thug todo kill thug")
send("alias jerky do get jerky from pack,eat jerky,put jerky in pack")
send("alias rh request healing")
send("alias ps party say")
send("alias php party hp")
send("alias pj party join")
send("set whodefault friend and enemy and ainur")
send("group always")
send("hint off")
send("set prompt $HIC$$HP $HIY$$EP$HIR$&gt;$0$")
send("set LINES 200")
send("set announce_friends on")
send("set lead_messages off")
send("charset utf-8")
send("color on")
send("set full_exit_color on")
send("color extended_color on")
send("color announce $HIM$")
send("color auction $HIY$")
send("color emote $0$")
send("color exits $HIK$")
send("color room_short $YEL$")
send("color lawsys $HIW$")
send("color party $HIY$")
send("color partysay $HIY$")
send("color shout $HIW$")
send("color tell $HIG$ $BWHT$")
send("color tell_outgoing $HIR$ $BWHT$")
send("color tellhist_incoming $HIG$")
send("color tellhist_outgoing $HIR$")
send("color water_exits $HIC$")
send("color whoenemy $HIR$")
send("color whofriend $HIG$")
send("color whoguild $HIC$")
send("color comm $HIW$")
send("color skillup $HIC$")
send("snoopable")
send("laston hide")
send("autoaccept paranoid")
</script>
				<command></command>
				<packageName></packageName>
				<regex>^newchar$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>packwag - Get all from pack into wagon</name>
				<script>send("get all from pack into wagon",false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^packwag$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>panwag - Get all from panniers into wagon</name>
				<script>send("get all from panniers into wagon",false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^panwag$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>pelt</name>
				<script>send("do skin corpse,put pelt in wagon,get pelt into wagon,put pelt in panniers,get pelt into panniers,put pelt in saddlebags,get pelt into saddlebags,attach pelt to string,attach pelt to string 2,put pelt in pack,get pelt into pack,eat corpse")</script>
				<command></command>
				<packageName></packageName>
				<regex>^pelt$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>searchroom</name>
				<script>send("do push,pull,pry,move,twist,stand,touch,squeeze,crawl,feel,smell,inspect,wade,turn,part,roll,insert,dig,cut,break,bump,climb,jump,leap,approach,slide,get,ram,examine,request,check,stack,place,sift,sort,clear")</script>
				<command></command>
				<packageName></packageName>
				<regex>^searchroom$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Skin All Corpses</name>
				<script>send("do skin corpse 1,skin corpse 2,skin corpse 3,skin corpse 4,skin corpse 5")</script>
				<command></command>
				<packageName></packageName>
				<regex>^sc$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>ss</name>
				<script>send("store sword;store mace;store axe;sling bow;store pole;store cleaver",false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^ss$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>stairup</name>
				<script>send("up")
send("se")
send("e")
send("ne")
</script>
				<command></command>
				<packageName></packageName>
				<regex>^stairup$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>stairdown</name>
				<script>send("d")
send("nw")
send("w")
send("sw")</script>
				<command></command>
				<packageName></packageName>
				<regex>^stairdown$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>wine</name>
				<script>send("do drop wine from pack,open wine,drink wine,close bottle,get bottle into pack")</script>
				<command></command>
				<packageName></packageName>
				<regex>^wine$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>packpann</name>
				<script>send("get all from pack into panniers",false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^packpann$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Make Alias</name>
				<script>local tempAliasName = tostring(matches[2])
local tempAliasCommand = tostring(matches[3])
local tempGroup = tostring(matches[4])

if tempGroup ~= "nil" then
  if exists(tempGroup, "alias") == 0 then
    permGroup(tempGroup, "alias")
  end
else
  tempGroup = "Sort Later"
end

if exists(f"{tempAliasName}", "alias") == 0 then
  permAlias(tempAliasName, tempGroup, f"^{tempAliasName}$", f"send('{tempAliasCommand}')")
  cecho(f"&lt;cyan&gt;Created alias: &lt;red&gt;{tempAliasName} - {tempAliasCommand}\n")
else
  cecho(f"&lt;red&gt;Alias {tempAliasName} already exists.\n")
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^\#alias ([\w\d\-]+)\s\{([\w\s\-\,\d]+)\}\s?\{?([\w\s\-]+)?\}?$</regex>
			</Alias>
			<Alias isActive="no" isFolder="no">
				<name>Who list logging</name>
				<script>local success, message, filename, code = startLogging(true)
if code == 1 or code == -1 then print(f"Started logging to {filename}") end
if whoStop then killTrigger(whoStop) end
whoStop = tempPromptTrigger(function() startLogging(false) end,1)
send("who all",false)
</script>
				<command></command>
				<packageName></packageName>
				<regex>^who all$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Capture colors on</name>
				<script>send("color room_short $YEL$ $BWHT$")
send("color tell $HIG$ $BWHT$")
send("color tell_outgoing $HIR$ $BWHT$")</script>
				<command></command>
				<packageName></packageName>
				<regex>^captureon$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>DRH - wield dagger, sheath dagger, request heal</name>
				<script>send("wield dagger;sheath dagger;wield knife;sheath knife;wield knife;sheath knife;wield knife;sheath knife;request healing;wield sword")</script>
				<command></command>
				<packageName></packageName>
				<regex>^drh$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>smoked fish</name>
				<script>send("drop fish from pack;eat fish;get fish into pack")</script>
				<command></command>
				<packageName></packageName>
				<regex>^fish$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>RP Response</name>
				<script>send("say $HIC$I've no interest in whatever RP you're flaunting.  If you attack me, I will $HIR$report you$HIC$.  $HIY$You've been warned. $HIC$If you decide to be a further annoyance and hinder my game play by following me around and shielding things I attack, you will find yourself $HIR$law reported for griefing$HIC$.")</script>
				<command></command>
				<packageName></packageName>
				<regex>^rp$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Region Prompt</name>
				<script>if matches[2] == "on" then
  send("set prompt $X $HIC$$HP $HIY$$EP$HIR$&gt;$0$")
elseif matches[2] == "off" then
  send("set prompt $HIC$$HP $HIY$$EP$HIR$&gt;$0$")
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^region (on|off)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Forage in SG</name>
				<script>send("forage herb;put all herb in wagon;put all herb in panniers;put all herb in satchel;put all herb in pouch;put all herb in cloak;put all herb in pack;get all herb into wagon;get all herb into panniers;get all herb into satchel;get all herb into pouch;get all herb into cloak;get all herb into pack",false)</script>
				<command></command>
				<packageName></packageName>
				<regex>^ff$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Huntbreaks</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Make Huntbreak</name>
				<script>local tempBreakName = tostring(matches[2])
local tempBreakAlias = tostring(matches[3])


if exists(f"{tempBreakName}", "alias") == 0 then
    permAlias(tempBreakName, "Huntbreaks", f"^{tempBreakName}$", f"send('{tempBreakAlias}')")
    cecho(f"&lt;cyan&gt;Created break: &lt;red&gt;{tempBreakName} - {tempBreakAlias}\n")
else
    cecho(f"&lt;red&gt;Break {tempBreakName} already exists.\n")
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^\/break ([\w\d]+) (.*)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Make Huntbreak From 2 locations</name>
				<script>local breakName = tostring(matches[2])
local pathStart = tostring(matches[3])
local pathEnd = tostring(matches[4])

local pathTo = t2tMapper.returnPath(pathStart,pathEnd)
local pathFrom = t2tMapper.returnPath(pathEnd,pathStart)

local pathString = "do " ..pathTo.. ",5evade," ..pathFrom

if exists(f"{breakName}", "alias") == 0 then
    permAlias(breakName, "Huntbreaks", f"^{breakName}$", f"send('{pathString}')")
    cecho(f"&lt;cyan&gt;Created break: &lt;red&gt;{breakName} - {pathString}\n")
else
    cecho(f"&lt;red&gt;Break {breakName} already exists.\n")
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^\/break2 ([\w\d]+) ([\w\d]+) ([\w\d]+)$</regex>
			</Alias>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>West Arda</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>ado1</name>
					<script>send("do 3n,3e,cottage,n,closet,5evade,out,s,out,3w,3s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado2</name>
					<script>send("do 2s,se,enter,e,climb ladder,5evade,d,w,out,nw,2n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado3</name>
					<script>send("do 3n,3w,yard,stables,u,climb through window,5evade,leap through window,d,out,fields,3e,3s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bel1</name>
					<script>send("do s,2d,3n,push gray stone,5evade,u,3s,2u,n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bel1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bel2</name>
					<script>send("do 3e,3s,temple,move tapestry,5evade,out,out,3n,3w")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bel2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>haub1</name>
					<script>send("do n,n,nw,nw,sw,sw,s,s,w,n,ne,n,e,n,squeeze through crack,5evade,out,s,w,s,sw,s,e,n,n,ne,ne,se,se,s,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^haub1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree1</name>
					<script>send('do n,5e,crawl root,5evade,out,5w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree2</name>
					<script>send('do 2n,2e,ne,2n,e,climb tree,5evade,climb down,w,2s,sw,2w,2s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree3</name>
					<script>send('do 7s,2e,hill,2e,climb into filthy wagon,5evade,out,2w,greenway,2w,7n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by1</name>
					<script>send('do 6n,w,check in,5evade,6s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by2</name>
					<script>send('do n,4e,n,2e,push brick,5evade,out,2w,s,4w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by3</name>
					<script>send('do 5s,4w,enter,2w,n,sit bench,5evade,out,s,e,e,out,ne,n,n,ne,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv1</name>
					<script>send('do 3e,2u,ring bell,5evade,d,3w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv2</name>
					<script>send("do nw,nw,sw,w,nw,nw,sw,nw,feel behind waterfall,5evade,out,se,se,se,se,ne,e,e,e")</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>md1</name>
					<script>send('do enter,n,n,n,n,in,n,n,w,w,w,n,n,stand on cushion,5evade,s,s,e,e,e,s,s,out,s,s,s,s,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^md1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gh1</name>
					<script>send("do 10e,s,enter,up,2se,down,slide shelf,5evade,se,up,2nw,down,out,n,10w")</script>
					<command></command>
					<packageName></packageName>
					<regex>^gh1$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Rhovanion</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>frams1</name>
					<script>send("do n,2w,2n,knock on door,5evade,ask lady about leaving,5evade,2s,2e,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^frams1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>frams2</name>
					<script>send("do 2n,e,push board,5evade,push board,5evade,w,2s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^frams2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gund1</name>
					<script>send("do n,push axe,5evade,out,w,turn torch,5evade,e")</script>
					<command></command>
					<packageName></packageName>
					<regex>^gund1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos1</name>
					<script>send('do 2w,31n,path,privy,push walls,5evade,climb out,out,path,31s,2e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos2</name>
					<script>sned("do 4n,7w,2u,5kick pebble,5evade,7e,4s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran1</name>
					<script>send("do stairs,terrace,gates,knock on gates,5evade,out,terrace,stairs,bridge")</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran2</name>
					<script>send('do ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,n,n,n,turn torch,n,5evade,s,out,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,s,s,s,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran3</name>
					<script>send('do ne,e,e,e,e,e,ne,n,n,n,n,e,e,e,e,n,n,n,n,n,e,n,e,e,e,e,crawl behind shrub,5evade,out,w,w,w,w,w,s,s,w,w,s,w,s,w,s,s,s,s,s,s,sw,w,w,w,w,w,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran3$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Northeast Rhovanion</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>ereb1</name>
					<script>send("do 2n,2d,w,push indentations,5evade,out,e,up,up,s,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ereb1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dale1</name>
					<script>send('do n,nw,nw,nw,nw,nw,nw,n,n,nw,climb down rope,5evade,climb rope,se,sw,se,se,se,se,se,se,se,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dale1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>esg1</name>
					<script>send('do n,n,n,nw,nw,nw,nw,nw,nw,nw,nw,ne,climb down rope,5evade,climb rope,se,sw,se,se,se,se,se,se,se,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^esg1$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Lothlorien</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>loth1</name>
					<script>send("do 20n,12e,path,climb chain,5evade,aft,climb mast,5evade,deck,fore,climb down chain,path,12w,20s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth2</name>
					<script>send("do w,s,e,s,6look waterfall,climb waterfall,5evade,out,n,w,n,e")</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>moria1</name>
					<script>send("do 2se,s,se,2s,w,slip through undergrowth,5evade,s,2n,nw,n,2nw")</script>
					<command></command>
					<packageName></packageName>
					<regex>^moria1$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>South Rhovanion</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>nu1</name>
					<script>send("do s,8w,n,3w,n,w,n,w,n,11w,n,swim across river,10evade")</script>
					<command></command>
					<packageName></packageName>
					<regex>^nu1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gate2</name>
					<script>send("do 9n,e,squeeze around boulder,5evade,out,w,9s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^gate2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gate1</name>
					<script>send("do 8n,move pile,5evade,out,8s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^gate1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg1</name>
					<script>send('do 5s,w,look mound,examine mound,5evade,out,e,5n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg2</name>
					<script>send("do 2s,path,2ne,se,2e,search vines,10evade,search wall,2w,nw,2sw,out,2n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg1</name>
					<script>send("do 4e,s,se,sw,e,say lugburz,5evade,out,w,ne,nw,n,4w")</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg1$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Near Harad</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>op1</name>
					<script>send('do gate,s,3w,enter,descend,5evade,u,out,3e,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op1$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Harondor</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>dcs1</name>
					<script>send("do out,3w,6n,l mound,examine mound,5evade,out,3e,6s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^dcs1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>galen1</name>
					<script>send("do climb down rope,5evade,climb rope")</script>
					<command></command>
					<packageName></packageName>
					<regex>^galen1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar1</name>
					<script>send("do 4nw,8w,part reeds,5evade,plains,8e,4se")</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar1$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Far Harad</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>asu1</name>
					<script>send("do s,se,2s,se,enter,u,w,n,get lamp,5evade,n,get lamp,5evade,e,d,out,nw,2n,nw,n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^asu1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar1</name>
					<script>send("do gates, w, join caravan, 5evade, out, e, out")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar2</name>
					<script>send("do se,2e,3n,4w,2n,6w,enter,step into sand,5evade,climb rope,out,6e,2s,4e,3s,2w,nw")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar3</name>
					<script>send('do gates,n,2nw,2s,u,squeeze through hole,5evade,w,s,se,s,d,e,ne,e,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tav1</name>
					<script>send("do n,2w,n,w,n,n,5evade,s,10n,5evade,s,10n,5evade,2s,e,s,2e,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tav1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tel1</name>
					<script>send("do 17s,27e,pull rope,5evade,pull rope,5evade,27w,17n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tel1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tel2</name>
					<script>send("do 11s,14e,path,w,climb tree,5evade,climb up,5evade,2d,e,out,14w,11n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tel2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tur1</name>
					<script>send("do 11e,path,e,climb tree,5evade,climb down,w,out,11w")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tur1$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Gondor</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>osgi1</name>
					<script>send("do 3e,brush branches,5evade,n,3w")</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi2</name>
					<script>send('do 2e,3n,move brush,5evade,out,3s,2w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi3</name>
					<script>send('do 5w,3n,move vines,5evade,3s,5e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt1</name>
					<script>send("do n,n,ne,ne,n,n,nw,nw,nw,n,n,nw,w,n,n,w,n,n,move vines,5evade,s,s,s,s,e,e,se,s,s,se,se,se,s,s,sw,sw,s,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt11</name>
					<script>send("do 5s,4sw,n,move rug,leap into cellar,5evade,2n,e,nw,e,se,climb wall,5evade,out,3ne,5e,4se,5s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt11$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt12</name>
					<script>send("do 5n,3nw,2n,closet,move boxes,5evade,u,out,2s,3se,5s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt12$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>South Gondor</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>eth1</name>
					<script>send("do 2s,6e,4n,2u,slide down,5evade,4s,6w,2n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^eth1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin1</name>
					<script>send("do s,se,4e,ne,2e,n,e,7n,climb down hill,5evade,climb hill,5evade,s,2e")</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin2</name>
					<script>send("do city,4s,enter,n,u,5evade,d,s,3se,3ne,2n,building,push brick,10evade,out,out,2s,3sw,3nw,out,4n,out")</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel1</name>
					<script>send("do 2se,n,e,n,part reeds,5evade,plains,s,w,s,2nw")</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel1$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Rohan</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>edo1</name>
					<script>send("do s,2s,e,sw,enter,place hand on emblem,5evade,out,exit,ne,w,3n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo2</name>
					<script>send("do 3s,3w,2n,rap four times,5evade,out,2s,3e,3n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>iford1</name>
					<script>send("do 2nw,2n,enter,e,nw,l window,5evade,out,se,w,out,2s,2se")</script>
					<command></command>
					<packageName></packageName>
					<regex>^iford1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>maiden</name>
					<script>send("do 3s,u,2s,2e,u,touch maiden,5evade,w,n,move third stone,hole,move third stone,hole,4n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^maiden$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>amruin</name>
					<script>send('do s,s,s,e,sw,enter,place hand on emblem,5evade,out,exit,ne,w,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^amruin$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Rhun</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>alz1</name>
					<script>send("do n,e,se,5e,n,climb down stairs,5evade,u,s,5w,nw,w,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^alz1$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Mordor</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Umbar</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>umbar1</name>
					<script>send('do trail,examine bushes,crawl through tunnel,5evade,out,gates')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar1$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Paths</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Make Path Alias</name>
				<script>local pathBeg = matches[2]
local pathEnd = matches[3]
local startPoint = matches[4]
local endPoint = matches[5]
local finalPath = t2tMapper.returnPath(startPoint,endPoint)
local finalOpposite = t2tMapper.returnPath(endPoint,startPoint)

if exists(f"{pathBeg}-{pathEnd}", "alias") == 0 then
    permAlias(f"{pathBeg}-{pathEnd}", "Paths", f"^{pathBeg}-{pathEnd}$", f"send('do {finalPath}')")
    cecho(f"&lt;cyan&gt;Created path: &lt;red&gt;{pathBeg}-{pathEnd} - do {finalPath}\n")
else
    cecho(f"&lt;red&gt;Path {pathBeg}-{pathEnd} already exists.\n")
end

if exists(f"{pathEnd}-{pathBeg}", "alias") == 0 then
    permAlias(f"{pathEnd}-{pathBeg}", "Paths", f"^{pathEnd}-{pathBeg}$", f"send('do {finalOpposite}')")
    cecho(f"&lt;cyan&gt;Created path: &lt;red&gt;{pathEnd}-{pathBeg} - do {finalOpposite}\n")
else
    cecho(f"&lt;red&gt;Path {pathEnd}-{pathBeg} already exists.\n")
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^\/path ([\w\d]+)-([\w\d]+) ([\w\d]+) ([\w\d]+)$</regex>
			</Alias>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>FH</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>ship-azz</name>
					<script>send('do s,s,s,s,s,s,w,s,w,w,s,s,s,w,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ship-azz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azz-ship</name>
					<script>send('do s,e,n,n,n,n,n,e,n,n,n,e,n,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azz-ship$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azz-azw</name>
					<script>send('do s,e,e,e,e,e,e,e,e,n,n,e,n,n,e,e,n,e,n,n,e,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azz-azw$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>adun-azz</name>
					<script>send('do w,n,nw,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^adun-azz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azz-adun</name>
					<script>send('do s,se,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azz-adun$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azz-azk</name>
					<script>send('do s,se,s,s,s,s,s,s,sw,s,sw,s,s,s,s,s,s,sw,sw,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azz-azk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ssp-azk</name>
					<script>send('do w,n,w,n,w,n,n,n,n,n,n,w,n,n,n,n,n,w,n,w,n,n,n,n,n,w,w,n,n,w,w,n,w,w,n,w,w,n,w,n,n,w,n,n,w,n,w,n,n,n,n,w,n,n,n,n,w,w,n,w,w,n,w,w,w,w,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ssp-azk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azk-ssp</name>
					<script>send('do n,e,s,e,s,s,e,e,e,e,s,e,s,s,s,e,s,s,s,s,e,s,s,e,s,s,e,s,e,s,s,s,s,s,s,e,s,e,s,e,s,e,s,e,s,e,s,e,s,s,e,s,e,e,s,e,s,e,s,s,e,s,e,s,e,s,e,s,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azk-ssp$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azk-azz</name>
					<script>send('do n,e,e,ne,ne,n,n,n,n,n,n,ne,n,ne,n,n,n,n,n,n,nw,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azk-azz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azk-azw</name>
					<script>send('do n,e,e,ne,ne,ne,n,n,n,n,n,n,n,ne,ne,n,e,n,e,n,n,e,e,n,n,e,e,n,n,e,n,n,e,e,n,e,n,n,e,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azk-azw$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-azk</name>
					<script>send('do s,e,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-azk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-azk</name>
					<script>send('do s,e,e,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-azk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-azk</name>
					<script>send('do ne,n,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-azk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-azk</name>
					<script>send('do s,w,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-azk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azk-bar</name>
					<script>send('do s,s,s,s,sw')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azk-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azk-bank</name>
					<script>send('do s,s,s,w,w,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azk-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azk-heal</name>
					<script>send('do s,s,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azk-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azk-shop</name>
					<script>send('do s,s,s,w,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azk-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azw-azz</name>
					<script>send('do w,w,w,w,w,w,w,s,s,w,s,w,w,s,s,s,w,w,w,s,w,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azw-azz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azw-azk</name>
					<script>send('do w,w,w,w,s,w,s,s,s,s,w,s,s,s,w,s,w,s,w,w,w,s,s,w,s,sw,sw,s,sw,s,sw,s,s,s,s,s,sw,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azw-azk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azw-war</name>
					<script>send('do down,down,se,e,s,s,e,se,up,se')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azw-war$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azw-aze</name>
					<script>send('do down,down,se,e,s,s,e,se,down,down,e,e,e,s,w,n,e,n,e,s,e,e,n,up,w,w,n,n,n,w,w,w,up,e,s,s,s,w,w,w,w,w,n,n,n,w,w,n,up,n,ne,ne,ne,e,e,e,e,ne,up,e,n,e,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azw-aze$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>aze-shop</name>
					<script>send('do w,w,s,w,down,sw,sw,sw,sw,w,w,w,w,s,down,s,e,e,s,s,s,e,e,e,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^aze-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>war-azw</name>
					<script>send('do nw,down,nw,w,n,n,w,nw,up,up')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^war-azw$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-aze</name>
					<script>send('do s,w,w,w,w,n,n,n,w,w,n,up,n,ne,ne,ne,e,e,e,e,ne,up,e,n,e,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-aze$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-aze</name>
					<script>send('do w,n,n,w,w,w,w,w,n,n,n,w,w,n,up,n,ne,ne,ne,e,e,e,e,ne,up,e,n,e,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-aze$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>aze-bar</name>
					<script>send('do w,w,s,w,down,sw,sw,sw,sw,w,w,w,w,s,down,s,e,e,s,s,s,e,e,e,e,e,s,s,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^aze-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>aze-azw</name>
					<script>send('do w,w,s,w,down,sw,sw,sw,sw,w,w,w,w,s,down,s,e,e,s,s,s,e,e,e,e,e,n,n,n,w,down,e,s,s,s,e,e,e,e,down,s,w,w,s,w,w,e,n,w,w,w,up,up,nw,w,n,n,w,nw,up,up')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^aze-azw$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>aze-cem</name>
					<script>send('do w,w,s,w,down,sw,sw,sw,sw,w,w,w,w,s,down,s,e,e,s,s,s,e,e,e,e,e,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^aze-cem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cem-aze</name>
					<script>send('do w,w,w,w,w,w,n,n,n,w,w,n,up,n,ne,ne,ne,e,e,e,e,ne,up,e,n,e,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^cem-aze$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>aze-tur</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,se,s,s,s,s,s,s,s,s,s,s,s,s,e,s,e,s,s,s,s,s,s,e,e,s,e,s,s,e,s,s,e,s,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^aze-tur$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tur-aze</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,w,w,w,w,w,w,n,n,n,n,n,n,n,n,n,n,n,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tur-aze$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>aze-astu</name>
					<script>send('do e,e,se,e,e,se,e,e,se,e,se,e,se,e,se,e,se,e,e,e,e,e,e,se,s,e,s,s,s,e,e,s,s,path,n,n,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^aze-astu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>astu-aze</name>
					<script>send('do s,s,s,s,s,out,w,w,w,n,n,n,n,n,n,nw,w,w,w,w,w,w,nw,w,nw,w,nw,w,nw,w,nw,w,w,nw,w,w,nw,w,w')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^astu-aze$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>astu-khem</name>
					<script>send('do s,s,s,s,s,out,s,s,s,s,se,se,se,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,e,e,e,e,s,e,e,e,e,ne,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^astu-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-astu</name>
					<script>send('do n,w,sw,w,w,w,w,w,w,w,n,w,w,w,w,w,w,n,w,w,w,w,w,w,w,w,w,w,nw,nw,nw,n,n,n,n,path,n,n,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-astu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>astu-tur</name>
					<script>send('do s,s,s,s,s,out,s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,w,w,w,w,w,sw,sw,sw,sw,sw,s,s,s,sw,w,sw,s,s,sw,sw,sw,s,s,s,sw,s,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^astu-tur$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tur-astu</name>
					<script>send('do n,n,ne,n,n,n,ne,ne,ne,n,n,ne,e,ne,n,n,n,ne,ne,ne,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,e,n,e,e,n,e,e,e,path,n,n,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tur-astu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tur-azk</name>
					<script>send('do w,w,w,w,s,s,w,w,w,w,n,squeeze through crack,w,n,n,w,w,w,w,w,w,n,n,n,w,n,n,w,n,n,n,n,n,w,n,w,w,w,n,n,n,n,n,w,n,n,n,w,w,w,n,n,w,n,w,w,w,w,w,w,w,n,n,n,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tur-azk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azk-tur</name>
					<script>send('do n,e,e,ne,ne,ne,n,n,n,n,n,n,n,ne,ne,e,e,e,e,e,e,n,n,n,n,n,n,n,n,e,n,n,e,e,n,e,n,n,e,e,down,down,se,e,s,s,e,se,down,down,e,e,e,s,w,n,e,s,e,n,e,e,n,up,w,w,w,n,w,n,n,w,up,e,s,s,s,w,w,w,w,w,n,n,n,w,w,n,up,n,e,e,e,e,ne,ne,ne,ne,up,e,n,e,e,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,se,s,s,s,s,s,s,s,s,s,s,s,s,e,s,e,s,s,s,s,s,s,e,e,s,e,s,s,e,s,s,e,s,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^azk-tur$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>farrow-tur</name>
					<script>send('do sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,s,s,sw,sw,sw,s,s,s,sw,s,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^farrow-tur$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tur-farrow</name>
					<script>send('do n,n,ne,n,n,n,ne,ne,ne,n,n,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tur-farrow$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-farrow</name>
					<script>send('do n,w,sw,w,sw,w,w,sw,w,w,w,w,w,w,w,sw,sw,w,w,w,w,w,w,sw,s,s,s,s,s,s,s,s,s,ne')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-farrow$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>farrow-khem</name>
					<script>send('do sw,n,n,n,n,n,n,n,n,n,ne,e,e,e,e,e,e,ne,ne,e,e,e,e,e,e,e,ne,e,e,ne,e,ne,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^farrow-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-wfheal</name>
					<script>send('do n,w,sw,w,sw,w,w,sw,s,s,s,s,s,s,s,s,w')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-wfheal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wfheal-khem</name>
					<script>send('do e,n,n,n,n,n,n,n,n,ne,e,e,ne,e,ne,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^wfheal-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-bus</name>
					<script>send('do n,w,sw,s,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-bus$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bus-khem</name>
					<script>send('do n,n,ne,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bus-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-hhp</name>
					<script>send('do n,e,e,e,e,e,ne,e,e,e,e,ne,n,n,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-hhp$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>hhp-khem</name>
					<script>send('do w,s,s,s,sw,w,w,w,w,sw,w,w,w,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^hhp-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-varbow</name>
					<script>send('do n,e,e,e,e,e,ne,e,e,e,e,ne,e,e,e,n,e,n,n,e,e,n,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-varbow$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>varbow-khem</name>
					<script>send('do w,w,w,w,w,w,w,s,s,s,s,s,sw,w,w,w,w,sw,w,w,w,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^varbow-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-erlvl5</name>
					<script>send('do n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-erlvl5$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>erlvl5-khem</name>
					<script>send('do w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^erlvl5-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-bun</name>
					<script>send('do n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,s,se,se,s,se,down,se,se,s,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-bun$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bun-khem</name>
					<script>send('do n,n,nw,nw,up,nw,n,nw,nw,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bun-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-asu</name>
					<script>send('do n,e,e,e,e,e,ne,e,e,e,e,ne,e,e,e,e,e,e,e,se,e,e,e,se,ne,e,e,e,ne,e,e,ne,e,e,e,e,ne,e,e,e,e,e,e,ne,e,e,e,e,down,e,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-asu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>asu-khem</name>
					<script>send('do n,w,w,up,w,w,w,w,sw,w,w,w,w,w,w,sw,w,w,w,w,sw,w,w,sw,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^asu-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-tel</name>
					<script>send('do n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,s,se,se,s,se,down,se,se,s,s,s,s,s,sw,s,sw,s,s,s,s,s,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,ne,n,n,ne,n,ne')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-tel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tel-khem</name>
					<script>send('do sw,s,sw,s,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,n,n,n,n,n,ne,n,ne,n,n,n,n,n,nw,nw,up,nw,n,nw,nw,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tel-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-tav</name>
					<script>send('do n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,s,se,se,s,se,down,se,se,s,s,s,s,s,sw,s,sw,s,s,s,s,s,s,se,s,se,s,s,s,se,se,s,s,s,s,s,s,s,s,s,se,se,se,se,se,s,e,s,e,s,e,e,s,e,s,e,s,s,s,se,se,se,s,se,s,se,se,se,e,e,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-tav$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tav-khem</name>
					<script>send('do s,w,w,w,nw,nw,nw,nw,n,n,nw,nw,nw,n,n,w,w,w,w,w,w,nw,n,n,n,n,nw,nw,nw,nw,nw,nw,nw,nw,n,nw,nw,n,n,n,n,n,n,n,n,n,n,n,ne,n,n,n,n,ne,n,ne,n,ne,n,n,n,n,n,nw,nw,up,nw,n,nw,nw,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tav-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-tar</name>
					<script>send('do n,e,e,e,e,e,ne,e,e,e,e,ne,n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,ne,n,ne,n,ne,e,e,ne,e,e,e,ne,ne,down,ne,ne,e,e,ne,ne,e,ne,n,n,ne,n,ne,n,n,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,w,nw,w,w,w,w,w,w,nw,nw,w,nw,w,w,w,nw')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-khem</name>
					<script>send('do se,e,se,se,e,e,se,e,e,se,e,e,e,e,e,e,se,se,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,s,s,s,s,sw,s,sw,s,s,sw,w,sw,sw,w,w,sw,sw,up,sw,sw,w,w,w,sw,w,w,sw,s,sw,s,sw,s,s,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-heal</name>
					<script>send('do s,s,s,s,s,s,s,w,w,w,w,w')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-khem</name>
					<script>send('do e,e,e,e,e,n,n,n,n,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-shop</name>
					<script>send('do s,s,s,s,s,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-khem</name>
					<script>send('do out,n,n,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-bb</name>
					<script>send('do s,s,s,e,e,se,se,s,s,s,s,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-bb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bb-khem</name>
					<script>send('do w,n,n,n,n,nw,nw,w,w,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bb-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-boat</name>
					<script>send('do s,s,s,w,w,w,w,w,w,nw')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-boat$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>boat-khem</name>
					<script>send('do out,e,e,e,e,e,e,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^boat-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tima-khem</name>
					<script>send('do campsite,path,out,s,e,e,e,e,e,e,s,e,e,s,e,e,e,s,up,sw,sw,w,w,w,sw,w,w,sw,s,sw,s,sw,s,s,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tima-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-tima</name>
					<script>send('do n,e,e,e,e,e,ne,e,e,e,e,ne,n,e,e,e,e,e,e,n,e,e,e,e,e,e,n,ne,n,ne,n,ne,e,e,ne,e,e,e,ne,ne,down,n,n,w,w,w,w,w,n,n,w,w,w,w,w,w,path,campsite,hovel')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-tima$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bun-rb</name>
					<script>send('do s,e,e,s,s,e,farm,inside,e,bedroom')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bun-rb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rb-bun</name>
					<script>send('do out,w,out,plains,n,w,w,n,w,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^rb-bun$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bun-asu</name>
					<script>send('do n,e,e,e,e,e,n,n,e,n,e,e,n,e,n,n,n,e,e,e,e,n,n,n,e,e,e,n,n,n,e,e,n,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bun-asu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>asu-bun</name>
					<script>send('do n,w,w,s,w,w,s,w,w,s,w,s,w,s,w,s,w,w,s,s,w,s,s,s,w,s,w,w,w,s,w,w,s,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^asu-bun$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bun-tel</name>
					<script>send('do s,s,s,sw,s,sw,s,s,s,s,s,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,ne,n,n,ne,n,ne')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bun-tel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bun-tav</name>
					<script>send('do s,s,s,sw,s,sw,s,s,s,s,s,s,se,s,se,s,s,s,se,se,s,s,s,s,s,s,s,s,s,se,se,se,se,se,s,e,e,s,s,e,e,s,s,e,e,s,s,s,se,se,se,s,se,s,se,se,se,e,e,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bun-tav$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tel-bun</name>
					<script>send('do sw,s,sw,s,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,n,n,n,n,n,ne,n,ne,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tel-bun$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tav-bun</name>
					<script>send('do s,w,w,w,nw,nw,nw,nw,n,n,nw,nw,nw,n,n,w,w,w,w,w,w,nw,n,n,n,n,nw,nw,nw,nw,nw,nw,nw,ne,n,n,ne,n,n,n,ne,nw,nw,n,n,n,nw,n,nw,n,n,n,n,n,n,ne,n,ne,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tav-bun$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tav-monkey</name>
					<script>send('do s,w,n,n,hut')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tav-monkey$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>monkey-tav</name>
					<script>send('do out,s,s,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^monkey-tav$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tav-tel</name>
					<script>send('do s,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,nw,n,n,n,n,w,w,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tav-tel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tel-tav</name>
					<script>send('do s,s,s,s,s,e,e,se,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tel-tav$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tel-asu</name>
					<script>send('do sw,s,sw,s,s,sw,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,n,n,n,n,ne,n,ne,n,n,n,n,e,n,e,e,e,e,n,e,n,e,e,n,e,e,n,n,n,e,n,n,n,e,e,e,e,e,e,n,n,n,n,e,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tel-asu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>asu-tel</name>
					<script>send('do n,w,s,s,s,s,s,s,w,w,w,w,s,w,s,s,w,s,w,w,w,w,s,w,s,s,w,s,w,w,w,w,w,w,s,s,s,s,sw,s,sw,s,s,s,s,s,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,ne,n,n,ne,n,ne')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^asu-tel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tel-shs</name>
					<script>send('do s,s,s,s,s,e,e,se,s,s,s,s,s,s,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tel-shs$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shs-tel</name>
					<script>send('do n,n,n,n,n,n,w,nw,n,n,n,n,w,w,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^shs-tel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tel-dbr</name>
					<script>send('do e,e,s,e,e,s,s,e,e,e,e,e,e,e,e,e,s,se,e,se,se,s,s,se,s,s,se,s,s,s,se,e,e,e,e,e,e,e,pull rope')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tel-dbr$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dbr-tel</name>
					<script>send('do pull rope,w,w,w,w,w,w,w,nw,n,n,n,nw,n,n,nw,n,n,nw,nw,w,nw,w,w,w,w,w,w,w,w,w,n,w,n,w,n,w,w,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^dbr-tel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tel-bh</name>
					<script>send('do e,e,e,s,e,s,e,e,s,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tel-bh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bh-tel</name>
					<script>send('do w,w,w,w,n,w,n,w,w,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bh-tel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tav-tar</name>
					<script>send('do s,w,w,w,nw,nw,nw,nw,n,n,nw,nw,nw,n,n,w,w,w,w,w,w,nw,n,n,n,n,nw,nw,nw,nw,nw,nw,nw,nw,n,nw,nw,n,n,n,n,n,n,n,n,n,n,n,ne,n,n,n,n,ne,n,ne,n,ne,n,n,n,n,n,nw,nw,up,n,n,n,n,n,n,n,ne,n,n,n,n,n,n,n,n,ne,e,e,e,ne,ne,down,ne,ne,e,e,ne,ne,e,ne,n,n,ne,n,ne,n,n,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,w,nw,w,w,w,w,w,w,nw,nw,w,nw,w,w,w,nw')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tav-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-tav</name>
					<script>send('do se,e,se,se,e,e,se,e,e,se,e,e,e,e,e,e,se,se,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,s,s,s,s,sw,s,sw,s,s,sw,w,sw,sw,w,w,sw,sw,up,sw,sw,s,s,s,s,s,s,s,s,w,sw,w,w,sw,s,s,s,s,s,s,s,down,se,se,s,s,s,s,s,sw,s,sw,s,s,s,s,s,s,se,s,se,s,s,s,se,se,s,s,s,s,s,s,s,s,s,se,se,se,se,se,s,e,e,s,e,s,s,e,s,e,s,e,s,s,se,se,se,s,se,s,se,se,se,e,e,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-tav$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tel-tar</name>
					<script>send('do sw,s,sw,s,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,n,n,n,n,n,ne,n,ne,n,n,n,n,n,nw,nw,up,n,n,n,n,n,n,n,ne,n,n,n,n,n,n,n,n,ne,e,e,e,ne,ne,down,ne,ne,e,e,ne,ne,e,ne,n,n,ne,n,ne,n,n,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,w,nw,w,w,w,w,w,w,nw,nw,w,nw,w,w,w,nw')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tel-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-tel</name>
					<script>send('do se,e,se,se,e,e,se,e,e,se,e,e,e,e,e,e,se,se,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,s,s,s,s,sw,s,sw,s,s,sw,w,sw,sw,w,w,sw,sw,up,sw,sw,s,s,s,s,s,s,s,s,w,sw,w,w,sw,s,s,s,s,s,s,s,down,se,se,s,s,s,s,s,sw,s,sw,s,s,s,s,s,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,ne,n,n,ne,n,ne')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-tel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-asu</name>
					<script>send('do se,e,se,ne,se,se,e,se,e,se,e,e,e,e,e,e,se,se,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,s,s,s,e,e,s,s,s,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-asu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>asu-tar</name>
					<script>send('do n,w,n,n,w,n,w,n,n,n,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,w,nw,w,w,w,w,w,w,nw,nw,w,nw,w,w,w,nw')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^asu-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-astu</name>
					<script>send('do se,e,se,ne,se,se,e,se,e,se,e,e,e,e,e,e,se,se,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,s,s,s,s,sw,s,sw,s,s,sw,w,sw,sw,w,w,sw,sw,up,sw,sw,w,w,w,sw,w,w,sw,s,sw,s,sw,w,w,w,w,w,w,w,s,w,w,w,w,w,s,s,sw,w,w,w,w,sw,w,w,w,w,w,w,sw,w,w,w,w,w,n,w,w,w,n,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,nw,nw,n,n,n,n,path,n,n,n,n,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-astu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>astu-tar</name>
					<script>send('do s,s,s,s,s,out,s,s,s,s,se,se,se,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,e,e,e,e,s,e,e,e,e,ne,e,e,e,e,e,e,ne,e,e,e,e,ne,n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,ne,n,ne,n,ne,e,e,ne,e,e,e,ne,ne,down,ne,ne,e,e,ne,ne,e,ne,n,n,ne,n,ne,n,n,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,w,nw,w,w,w,w,w,w,nw,nw,w,nw,w,w,w,nw')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^astu-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bun-pelt</name>
					<script>send('do n,w,w,w,w,w,w,s,w,w,s,w,w,w,w,w')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bun-pelt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pelt-bun</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,n,e,e,n,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^pelt-bun$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>asu-pelt</name>
					<script>send('do n,w,w,up,w,w,w,w,sw,w,w,w,w,w,w,sw,w,w,w,w,sw,w,w,sw,s,s,s,s,s,s,s,down,s,w,w,w,s,s,w,s,w,w,s,w,w,w,w,w')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^asu-pelt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pelt-asu</name>
					<script>send('do e,e,e,e,e,n,e,e,e,e,e,n,n,n,e,n,up,n,n,n,n,n,n,n,ne,e,e,ne,e,e,e,e,ne,e,e,e,e,e,e,ne,e,e,e,e,down,e,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^pelt-asu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-pelt</name>
					<script>send('do se,e,se,se,e,e,se,e,e,se,e,e,e,e,e,e,se,se,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,s,s,s,s,sw,s,sw,s,s,sw,w,sw,sw,w,w,sw,sw,up,sw,sw,s,s,s,s,s,s,s,s,w,sw,w,w,sw,s,s,s,s,s,s,s,down,s,w,w,w,s,s,w,s,w,w,s,w,w,w,w,w')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-pelt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pelt-tar</name>
					<script>send('do e,e,e,e,e,n,e,e,n,e,n,n,e,e,e,n,up,n,n,n,n,n,n,n,ne,n,n,n,n,n,n,n,n,ne,e,e,e,ne,ne,down,ne,ne,e,e,ne,ne,e,ne,n,n,ne,n,ne,n,n,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,w,nw,w,w,w,w,w,w,nw,nw,w,nw,w,w,w,nw')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^pelt-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>asu-prism</name>
					<script>send('do n,e,e,e,e,e,e,e,e,n,n,e,n,e,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^asu-prism$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>prism-asu</name>
					<script>send('do w,w,w,w,w,w,w,w,w,s,s,s,s,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^prism-asu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>asu-tima</name>
					<script>send('do n,n,n,n,n,n,n,n,w,w,w,n,w,w,w,w,n,w,w,n,w,w,w,n,w,w,w,w,n,w,w,w,n,n,w,w,w,w,w,w,path,campsite,hovel')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^asu-tima$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tima-asu</name>
					<script>send('do campsite,path,out,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,s,e,e,e,e,s,s,s,s,s,s,s,e,s,e,s,s,s,s,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tima-asu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-tima</name>
					<script>send('do se,e,se,ne,se,se,e,se,e,se,e,e,e,e,e,e,se,se,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,s,s,s,s,sw,s,sw,s,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,path,campsite,hovel')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-tima$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tima-tar</name>
					<script>send('do campsite,path,out,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,n,n,ne,n,ne,n,n,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,w,nw,w,w,w,w,w,w,nw,nw,w,nw,w,w,w,nw')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tima-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-hurricane</name>
					<script>send('do n,n,n,nw,w,w,w,w,w,w')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-hurricane$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>hurricane-tar</name>
					<script>send('do e,e,e,e,e,se,s,s,s,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^hurricane-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-erlvl10</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,w')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-erlvl10$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>erlvl10-tar</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^erlvl10-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tur-belt</name>
					<script>send('do e,s,e,s,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tur-belt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>belt-tur</name>
					<script>send('do w,n,w,n,w')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^belt-tur$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-bank</name>
					<script>send('do gates,n,nw,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-tar</name>
					<script>send('do n,se,s,out')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-heal</name>
					<script>send('do gates,n,nw,nw,w,w,w,s,w')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-tar</name>
					<script>send('do e,se,e,ne,n,se,se,s,out')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pelts-tar</name>
					<script>send('do n,n,se,se,s,out')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^pelts-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-pelts</name>
					<script>send('do gates,n,nw,nw,s,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-pelts$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pelts-asu</name>
					<script>send('do n,n,se,se,s,out,se,e,se,ne,se,se,se,e,e,e,e,e,e,e,se,e,se,se,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,se,e,s,s,s,s,e,e,s,s,s,s,s,s,s,s,s,s,e,s,s,s,s,s,s,s,s,s,s,e,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^pelts-asu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>asu-pelts</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,w,n,w,w,n,n,n,n,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,w,nw,sw,w,w,nw,w,w,nw,w,nw,nw,sw,nw,w,nw,gates,n,nw,nw,s,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^asu-pelts$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tel-pelts</name>
					<script>send('do sw,s,sw,s,s,sw,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,n,n,n,n,ne,n,ne,n,n,n,n,n,nw,nw,up,n,n,n,n,n,n,n,ne,e,e,ne,n,n,n,n,n,n,n,n,e,ne,ne,down,ne,ne,e,e,ne,ne,e,ne,n,n,ne,n,ne,n,n,n,n,nw,sw,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,w,nw,sw,w,w,w,nw,w,nw,nw,w,nw,w,w,w,nw,gates,n,nw,nw,s,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tel-pelts$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pelts-tel</name>
					<script>send('do n,n,se,se,s,out,se,e,se,se,e,e,se,e,e,se,e,e,e,e,e,e,se,se,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,s,s,s,s,sw,s,sw,s,s,sw,w,sw,sw,w,w,sw,sw,up,sw,sw,s,s,s,s,s,s,s,s,w,sw,w,w,sw,s,s,s,s,s,s,s,down,se,se,s,s,s,s,s,sw,s,sw,s,s,s,s,s,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,ne,n,n,ne,n,ne')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^pelts-tel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tav-pelts</name>
					<script>send('do s,w,w,w,nw,nw,nw,nw,n,n,nw,nw,nw,n,n,n,n,w,w,w,w,n,n,w,w,nw,nw,nw,nw,nw,nw,nw,nw,nw,n,nw,nw,n,n,n,n,n,n,n,n,n,n,n,ne,n,n,n,n,ne,n,ne,n,ne,n,n,n,n,n,nw,nw,up,n,n,n,n,n,n,n,ne,e,e,ne,n,n,e,n,n,n,n,n,n,ne,ne,down,ne,ne,e,e,ne,ne,e,ne,n,n,ne,n,ne,n,n,n,n,nw,sw,sw,w,w,w,w,w,w,w,w,w,w,w,nw,w,w,w,w,w,nw,nw,w,nw,sw,w,w,w,nw,w,w,nw,nw,nw,sw,nw,w,nw,gates,n,nw,nw,s,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tav-pelts$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pelts-tav</name>
					<script>send('do n,n,se,se,s,out,se,e,se,se,e,e,se,e,e,se,e,e,e,e,e,e,se,se,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,s,s,s,s,sw,s,sw,s,s,sw,w,sw,sw,w,w,sw,sw,up,sw,sw,s,s,s,s,s,s,s,s,w,sw,w,w,sw,s,s,s,s,s,s,s,down,se,se,s,s,s,s,s,sw,s,sw,s,s,s,s,s,s,se,s,se,s,s,s,se,se,s,s,s,s,s,s,s,s,s,se,se,se,se,se,s,e,e,s,e,s,s,e,e,s,s,e,s,s,se,se,se,s,se,s,se,se,se,e,e,e,n')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^pelts-tav$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>khem-pelts</name>
					<script>send('do n,e,e,e,e,e,ne,e,e,e,e,ne,n,e,e,e,e,e,e,n,e,e,e,e,e,e,n,ne,n,ne,n,ne,e,e,ne,e,e,e,ne,ne,down,ne,ne,e,e,ne,ne,e,ne,n,n,ne,n,ne,n,n,n,n,w,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,w,nw,sw,w,w,nw,w,w,nw,nw,sw,w,nw,nw,w,nw,gates,n,nw,nw,s,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^khem-pelts$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pelts-khem</name>
					<script>send('do n,n,se,se,s,out,se,e,se,se,e,e,se,e,e,se,e,e,e,e,e,e,se,se,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,s,s,s,s,sw,s,sw,s,s,sw,w,sw,sw,w,w,sw,sw,up,sw,sw,w,w,w,sw,w,w,sw,s,sw,s,sw,s,s,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,s')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^pelts-khem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-shop</name>
					<script>send('do gates,n,nw,nw,w,w,w,s,e')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-tar</name>
					<script>send('do w,se,e,ne,n,se,se,s,out')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-tar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tar-sharp</name>
					<script>send('do gates,n,nw,nw,s,sw,w,ne')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tar-sharp$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sharp-tar</name>
					<script>send('do sw,e,ne,n,se,se,s,out')
expandAlias("map me")</script>
					<command></command>
					<packageName></packageName>
					<regex>^sharp-tar$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>GON</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>cal-edo</name>
					<script>send('do nw,nw,n,w,n,w,n,nw,w,nw,nw,w,w,w,nw,nw,w,w,w,w,nw,nw,nw,nw,n,n,n,nw,nw,nw,nw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt-edo</name>
					<script>send('do n,n,ne,ne,n,n,nw,nw,nw,n,n,nw,sw,nw,nw,w,nw,w,w,w,nw,w,w,w,w,w,w,nw,n,n,n,nw,w,w,w,w,nw,w,w,w,nw,w,w,w,nw,w,nw,w,w,w,w,w,nw,w,w,w,nw,nw,w,w,w,w,nw,nw,nw,nw,n,n,n,nw,nw,nw,nw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-edo</name>
					<script>send('do w,w,w,w,w,w,w,nw,w,w,w,nw,w,w,w,w,w,w,nw,w,w,w,w,w,w,nw,w,w,w,w,w,w,w,nw,nw,n,w,n,n,w,nw,w,nw,nw,w,w,w,nw,nw,w,w,w,w,nw,nw,nw,nw,n,n,n,nw,nw,nw,nw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cal-osgi</name>
					<script>send('do e,e,e,e,e,e,e,se,e,e,e,e,e,e,se,e,e,e,e,e,e,se,e,e,e,se,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cal-mt</name>
					<script>send('do e,e,e,e,e,e,e,se,e,e,e,e,e,e,se,e,e,e,e,e,e,se,e,e,e,se,e,se,se,ne,se,s,s,se,se,se,s,s,sw,sw,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-mt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>woses-edo</name>
					<script>send('do forest,s,w,nw,w,w,w,w,w,w,nw,n,n,n,nw,w,w,w,w,nw,w,w,w,nw,w,w,w,w,w,w,w,w,nw,w,nw,nw,w,w,w,nw,nw,w,w,w,w,nw,nw,nw,nw,n,n,n,nw,nw,nw,nw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^woses-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wag-mt</name>
					<script>send('do w,nw,n,e,e,e,e,se,e,e,e,se,e,e,e,e,se,s,s,s,se,e,e,e,e,e,e,se,e,e,e,se,e,se,se,e,e,s,s,se,se,se,s,s,sw,sw,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^wag-mt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cal-woses</name>
					<script>send('do e,e,e,e,e,e,e,se,e,e,e,e,e,e,se,e,e,e,e,e,e,se,e,n,village')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-woses$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-cal</name>
					<script>send('do w,w,w,w,w,w,w,nw,w,w,w,nw,w,w,w,w,w,w,nw,w,w,w,w,w,w,nw,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt-cal</name>
					<script>send('do n,n,ne,ne,n,n,nw,nw,nw,n,n,nw,w,w,nw,w,nw,w,w,w,nw,w,w,w,w,w,w,nw,w,w,w,w,w,w,nw,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wag-edo</name>
					<script>send('do w,nw,n,nw,w,w,w,w,w,nw,nw,w,w,w,nw,nw,w,w,w,w,nw,nw,nw,nw,n,n,n,nw,nw,nw,nw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^wag-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cal-wag</name>
					<script>send('do nw,n,n,n,n,e,s,se,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-wag$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wag-cal</name>
					<script>send('do w,nw,n,w,s,s,s,s,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^wag-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt-wag</name>
					<script>send('do n,n,ne,ne,n,n,nw,nw,nw,n,n,nw,sw,nw,nw,w,nw,w,w,w,nw,w,w,w,w,w,w,nw,n,n,n,nw,w,w,w,w,nw,w,w,w,nw,w,w,w,w,s,se,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt-wag$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>woses-cal</name>
					<script>send('do forest,s,w,nw,w,w,w,w,w,w,nw,w,w,w,w,w,w,nw,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^woses-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-woses</name>
					<script>send('do w,w,w,w,w,w,w,nw,w,w,n,village')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-woses$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>woses-osgi</name>
					<script>send('do forest,s,e,e,se,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^woses-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>stone-edo</name>
					<script>send('do s,nw,w,w,w,nw,w,w,w,w,w,w,nw,w,w,w,w,w,w,nw,w,w,w,w,w,w,w,nw,nw,n,w,n,n,w,nw,w,nw,nw,w,w,w,nw,nw,w,w,w,w,nw,nw,nw,nw,n,n,n,nw,nw,nw,nw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^stone-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-stone</name>
					<script>send('do w,w,w,w,w,w,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-stone$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>stone-osgi</name>
					<script>send('do s,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^stone-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt-sapphy</name>
					<script>send('do n,n,ne,ne,n,n,nw,nw,nw,n,n,nw,sw,nw,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt-sapphy$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sapphy-mt</name>
					<script>send('do s,s,s,s,se,e,e,s,s,se,se,se,s,s,sw,sw,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^sapphy-mt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-sapphy</name>
					<script>send('do w,w,w,w,w,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-sapphy$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sapphy-osgi</name>
					<script>send('do s,s,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^sapphy-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt-osgi</name>
					<script>send('do n,n,ne,ne,n,n,nw,nw,nw,n,n,ne,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-mt</name>
					<script>send('do sw,sw,s,s,se,se,se,s,s,sw,sw,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-mt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cal-upb</name>
					<script>send('do nw,nw,w,n,w,n,n,nw,w,nw,nw,w,w,w,nw,nw,w,w,w,w,nw,nw,nw,nw,n,w,n,w,nw,w,sw,se,s,e,s,s,s,e,s,e,s,e,e,s,s,s,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-upb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cal-horn</name>
					<script>send('do nw,nw,n,w,n,w,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-horn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cal-anfi</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-anfi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>anfi-edo</name>
					<script>send('do n,w,w,nw,w,w,w,nw,w,w,w,w,nw,w,w,sw,nw,w,nw,nw,w,w,w,nw,nw,w,w,w,w,nw,nw,nw,nw,n,n,n,nw,nw,nw,nw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^anfi-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-anfi</name>
					<script>send('do w,w,w,w,w,w,w,nw,w,w,w,nw,w,w,w,w,w,w,nw,w,n,n,w,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-anfi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>anfi-osgi</name>
					<script>send('do e,e,e,e,e,e,e,e,e,se,e,e,e,e,e,e,e,se,se,s,e,s,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^anfi-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>anfi-cal</name>
					<script>send('do w,w,w,w,w,w,w,w,w,s,w,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^anfi-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-cal</name>
					<script>send('do e,out,down')</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cal-shop</name>
					<script>send('do up,enter,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt-pel</name>
					<script>send('do s,s,sw,sw,s,s,s,s,sw,s,s,sw,s,s,s,sw,s,sw,s,sw,sw,s,sw,s,sw,s,sw,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt-lin</name>
					<script>send('do s,s,sw,sw,s,s,s,s,sw,s,s,sw,s,s,s,sw,s,sw,s,sw,sw,s,sw,s,sw,s,sw,sw,s,w,w,w,w,sw,w,w,sw,w,w,sw,w,w,sw,w,w,w,w,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt-da</name>
					<script>send('do s,s,sw,sw,s,s,s,s,sw,s,s,sw,s,s,s,sw,s,sw,w,w,w,w,w,w,s,w,w,w,w,w,w,n,n,w,w,w,w,w,s,w,s,s,w,w,w,s,w,s,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,w,w,w,w,w,w,w,w,w,w,w,w,n,enter')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt-da$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt-goth</name>
					<script>send('do n,n,ne,ne,n,n,nw,nw,nw,n,n,ne,ne,e,s,sw,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt-goth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>goth-mt</name>
					<script>send('do e,e,e,ne,n,w,sw,sw,s,s,se,se,se,s,s,sw,sw,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^goth-mt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-morg</name>
					<script>send('do e,e,e,e,e,e,ne,se,e,e,se,e,gate,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-heal</name>
					<script>send('do e,e,e,e,e,e,ne,se,e,e,n,e,e,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-forge</name>
					<script>send('do e,e,e,e,e,e,se,ne,e,e,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-forge$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-inn</name>
					<script>send('do e,e,e,e,e,e,ne,se,e,e,n,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-ud</name>
					<script>send('do e,e,e,e,e,e,ne,se,e,e,n,n,n,n,ne,climb through window')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-ud$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-shop</name>
					<script>send('do e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-war</name>
					<script>send('do e,e,e,e,e,e,ne,se,e,e,n,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-war$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-goth</name>
					<script>send('do e,s,sw,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-goth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>goth-osgi</name>
					<script>send('do e,e,e,ne,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^goth-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>forge-osgi</name>
					<script>send('do n,n,w,w,nw,sw,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^forge-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-osgi</name>
					<script>send('do s,sw,w,w,s,w,w,nw,sw,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-osgi</name>
					<script>send('do w,w,w,s,w,w,nw,sw,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ud-osgi</name>
					<script>send('do out,sw,s,s,s,s,w,w,nw,sw,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ud-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ud-morg</name>
					<script>send('do out,sw,s,s,s,s,se,e,gate,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ud-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-morg</name>
					<script>send('do w,w,w,s,se,e,gate,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-osgi</name>
					<script>send('do n,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>war-osgi</name>
					<script>send('do n,w,w,w,s,w,w,nw,sw,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^war-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>war-morg</name>
					<script>send('do n,w,w,w,s,se,e,gate,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^war-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-morg</name>
					<script>send('do s,sw,w,w,s,se,e,gate,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>goth-morg</name>
					<script>send('do e,e,e,ne,n,e,e,e,e,e,se,ne,e,e,se,e,gate,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^goth-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt-kadar</name>
					<script>send('do s,s,sw,sw,s,s,s,s,sw,s,s,sw,s,s,s,sw,s,sw,s,sw,sw,s,sw,s,sw,s,sw,sw,s,se,se,e,e,e,e,e,e,e,e,e,e,e,se,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mt-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>forge-morg</name>
					<script>send('do n,n,se,e,gate,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^forge-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>osgi-sts</name>
					<script>send("do 4n,4w,nw,n,enter,n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^osgi-sts$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>LOT</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>loth-by</name>
					<script>send('do w,w,w,w,w,w,s,w,w,w,w,w,w,w,nw,n,ne,n,n,n,n,nw,n,nw,n,n,nw,nw,w,w,w,nw,w,w,sw,w,w,w,w,w,w,nw,nw,nw,nw,nw,nw,nw,w,w,w,w,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,w,w,w,w,w,w,w,w,w,w,w,w,s,w,s,w,s,w,w,nw,n,n,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,w,nw,nw,nw,w,nw,n,n,n,n,n,n,nw,nw,nw,n,n,n,nw,nw,n,nw,n,nw,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-riv</name>
					<script>send('do w,w,w,w,w,w,s,w,w,n,w,n,n,w,w,w,w,n,n,n,n,nw,n,nw,n,n,nw,nw,w,w,w,nw,w,w,sw,w,n,n,n,n,nw,nw,nw,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-gob</name>
					<script>send('do w,w,w,w,w,w,s,w,w,n,w,n,n,w,w,w,w,n,n,n,n,nw,n,nw,n,n,nw,nw,w,w,w,nw,w,w,sw,w,w,w,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-gob$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-ado</name>
					<script>send('do w,w,w,w,w,w,s,w,w,n,w,n,n,w,w,w,w,n,n,n,n,nw,n,nw,n,n,nw,nw,w,w,w,nw,w,w,sw,w,w,w,w,w,w,w,w,w,w,nw,w,w,w,w,nw,sw,sw,w,nw,sw,sw,sw,w,sw,nw,sw,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,se,se,se,se,se,se,se,s,se,e,se,e,se,e,se,e,se,s,sw,s,se,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-edo</name>
					<script>send('do w,w,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,e,e,e,s,s,e,e,e,e,e,e,s,e,e,e,s,e,e,e,s,e,e,e,e,e,e,s,s,s,s,s,s,s,s,w,s,s,s,s,w,w,s,s,w,w,s,s,s,s,w,w,w,w,w,s,w,s,s,s,s,s,s,s,w,s,s,s,s,w,s,s,w,w,w,w,w,w,w,w,w,s,w,w,s,w,w,s,w,w,w,w,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-warg</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,n,n,n,nw,nw,nw,nw,n,ne,n,n,n,camp,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-warg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-frams</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,nw,n,ne,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-frams$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-rhos</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,e,e,e,e,e,n,e,n,e,e,n,e,n,n,n,n,n,e,e,e,e,ne,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-dg</name>
					<script>send('do s,w,w,w,w,w,w,s,s,e,e,e,s,e,e,s,e,e,e,s,e,s,s,e,s,s,e,s,e,s,e,s,e,s,e,e,s,e,e,s,e,e,e,s,s,s,s,s,e,e,n,e,n,e,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,w,n,w,n,n,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-ship</name>
					<script>send('do n,n,n,n,n,n,n,n,n,e,n,e,e,n,e,e,n,n,n,e,n,n,n,n,e,n,e,e,e,e,e,n,path,climb chain')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-ship$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-moria</name>
					<script>send('do w,w,w,w,w,w,s,w,w,n,n,w,n,w,w,w,w,n,n,n,n,nw,n,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-moria$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>moria-loth</name>
					<script>send('do se,se,s,se,s,s,s,s,e,e,e,e,s,e,s,s,e,e,e,e,e,e,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^moria-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-brew</name>
					<script>send('do w,w,w,w,w,w,s,w,w,n,n,w,n,w,w,w,w,n,n,n,n,nw,n,nw,n,n,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-brew$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>brew-loth</name>
					<script>send('do sw,s,s,se,s,se,s,s,s,s,e,e,e,e,s,e,s,s,e,e,e,e,e,e,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^brew-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-haub</name>
					<script>send('do w,w,w,w,w,w,s,w,w,w,w,w,w,w,nw,n,ne,n,n,n,n,nw,n,nw,n,n,nw,nw,w,w,w,nw,w,w,sw,w,w,w,s,s,sw,s,e,n,n,ne,ne,se,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-haub$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-dwh</name>
					<script>send('do n,w,n,w,n,n,n,w,w,n,w,n,n,w,n,w,nw,n,n,n,enter')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-dwh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-wiz</name>
					<script>send('do w,w,w,w,n,w,nw,ne,nw,enter,up,up')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-wiz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-fran</name>
					<script>send('do s,w,w,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,w,s,w,s,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-fran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-hp</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,nw,n,ne,nw,nw,nw,nw,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-hp$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wiz-loth</name>
					<script>send('do stairs,down,out,se,sw,se,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^wiz-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>loth-vc</name>
					<script>send('do w,w,w,w,w,w,s,w,w,w,w,n,w,n,w,n,w,n,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^loth-vc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>vc-loth</name>
					<script>send('do e,s,s,e,e,e,e,s,e,s,s,e,e,e,e,e,e,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^vc-loth$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>MOR</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>mm-morg</name>
					<script>send('do nw,w,w,n,w,w,w,w,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mm-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mmbar-morg</name>
					<script>send('do s,w,nw,nw,nw,n,n,n,ne,ne,ne,e,e,gates,nw,sw,nw,n,ne,traverse wreckage,nw,w,w,n,w,w,w,w,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mmbar-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd3-inn</name>
					<script>send('do e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd3-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-bd3</name>
					<script>send('do n,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-bd3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd3-bank</name>
					<script>send('do e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd3-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-bd3</name>
					<script>send('do n,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-bd3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd3-bar</name>
					<script>send('do e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd3-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-bd3</name>
					<script>send('do s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-bd3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd2-inn</name>
					<script>send('do n,n,n,n,n,ne,ne,ne,ne,e,e,e,e,e,e,e,e,se,se,se,se,s,s,s,s,s,s,s,s,sw,sw,sw,sw,w,w,w,w,w,w,nw,nw,nw,nw,n,n,n,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd2-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-bd2</name>
					<script>send('do n,w,w,w,s,s,s,se,se,se,se,e,e,e,e,e,e,ne,ne,ne,ne,n,n,n,n,n,n,n,n,nw,nw,nw,nw,w,w,w,w,w,w,w,w,sw,sw,sw,sw,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-bd2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-bd2</name>
					<script>send('do s,w,s,s,s,se,se,se,se,e,e,e,e,e,e,ne,ne,ne,ne,n,n,n,n,n,n,n,n,nw,nw,nw,nw,w,w,w,w,w,w,w,w,sw,sw,sw,sw,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-bd2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd2-bar</name>
					<script>send('do n,n,n,n,n,ne,ne,ne,ne,e,e,e,e,e,e,e,e,se,se,se,se,s,s,s,s,s,s,s,s,sw,sw,sw,sw,w,w,w,w,w,w,nw,nw,nw,nw,n,n,n,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd2-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd2-bank</name>
					<script>send('do n,n,n,n,n,ne,ne,ne,ne,e,e,e,e,e,e,e,e,se,se,se,se,s,s,s,s,s,s,s,s,sw,sw,sw,sw,w,w,w,w,w,w,nw,nw,nw,nw,n,n,n,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd2-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-bd2</name>
					<script>send('do n,w,w,w,w,s,s,s,se,se,se,se,e,e,e,e,e,e,ne,ne,ne,ne,n,n,n,n,n,n,n,n,nw,nw,nw,nw,w,w,w,w,w,w,w,w,sw,sw,sw,sw,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-bd2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd1-bar</name>
					<script>send('do ne,e,ne,ne,n,n,nw,nw,w,n,n,e,e,e,e,e,se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,sw,sw,sw,sw,sw,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,ne,ne,ne,ne,e,e,e,e,e,e,e,e,se,se,se,se,s,s,s,s,s,s,s,s,sw,sw,sw,sw,w,w,w,w,w,w,nw,nw,nw,nw,n,n,n,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd1-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-bd1</name>
					<script>send('do s,w,s,s,s,se,se,se,se,e,e,e,e,e,e,ne,ne,ne,ne,n,n,n,n,n,n,n,n,nw,nw,nw,nw,w,w,w,w,w,w,w,w,sw,sw,sw,sw,s,s,s,s,s,s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,ne,ne,ne,ne,ne,n,n,n,n,n,n,n,n,n,n,nw,nw,nw,nw,nw,w,w,w,w,w,s,s,w,w,sw,sw,s,s,se,se,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-bd1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd1-inn</name>
					<script>send('do ne,e,ne,ne,n,n,nw,nw,w,n,n,e,e,e,e,e,se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,sw,sw,sw,sw,sw,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,ne,ne,ne,ne,e,e,e,e,e,e,e,e,se,se,se,se,s,s,s,s,s,s,s,s,sw,sw,sw,sw,w,w,w,w,w,w,nw,nw,nw,nw,n,n,n,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd1-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-bd1</name>
					<script>send('do n,w,w,w,s,s,s,se,se,se,se,e,e,e,e,e,e,ne,ne,ne,ne,n,n,n,n,n,n,n,n,nw,nw,nw,nw,w,w,w,w,w,w,w,w,sw,sw,sw,sw,s,s,s,s,s,s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,ne,ne,ne,ne,ne,n,n,n,n,n,n,n,n,n,n,nw,nw,nw,nw,nw,w,w,w,w,w,s,s,w,w,sw,sw,s,s,se,se,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-bd1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd1-bank</name>
					<script>send('do ne,e,ne,ne,n,n,nw,nw,w,n,n,e,e,e,e,e,se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,sw,sw,sw,sw,sw,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,ne,ne,ne,ne,e,e,e,e,e,e,e,e,se,se,se,se,s,s,s,s,s,s,s,s,sw,sw,sw,sw,w,w,w,w,w,w,nw,nw,nw,nw,n,n,n,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd1-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-bd1</name>
					<script>send('do n,w,w,w,w,s,s,s,se,se,se,se,e,e,e,e,e,e,ne,ne,ne,ne,n,n,n,n,n,n,n,n,nw,nw,nw,nw,w,w,w,w,w,w,w,w,sw,sw,sw,sw,s,s,s,s,s,s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,ne,ne,ne,ne,ne,n,n,n,n,n,n,n,n,n,n,nw,nw,nw,nw,nw,w,w,w,w,w,s,s,w,w,sw,sw,s,s,se,se,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-bd1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd1-bd2</name>
					<script>send('do ne,e,ne,ne,n,n,nw,nw,w,n,n,e,e,e,e,e,se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,sw,sw,sw,sw,sw,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd1-bd2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd2-bd1</name>
					<script>send('do s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,ne,ne,ne,ne,ne,n,n,n,n,n,n,n,n,n,n,nw,nw,nw,nw,nw,w,w,w,w,w,s,s,w,w,sw,sw,s,s,se,se,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd2-bd1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd1-bd3</name>
					<script>send('do ne,e,ne,ne,n,n,nw,nw,w,n,n,e,e,e,e,e,se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,sw,sw,sw,sw,sw,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,ne,ne,ne,ne,e,e,e,e,e,e,e,e,se,se,se,se,s,s,s,s,s,s,s,s,sw,sw,sw,sw,w,w,w,w,w,w,nw,nw,nw,nw,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd1-bd3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd3-bd1</name>
					<script>send('do s,s,s,se,se,se,se,e,e,e,e,e,e,ne,ne,ne,ne,n,n,n,n,n,n,n,n,nw,nw,nw,nw,w,w,w,w,w,w,w,w,sw,sw,sw,sw,s,s,s,s,s,s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,ne,ne,ne,ne,ne,n,n,n,n,n,n,n,n,n,n,nw,nw,nw,nw,nw,w,w,w,w,w,s,s,w,w,sw,sw,s,s,se,se,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd3-bd1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd2-bd3</name>
					<script>send('do n,n,n,n,n,ne,ne,ne,ne,e,e,e,e,e,e,e,e,se,se,se,se,s,s,s,s,s,s,s,s,sw,sw,sw,sw,w,w,w,w,w,w,nw,nw,nw,nw,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd2-bd3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bd3-bd2</name>
					<script>send('do s,s,s,se,se,se,se,e,e,e,e,e,e,ne,ne,ne,ne,n,n,n,n,n,n,n,n,nw,nw,nw,nw,w,w,w,w,w,w,w,w,sw,sw,sw,sw,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bd3-bd2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdc-heal</name>
					<script>send('do enter,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdc-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-bdc</name>
					<script>send('do s,s,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-bdc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rsc-heal</name>
					<script>send('do enter,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rsc-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-rsc</name>
					<script>send('do w,s,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-rsc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dc-heal</name>
					<script>send('do enter,sw,s,se,s,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dc-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-dc</name>
					<script>send('do nw,n,nw,n,ne,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-dc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdt-dcheal</name>
					<script>send('do e,e,e,e,s,e,e,s,s,s,s,enter,sw,s,se,s,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdt-dcheal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dcheal-bdt</name>
					<script>send('do nw,n,nw,n,ne,out,w,w,n,n,w,w,n,n,w,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dcheal-bdt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdt-rscheal</name>
					<script>send('do w,w,nw,nw,nw,nw,w,w,w,w,w,w,w,w,enter,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdt-rscheal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rscheal-bdt</name>
					<script>send('do w,s,out,e,e,e,e,e,e,e,e,se,se,se,se,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rscheal-bdt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdt-bdcheal</name>
					<script>send('do s,s,s,sw,sw,w,w,w,w,w,w,w,w,w,w,enter,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdt-bdcheal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdcheal-bdt</name>
					<script>send('do s,s,out,e,e,e,e,e,e,e,e,e,e,ne,ne,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdcheal-bdt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdcourt-rsc</name>
					<script>send('do e,e,n,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdcourt-rsc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rsc-bdcourt</name>
					<script>send('do w,w,s,s,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rsc-bdcourt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdcourt-dc</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,e,e,e,s,e,e,s,e,s,s,e,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdcourt-dc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dc-bdcourt</name>
					<script>send('do w,w,w,w,w,w,w,w,n,n,n,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dc-bdcourt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdcourt-bdc</name>
					<script>send('do s,e,s,e,e,s,s,e,e,s,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdcourt-bdc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdc-bdcourt</name>
					<script>send('do w,n,w,n,w,n,n,w,n,w,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdc-bdcourt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dch-rsch</name>
					<script>send('do nw,n,nw,n,ne,out,w,n,w,w,n,w,w,w,w,n,n,n,w,nw,nw,nw,nw,w,w,w,w,w,w,w,w,enter,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dch-rsch$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rsch-dch</name>
					<script>send('do w,s,out,e,e,e,e,e,e,e,e,se,se,se,se,s,s,e,s,e,e,s,e,s,e,e,e,e,enter,sw,s,se,s,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rsch-dch$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dch-bdch</name>
					<script>send('do nw,n,nw,n,ne,out,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,enter,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dch-bdch$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdch-dch</name>
					<script>send('do s,s,out,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,enter,sw,s,se,s,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdch-dch$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rsch-bdch</name>
					<script>send('do w,s,out,s,s,e,s,s,s,s,s,s,e,s,enter,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rsch-bdch$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdch-rsch</name>
					<script>send('do s,s,out,n,n,n,n,n,n,n,n,w,n,w,enter,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdch-rsch$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-isen</name>
					<script>send('do s,s,se,s,se,s,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-isen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>isen-mor</name>
					<script>send('do n,n,nw,n,nw,n,nw,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^isen-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-bdchasm</name>
					<script>send('do s,s,se,s,se,s,se,s,s,se,e,e,e,e,se,e,e,e,e,e,se,s,se,s,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-bdchasm$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdchasm-mor</name>
					<script>send('do w,w,n,nw,n,nw,w,w,w,w,w,nw,w,w,w,w,nw,n,n,nw,n,nw,n,nw,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdchasm-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-crs</name>
					<script>send('do s,s,se,s,se,s,se,s,s,se,e,e,e,e,se,e,e,e,e,e,se,s,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-crs$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>crs-mor</name>
					<script>send('do n,n,nw,n,nw,w,w,w,w,w,nw,w,w,w,w,nw,n,n,nw,n,nw,n,nw,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^crs-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-ulk</name>
					<script>send('do e,tunnel,nw,nw,w,nw,nw,n,n,nw,nw,nw,nw,staircase,n,n,n,gate,stairs,up,up,up,w,doorway')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-ulk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ulk-mor</name>
					<script>send('do out,e,down,down,down,w,out,s,s,s,tunnel,se,se,se,se,s,s,se,se,se,e,se,tunnel,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ulk-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-sok</name>
					<script>send('do e,tunnel,nw,nw,w,nw,nw,n,n,nw,nw,nw,nw,staircase,n,n,n,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-sok$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sok-mor</name>
					<script>send('do out,s,s,s,tunnel,se,se,se,se,s,s,se,se,se,e,se,tunnel,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^sok-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-altar</name>
					<script>send('do e,tunnel,nw,nw,w,nw,nw,n,n,nw,nw,nw,nw,staircase,n,n,n,gate,stairs,up,up,up,up')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-altar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>altar-mor</name>
					<script>send('do down,down,down,down,w,out,s,s,s,tunnel,se,se,se,se,s,s,se,se,se,e,se,tunnel,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^altar-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morgul-mor</name>
					<script>send('do e,e,ne,ne,ne,ne,ne,e,ne,ne,e,ne,ne,ne,ne,e,e,ne,ne,ne,ne,ne,e,e,e,e,e,e,e,e,e,e,n,down,n,n,n,n,nw,n,nw,n,ne,e,e,ne,n,n,nw,n,nw,n,nw,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morgul-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-morgul</name>
					<script>send('do s,s,se,s,se,s,se,s,s,sw,w,w,sw,s,se,s,se,s,s,s,s,up,s,w,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,w,w,sw,sw,sw,sw,w,sw,sw,w,sw,sw,sw,sw,sw,w,2knock on gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-morgul$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-watchers</name>
					<script>send('do s,s,se,s,se,s,se,s,s,sw,w,w,sw,s,se,s,se,s,s,s,s,up,s,w,w,w,w,w,w,w,n,w,w,w,nw,w,nw,n,ne,ne,e,ne,e,ne,ne,ne,n,ne,n,n,nw,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-watchers$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>watchers-mor</name>
					<script>send('do sw,se,s,s,sw,s,sw,sw,sw,w,sw,w,sw,sw,s,se,e,se,e,e,e,s,e,e,e,e,e,e,e,n,down,n,n,n,n,nw,n,nw,n,ne,e,e,ne,n,n,nw,n,nw,n,nw,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^watchers-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-bdt</name>
					<script>send('do s,s,se,s,se,s,se,s,s,se,e,e,e,e,se,e,e,e,e,e,se,s,se,s,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-bdt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdt-mor</name>
					<script>send('do w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,nw,n,nw,w,w,w,w,w,nw,w,w,w,w,nw,n,n,nw,n,nw,n,nw,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdt-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-well</name>
					<script>send('do e,tunnel,nw,nw,w,nw,nw,n,n,nw,nw,nw,nw,staircase,n,n,n,gate,stairs,up,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-well$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>well-mor</name>
					<script>send('do s,stairs,down,w,out,s,s,s,tunnel,se,se,se,se,s,s,se,se,se,e,se,tunnel,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^well-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-asb</name>
					<script>send('do s,s,se,s,se,s,se,s,s,se,e,e,e,e,se,e,e,e,e,e,se,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-asb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>asb-mor</name>
					<script>send('do w,w,w,nw,w,w,w,w,w,nw,w,w,w,w,nw,n,n,nw,n,nw,n,nw,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^asb-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>isen-asb</name>
					<script>send('do se,e,e,e,e,se,e,e,e,e,e,se,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^isen-asb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>asb-isen</name>
					<script>send('do w,w,w,nw,w,w,w,w,w,nw,w,w,w,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^asb-isen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>isen-well</name>
					<script>send('do n,n,nw,n,nw,n,nw,n,n,e,tunnel,nw,w,nw,nw,nw,n,n,nw,nw,nw,nw,staircase,n,n,n,gate,stairs,up,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^isen-well$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>well-isen</name>
					<script>send('do s,stairs,down,w,out,s,s,s,tunnel,se,se,se,se,s,s,se,se,se,e,se,tunnel,w,s,s,se,s,se,s,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^well-isen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>isen-watchers</name>
					<script>send('do sw,w,w,sw,s,se,s,se,s,s,s,s,up,s,w,w,w,w,w,w,w,n,w,w,w,nw,w,nw,n,ne,ne,e,ne,e,ne,ne,ne,n,ne,n,n,nw,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^isen-watchers$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>watchers-isen</name>
					<script>send('do sw,se,s,s,sw,s,sw,sw,sw,w,sw,w,sw,sw,s,se,e,se,e,e,e,s,e,e,e,e,e,e,e,n,down,n,n,n,n,nw,n,nw,n,ne,e,e,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^watchers-isen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>isen-morgul</name>
					<script>send('do sw,w,w,sw,s,se,s,se,s,s,s,s,up,s,w,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,w,w,sw,sw,sw,sw,w,sw,sw,w,sw,sw,sw,sw,sw,w,2knock on gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^isen-morgul$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morgul-isen</name>
					<script>send('do e,e,ne,ne,ne,ne,ne,e,ne,ne,e,ne,ne,ne,ne,e,e,ne,ne,ne,ne,ne,e,e,e,e,e,e,e,e,e,e,n,down,n,n,n,n,nw,n,nw,n,ne,e,e,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morgul-isen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>isen-crs</name>
					<script>send('do se,e,e,e,e,se,e,e,e,e,e,se,s,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^isen-crs$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>crs-isen</name>
					<script>send('do n,n,nw,n,nw,w,w,w,w,w,nw,w,w,w,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^crs-isen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>isen-bdchasm</name>
					<script>send('do se,e,e,e,e,se,e,e,e,e,e,se,s,se,s,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^isen-bdchasm$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdchasm-isen</name>
					<script>send('do w,w,n,nw,n,nw,w,w,w,w,w,nw,w,w,w,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdchasm-isen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-twi</name>
					<script>send('do s,s,se,s,se,s,se,s,s,sw,w,w,w,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-twi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>twi-mor</name>
					<script>send('do s,se,e,e,e,ne,n,n,nw,n,nw,n,nw,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^twi-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>isen-twi</name>
					<script>send('do sw,w,w,w,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^isen-twi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>twi-isen</name>
					<script>send('do s,se,e,e,e,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^twi-isen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morgul-twi</name>
					<script>send('do e,e,ne,ne,ne,ne,ne,e,ne,ne,e,ne,ne,ne,ne,e,e,ne,ne,ne,ne,ne,e,e,e,e,e,e,e,e,e,e,n,down,n,n,n,n,nw,n,nw,n,n,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morgul-twi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>twi-morgul</name>
					<script>send('do s,se,s,s,se,s,se,s,s,s,s,up,s,w,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,w,w,sw,sw,sw,sw,w,sw,sw,w,sw,sw,sw,sw,sw,w,2knock on gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^twi-morgul$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morgul-lair</name>
					<script>send('do e,e,ne,ne,ne,ne,ne,e,ne,ne,e,ne,ne,ne,ne,e,e,ne,ne,ne,ne,ne,e,e,e,n,w,w,w,nw,w,nw,n,ne,ne,e,ne,e,ne,ne,ne,n,ne,n,n,nw,w,w,sw,s,se,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morgul-lair$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lair-morgul</name>
					<script>send('do ne,n,nw,n,ne,e,e,se,s,s,sw,s,sw,sw,sw,w,sw,w,sw,sw,s,se,e,se,e,e,e,s,w,w,w,sw,sw,sw,sw,sw,w,w,sw,sw,sw,sw,w,sw,sw,w,sw,sw,sw,sw,sw,w,2knock on gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lair-morgul$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>isen-lair</name>
					<script>send('do sw,w,w,sw,s,se,s,se,s,s,s,s,up,s,w,w,w,w,w,w,w,n,w,w,w,nw,w,nw,n,ne,ne,e,ne,e,ne,ne,ne,n,ne,n,n,nw,w,w,sw,s,se,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^isen-lair$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lair-isen</name>
					<script>send('do ne,n,nw,n,ne,e,e,se,s,s,sw,s,sw,sw,sw,w,sw,w,sw,sw,s,se,e,se,e,e,e,s,e,e,e,e,e,e,e,n,down,n,n,n,n,nw,n,nw,n,ne,e,e,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lair-isen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-lair</name>
					<script>send('do s,s,se,s,se,s,se,s,s,sw,w,w,sw,s,se,s,se,s,s,s,s,up,s,w,w,w,w,w,w,w,n,w,w,w,nw,w,nw,n,ne,ne,e,ne,e,ne,ne,ne,n,ne,n,n,nw,w,w,sw,s,se,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-lair$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lair-mor</name>
					<script>send('do ne,n,nw,n,ne,e,e,se,s,s,sw,s,sw,sw,sw,w,sw,w,sw,sw,s,se,e,se,e,e,e,s,e,e,e,e,e,e,e,n,down,n,n,n,n,nw,n,nw,n,ne,e,e,ne,n,n,nw,n,nw,n,nw,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lair-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>watchers-lair</name>
					<script>send('do sw,w,w,sw,s,se,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^watchers-lair$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lair-watchers</name>
					<script>send('do ne,n,nw,n,ne,e,e,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lair-watchers$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>isen-altar</name>
					<script>send('do n,n,nw,n,nw,n,nw,n,n,e,tunnel,nw,w,nw,nw,nw,n,n,nw,nw,nw,nw,staircase,n,n,n,gate,stairs,up,up,up,up')</script>
					<command></command>
					<packageName></packageName>
					<regex>^isen-altar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>altar-isen</name>
					<script>send('do down,down,down,down,w,out,s,s,s,tunnel,se,se,se,se,s,s,se,se,se,e,se,tunnel,w,s,s,se,s,se,s,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^altar-isen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>isen-ulk</name>
					<script>send('do n,n,nw,n,nw,n,nw,n,n,e,tunnel,nw,w,nw,nw,nw,n,n,nw,nw,nw,nw,staircase,n,n,n,gate,stairs,up,up,up,w,doorway')</script>
					<command></command>
					<packageName></packageName>
					<regex>^isen-ulk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ulk-isen</name>
					<script>send('do out,e,down,down,down,w,out,s,s,s,tunnel,se,se,se,se,s,s,se,se,se,e,se,tunnel,w,s,s,se,s,se,s,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ulk-isen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>isen-sok</name>
					<script>send('do n,n,nw,n,nw,n,nw,n,n,e,tunnel,nw,w,nw,nw,nw,n,n,nw,nw,nw,nw,staircase,n,n,n,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^isen-sok$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sok-isen</name>
					<script>send('do out,s,s,s,tunnel,se,se,se,se,s,s,se,se,se,e,se,tunnel,w,s,s,se,s,se,s,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^sok-isen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morgul-bdchasm</name>
					<script>send('do e,e,ne,ne,ne,ne,ne,e,ne,ne,e,ne,ne,ne,ne,e,e,ne,ne,ne,ne,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,ne,ne,ne,e,ne,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morgul-bdchasm$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdchasm-morgul</name>
					<script>send('do w,w,w,w,w,w,w,sw,w,sw,sw,sw,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,w,w,sw,sw,sw,sw,w,sw,sw,w,sw,sw,sw,sw,sw,w,2knock on gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdchasm-morgul$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morgul-bdt</name>
					<script>send('do e,e,ne,ne,ne,ne,ne,e,ne,ne,e,ne,ne,ne,ne,e,e,ne,ne,ne,ne,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,ne,ne,ne,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morgul-bdt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdt-morgul</name>
					<script>send('do w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,sw,sw,sw,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,w,w,sw,sw,sw,sw,w,sw,sw,w,sw,sw,sw,sw,sw,w,2knock on gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdt-morgul$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdchasm-bdclimb</name>
					<script>send('do e,e,e,e,e,e,e,n,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdchasm-bdclimb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdclimb-bdchasm</name>
					<script>send('do w,w,w,w,w,w,s,s,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdclimb-bdchasm$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morgul-asb</name>
					<script>send('do e,e,ne,ne,ne,ne,ne,e,ne,ne,e,ne,ne,ne,ne,e,e,ne,ne,ne,ne,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,ne,ne,ne,e,ne,e,e,e,e,ne,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morgul-asb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>asb-morgul</name>
					<script>send('do w,w,s,s,sw,w,w,w,w,sw,w,sw,sw,sw,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,w,w,sw,sw,sw,sw,w,sw,sw,w,sw,sw,sw,sw,sw,w,2knock on gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^asb-morgul$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ulk-altar</name>
					<script>send('do out,e,up')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ulk-altar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>altar-ulk</name>
					<script>send('do down,w,doorway')</script>
					<command></command>
					<packageName></packageName>
					<regex>^altar-ulk$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sok-altar</name>
					<script>send('do stairs,up,up,up,up')</script>
					<command></command>
					<packageName></packageName>
					<regex>^sok-altar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>altar-sok</name>
					<script>send('do down,down,down,down,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^altar-sok$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdchasm-altar</name>
					<script>send('do w,w,n,nw,n,nw,w,w,w,w,w,nw,w,w,w,w,nw,n,n,nw,n,nw,n,nw,n,n,e,tunnel,nw,nw,w,nw,nw,n,n,nw,nw,nw,nw,staircase,n,n,n,gate,stairs,up,up,up,up')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdchasm-altar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>altar-bdchasm</name>
					<script>send('do down,down,down,down,w,out,s,s,s,tunnel,se,se,se,se,s,s,se,se,se,e,se,tunnel,w,s,s,se,s,se,s,se,s,s,se,e,e,e,e,se,e,e,e,e,e,se,s,se,s,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^altar-bdchasm$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdchasm-bdt</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdchasm-bdt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bdt-bdchasm</name>
					<script>send('do w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,w,w,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bdt-bdchasm$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>NER</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>bsc-thran</name>
					<script>send('do out,e,e,s,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bsc-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bsl-thran</name>
					<script>send('do s,se,out,e,e,e,e,e,e,e,e,e,s,s,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bsl-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>elven-thran</name>
					<script>send('do s,out,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,s,s,s,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^elven-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>emerald-thran</name>
					<script>send('do out,w,w,w,w,s,w,w,s,s,w,s,w,w,s,s,s,s,s,s,sw,w,w,w,w,w,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^emerald-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>esg-thran</name>
					<script>send('do w,w,w,w,w,n,w,w,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^esg-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dale-thran</name>
					<script>send('do w,sw,w,w,w,w,w,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dale-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ereb-thran</name>
					<script>send('do w,w,s,sw,w,w,w,w,w,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ereb-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dale-ereb</name>
					<script>send('do w,n,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dale-ereb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dale-esg</name>
					<script>send('do s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dale-esg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dale-alz</name>
					<script>send('do w,n,n,n,e,n,e,e,e,e,e,s,e,e,e,e,e,s,e,e,e,e,e,e,s,e,e,s,s,s,s,s,e,s,e,e,s,s,s,e,e,s,e,e,s,e,s,e,s,e,e,s,s,se,se,se,e,e,e,se,e,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dale-alz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dale-ihc</name>
					<script>send('do w,n,n,n,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,se,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dale-ihc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ereb-dale</name>
					<script>send('do w,w,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ereb-dale$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>esg-dale</name>
					<script>send('do n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^esg-dale$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ereb-esg</name>
					<script>send('do w,w,s,s,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ereb-esg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>esg-ereb</name>
					<script>send('do n,n,w,n,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^esg-ereb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ereb-alz</name>
					<script>send('do w,w,n,n,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,s,s,s,s,s,e,e,s,e,s,e,s,s,s,s,s,s,s,s,e,s,s,se,se,se,e,e,e,se,e,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ereb-alz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ereb-ihc</name>
					<script>send('do w,w,n,n,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,se,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ereb-ihc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>esg-alz</name>
					<script>send('do n,n,w,n,n,n,e,n,e,e,s,e,e,s,s,s,e,s,e,s,e,e,e,e,e,s,e,e,s,s,e,e,e,e,s,s,s,s,s,e,e,s,e,s,e,e,e,e,s,s,e,e,e,e,e,se,se,se,e,e,e,se,e,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^esg-alz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>esg-ihc</name>
					<script>send('do n,n,w,n,n,n,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,se,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^esg-ihc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ivory-thran</name>
					<script>send('do n,e,e,e,e,e,e,e,n,e,e,e,e,e,s,e,e,e,e,e,s,e,e,s,e,s,s,s,s,e,e,e,s,e,s,s,e,s,e,s,s,s,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ivory-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rs-thran</name>
					<script>send('do e,e,e,e,e,s,e,e,e,s,e,s,s,e,s,e,s,s,s,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rs-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ddm-thran</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,s,w,w,s,w,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ddm-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>drba-thran</name>
					<script>send('do s,s,s,sw,w,w,w,w,w,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^drba-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dale-bank</name>
					<script>send('do n,nw,nw,nw,nw,nw,nw,n,n,nw,climb down rope,n,n,nw,nw,n,n,n,nw,w,w,n,w,climb hole,climb ladder,s,w,w,n,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dale-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-dale</name>
					<script>send('do s,e,s,e,e,n,down,down,e,s,e,e,se,s,s,s,se,se,s,s,climb rope,se,s,s,se,se,se,se,se,se,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-dale$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dale-heal</name>
					<script>send('do n,nw,nw,nw,nw,nw,nw,n,n,nw,ne,ne,ne,n,n,n,n,n,nw,nw,ne,ne,n,n,n,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dale-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-dale</name>
					<script>send('do s,e,s,s,s,sw,sw,se,se,s,s,s,s,s,sw,sw,sw,se,s,s,se,se,se,se,se,se,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-dale$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dale-shop</name>
					<script>send('do n,nw,nw,nw,nw,nw,nw,n,n,nw,ne,ne,ne,n,n,n,n,n,nw,nw,ne,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dale-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-dale</name>
					<script>send('do nw,sw,se,se,s,s,s,s,s,sw,sw,sw,se,s,s,se,se,se,se,se,se,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-dale$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>NH/HAR/UMB</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>bota-harnen</name>
					<script>send('do forest,e,n,n,n,n,n,n,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bota-harnen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>harnen-bota</name>
					<script>send('do s,s,sw,w,w,w,s,w,w,w,w,w,w,w,s,w,w,s,s,w,w,w,w,w,w,w,s,w,w,w,w,s,w,trail')</script>
					<command></command>
					<packageName></packageName>
					<regex>^harnen-bota$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dsh-harnen</name>
					<script>send('do wasteland,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,n,n,nw,nw,n,nw,nw,nw,nw,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dsh-harnen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>umbar-harnen</name>
					<script>send('do e,e,e,ne,n,n,n,n,ne,ne,ne,ne,ne,ne,ne,e,e,e,e,e,e,e,e,e,ne,e,e,ne,e,ne,e,ne,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,ne,ne,n,ne,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar-harnen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>harnen-umbar</name>
					<script>send('do s,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,sw,s,sw,sw,sw,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,sw,w,sw,w,w,sw,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,sw,sw,s,s,s,s,sw,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^harnen-umbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bone-harnen</name>
					<script>send('do e,e,e,e,n,n,n,n,n,n,n,n,n,n,ne,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bone-harnen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>harnen-dsh</name>
					<script>send('do s,s,s,se,se,se,se,s,se,se,s,s,se,se,se,se,se,se,se,s,se,se,s,se,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,encampment')</script>
					<command></command>
					<packageName></packageName>
					<regex>^harnen-dsh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>harnen-bone</name>
					<script>send('do s,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,s,s,s,s,s,s,w,s,w,s,s,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^harnen-bone$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bone-op</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,se,se,se,se,s,se,se,s,se,se,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bone-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-bone</name>
					<script>send('do n,n,n,n,n,n,nw,nw,n,nw,nw,n,nw,nw,nw,nw,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-bone$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>hstop-harnen</name>
					<script>send('do w,w,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,sw,sw,sw,w,sw,sw,sw,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^hstop-harnen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>harnen-hstop</name>
					<script>send('do s,s,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,ne,ne,ne,e,ne,ne,ne,e,ne,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^harnen-hstop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-hstop</name>
					<script>send('do n,n,n,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne,ne,e,ne,ne,ne,e,ne,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-hstop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ustop-hstop</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,n,e,n,e,n,e,n,e,n,e,e,n,n,e,n,e,e,n,e,n,e,n,e,n,e,n,n,e,n,e,n,e,e,n,n,e,n,ne,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ustop-hstop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>hstop-ustop</name>
					<script>send('do s,w,w,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,s,w,s,s,w,w,s,w,s,w,s,w,s,s,w,s,w,s,w,s,w,s,w,s,w,w,s,w,s,w,s,w,s,w,s,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^hstop-ustop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>hstop-op</name>
					<script>send('do s,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,sw,sw,sw,w,sw,sw,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^hstop-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ustop-op</name>
					<script>send('do w,w,w,w,w,w,w,w,w,w,sw,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ustop-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-ustop</name>
					<script>send('do n,n,n,ne,e,e,e,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-ustop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-necro</name>
					<script>send('do n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,n,n,n,n,n,e,e,e,path')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-necro$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>necro-op</name>
					<script>send('do path,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,w,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^necro-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>archaic-op</name>
					<script>send('do ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,n,e,n,e,e,n,e,n,e,n,e,n,e,n,n,e,e,e,e,e,e,e,e,e,e,ne,n,ne,e,e,ne,n,ne,n,n,n,n,n,n,n,n,n,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^archaic-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-archaic</name>
					<script>send('do gate,s,s,out,s,sw,s,s,s,s,s,s,w,w,s,s,sw,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,w,w,w,s,w,w,s,w,w,w,w,w,s,s,s,s,s,w,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-archaic$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-carf</name>
					<script>send('do n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,e,s,s,e,s,e,e,s,s,e,e,s,e,s,e,s,s,e,e,s,e,s,s,e,e,e,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-carf$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>carf-op</name>
					<script>send('do n,n,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,w,n,w,n,n,w,w,n,w,n,w,w,w,w,w,nw,n,n,n,n,gate,n,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^carf-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dharan-op</name>
					<script>send('do nw,n,n,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,nw,nw,n,n,n,n,n,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dharan-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-dharan</name>
					<script>send('do n,e,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,se,se,s,s,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-dharan$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>umbar-op</name>
					<script>send('do e,e,e,ne,n,n,n,n,ne,ne,ne,ne,ne,ne,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,se,se,se,se,s,se,se,s,se,se,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-umbar</name>
					<script>send('do n,n,n,n,n,n,nw,nw,n,nw,nw,n,nw,nw,nw,nw,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,sw,sw,s,s,s,s,sw,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-umbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>nshield-op</name>
					<script>send('do e,e,e,e,e,e,s,e,e,e,e,e,s,e,e,s,e,s,e,e,se,e,e,e,e,e,e,e,e,e,se,se,se,se,s,se,se,s,s,se,se,se,se,se,se,se,s,se,se,s,se,se,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^nshield-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-nshield</name>
					<script>send('do n,n,n,n,n,n,nw,nw,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,n,n,nw,nw,n,nw,nw,nw,nw,w,w,w,w,w,w,w,w,w,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,n,n,w,n,w,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-nshield$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-bota</name>
					<script>send('do n,n,n,ne,nw,n,nw,nw,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,trail')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-bota$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bota-op</name>
					<script>send('do forest,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,s,s,se,se,se,se,se,se,se,s,se,se,s,se,se,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bota-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-op</name>
					<script>send('do se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,se,e,se,e,se,e,se,s,s,s,s,se,se,se,se,s,se,se,s,s,se,se,se,se,se,se,se,s,se,se,s,se,se,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-skadar</name>
					<script>send('do n,n,n,ne,nw,n,nw,nw,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,n,n,nw,nw,n,nw,nw,nw,nw,n,n,n,n,nw,w,nw,w,nw,w,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,n,n,nw,nw,nw,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>harnen-op</name>
					<script>send('do s,s,s,se,se,se,se,s,se,se,s,s,se,se,se,se,se,se,se,s,se,se,s,se,se,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^harnen-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-harnen</name>
					<script>send('do n,n,n,n,n,n,nw,nw,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,n,n,nw,nw,n,nw,nw,nw,nw,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-harnen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dsh-op</name>
					<script>send('do wasteland,w,w,w,w,w,w,w,w,w,w,w,s,sw,w,w,w,w,sw,w,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dsh-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-dsh</name>
					<script>send('do n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e,ne,e,e,e,e,ne,n,e,e,e,e,e,e,e,e,e,e,e,encampment')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-dsh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gb-op</name>
					<script>send('do up,out,e,e,e,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gb-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-gb</name>
					<script>send('do gate,s,w,w,w,enter,descend')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-gb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-op</name>
					<script>send('do s,w,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-shop</name>
					<script>send('do gate,s,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-op</name>
					<script>send('do nw,w,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-op$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>op-heal</name>
					<script>send('do gate,s,e,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^op-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>harnen-nshield</name>
					<script>send('do s,s,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,n,n,w,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^harnen-nshield$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>nshield-harnen</name>
					<script>send('do e,e,e,e,e,e,s,e,e,e,e,e,e,e,s,e,e,e,e,s,e,e,e,s,e,e,e,e,e,e,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^nshield-harnen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>umbar-prof</name>
					<script>send('do e,s,s,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,w,w,w,w,w,w,w,w,s,w,w,s,w,s,w,w,s,w,w,w,s,w,s,w,w,s,w,s,w,w,s,w,s,w,s,w,w,s,w,s,s,w,s,w,s,w,w,s,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar-prof$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>prof-umbar</name>
					<script>send('do n,e,e,n,e,e,e,n,e,e,e,e,n,e,e,e,e,e,e,e,e,e,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,e,n,n,e,n,e,e,n,e,n,n,e,n,e,n,e,n,e,n,e,e,n,n,e,n,e,e,e,e,n,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^prof-umbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>umbar-beast</name>
					<script>send('do e,n,e,n,n,n,n,n,n,n,n,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar-beast$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>umbar-oak</name>
					<script>send('do e,n,e,n,n,n,n,n,n,n,n,n,n,n,w,n,w,w,n,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar-oak$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>beast-umbar</name>
					<script>send('do w,s,s,s,s,s,s,s,s,s,w,s,w,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^beast-umbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>oak-umbar</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,e,e,e,e,s,s,w,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^oak-umbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>umbar-ivory</name>
					<script>send('do e,n,e,n,n,w,w,w,w,w,w,w,w,w,w,n,n,n,n,w,n,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,w,n,w,n,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar-ivory$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ivory-umbar</name>
					<script>send('do e,e,s,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,s,e,s,e,e,s,s,e,s,e,e,s,e,s,e,e,e,e,e,s,s,w,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ivory-umbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>umbar-bank</name>
					<script>send('do uphill,w,w,w,w,w,w,w,w,nw,ne,up,sw,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-umbar</name>
					<script>send('do e,e,ne,down,sw,se,e,e,e,e,e,e,e,e,downhill')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-umbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>umbar-heal</name>
					<script>send('do uphill,w,w,w,w,w,w,w,w,nw,ne,up,sw,w,s,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-umbar</name>
					<script>send('do e,n,n,e,ne,down,sw,se,e,e,e,e,e,e,e,e,downhill')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-umbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>umbar-skadar</name>
					<script>send('do e,e,e,ne,n,n,n,n,ne,ne,ne,ne,ne,ne,ne,e,e,e,e,e,e,e,e,e,ne,e,e,ne,e,ne,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,ne,ne,ne,n,ne,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n,n,nw,w,nw,w,nw,w,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,n,n,n,n,n,n,n,n,n,n,nw,nw,nw,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-umbar</name>
					<script>send('do se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,se,e,se,e,se,e,se,s,s,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,sw,s,sw,sw,sw,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,sw,w,sw,w,w,sw,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,sw,sw,s,s,s,s,sw,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-umbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>harnen-galen</name>
					<script>send('do n,nw,w,nw,w,nw,w,nw,w,w,w,w,w,w,nw,w,w,nw,w,nw,w,nw,nw,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,gate,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^harnen-galen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>galen-harnen</name>
					<script>send('do se,se,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,se,se,e,se,e,se,e,e,se,e,e,e,e,e,e,se,e,se,e,se,e,se,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^galen-harnen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>harnen-dsl</name>
					<script>send('do n,nw,w,nw,w,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^harnen-dsl$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dsl-harnen</name>
					<script>send('do s,se,e,se,e,se,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dsl-harnen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dsl-skadar</name>
					<script>send('do s,w,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,nw,nw,nw,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dsl-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-dsl</name>
					<script>send('do se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,s,s,s,se,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-dsl$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>galen-lackey</name>
					<script>send('do se,se,e,e,n,e,n,camp,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^galen-lackey$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lackey-galen</name>
					<script>send('do w,s,plains,w,w,w,s,s,gate,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lackey-galen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lackey-skadar</name>
					<script>send('do w,s,plains,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,ne,ne,ne,ne,n,ne,ne,e,ne,ne,n,n,n,n,n,n,n,n,e,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lackey-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-lackey</name>
					<script>send('do se,se,s,s,s,s,s,s,s,sw,sw,w,sw,sw,w,sw,sw,s,sw,sw,sw,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,w,camp,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-lackey$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-rinak</name>
					<script>send('do se,se,se,se,se,e,s,s,s,s,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-rinak$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rinak-skadar</name>
					<script>send('do w,n,n,n,n,n,w,nw,nw,nw,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rinak-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-heal</name>
					<script>send('do s,s,w,w,s,s,s,s,s,s,s,w,w,w,s,clearing,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-skadar</name>
					<script>send('do sw,plains,n,n,n,n,n,e,n,n,e,e,e,e,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-crys</name>
					<script>send('do se,se,e,e,e,e,e,e,e,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-crys$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>crys-skadar</name>
					<script>send('do w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^crys-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-jbs</name>
					<script>send('do se,se,se,se,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-jbs$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>jbs-skadar</name>
					<script>send('do w,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^jbs-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-vstop</name>
					<script>send('do se,se,se,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-vstop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>vstop-skadar</name>
					<script>send('do n,n,nw,nw,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^vstop-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>vstop-harnen</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,s,e,s,s,s,se,e,se,e,se,e,se,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^vstop-harnen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>harnen-vstop</name>
					<script>send('do n,nw,w,nw,w,nw,w,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^harnen-vstop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dsl-umbar</name>
					<script>send('do s,se,e,se,e,se,s,s,s,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,sw,s,sw,sw,sw,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,sw,w,sw,w,w,sw,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,sw,sw,s,s,s,s,sw,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dsl-umbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>umbar-dsl</name>
					<script>send('do e,e,e,ne,n,n,n,n,ne,ne,ne,ne,ne,ne,ne,e,e,e,e,e,e,e,e,e,ne,e,e,ne,e,ne,e,ne,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,ne,ne,n,ne,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n,n,nw,w,nw,w,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar-dsl$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bota-umbar</name>
					<script>send('do forest,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,sw,w,sw,w,w,sw,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,sw,sw,s,s,s,s,sw,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bota-umbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>umbar-bota</name>
					<script>send('do e,e,e,ne,n,n,n,n,ne,ne,ne,ne,ne,ne,ne,e,e,e,e,e,e,e,e,e,ne,e,e,ne,e,ne,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,trail')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar-bota$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>nshield-umbar</name>
					<script>send('do s,w,w,w,s,w,w,w,w,s,w,s,s,sw,w,w,w,w,w,w,w,w,w,w,sw,s,sw,sw,sw,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,sw,w,sw,w,w,sw,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,sw,sw,s,s,s,s,sw,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^nshield-umbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>umbar-nshield</name>
					<script>send('do e,e,e,ne,n,n,n,n,ne,ne,ne,ne,ne,ne,ne,e,e,e,e,e,e,e,e,e,ne,e,e,ne,e,ne,e,ne,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,ne,ne,n,ne,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,n,e,n,n,e,e,n,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^umbar-nshield$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-harnen</name>
					<script>send('do se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,s,s,se,e,se,e,se,e,se,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-harnen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>harnen-skadar</name>
					<script>send('do n,nw,w,nw,w,nw,w,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,nw,nw,nw,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^harnen-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-galen</name>
					<script>send('do se,se,s,s,s,s,s,s,s,sw,sw,w,sw,sw,w,sw,sw,s,sw,sw,sw,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,s,s,w,w,w,w,gate,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-galen$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>galen-skadar</name>
					<script>send('do se,se,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,e,e,n,e,e,e,n,e,e,ne,ne,ne,ne,n,ne,ne,e,ne,ne,n,n,n,n,n,n,n,n,e,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^galen-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-morg</name>
					<script>send('do nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-kadar</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,sw,sw,s,se,se,se,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-pel</name>
					<script>send('do nw,nw,w,w,w,w,w,w,w,w,w,w,w,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-kadar</name>
					<script>send('do se,se,e,e,e,e,e,e,se,e,e,e,e,e,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-cou</name>
					<script>send('do nw,nw,nw,nw,w,w,w,w,w,w,w,w,part reeds,board rowboat,w,s,w,n,down')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-cou$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cou-kadar</name>
					<script>send('do flee,plains,e,e,e,e,e,e,e,e,se,se,se,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cou-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-dms</name>
					<script>send('do n,n,n,n,n,n,n,n,ne,ne,ne,n,n,n,ne,n,n,ne,ne,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-dms$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dms-kadar</name>
					<script>send('do sw,w,w,w,w,sw,s,s,sw,s,s,s,sw,sw,sw,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dms-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cou-pel</name>
					<script>send('do flee,plains,s,w,s,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cou-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cou-morg</name>
					<script>send('do flee,plains,e,e,n,e,e,e,e,e,e,ne,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cou-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dms-morg</name>
					<script>send('do nw,nw,n,nw,nw,nw,w,nw,nw,nw,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dms-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dcms-morg</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dcms-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>roi-morg</name>
					<script>send('do n,out,n,n,e,n,n,e,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^roi-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-roi</name>
					<script>send('do nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,n,touch bottom,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-roi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>roi-kadar</name>
					<script>send('do n,out,s,s,s,s,s,s,e,s,s,s,s,s,s,s,s,s,s,sw,sw,s,s,s,se,se,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^roi-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>roi-pel</name>
					<script>send('do n,out,s,s,s,s,s,s,e,s,s,s,s,s,s,s,s,s,s,sw,sw,sw,w,w,w,w,w,w,s,w,w,s,w,s,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^roi-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-dcms</name>
					<script>send('do n,n,n,n,n,n,n,n,ne,n,n,n,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-dcms$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dcms-kadar</name>
					<script>send('do s,s,s,s,s,s,s,s,s,sw,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dcms-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>blue-morg</name>
					<script>send('do w,w,w,w,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^blue-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-blue</name>
					<script>send('do n,n,n,n,n,n,n,n,ne,ne,ne,n,n,n,ne,n,n,ne,n,n,n,n,n,n,n,n,nw,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-blue$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>blue-kadar</name>
					<script>send('do w,s,se,s,sw,s,s,s,s,s,s,s,s,s,sw,s,s,s,sw,sw,sw,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^blue-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azim-morg</name>
					<script>send('do out,w,n,w,n,nw,nw,n,nw,nw,nw,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^azim-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-azim</name>
					<script>send('do n,n,n,n,n,n,n,n,ne,ne,ne,n,n,n,ne,n,n,ne,ne,e,n,e,tent')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-azim$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>azim-kadar</name>
					<script>send('do out,w,s,w,sw,sw,s,s,sw,s,s,s,sw,sw,sw,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^azim-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rok-morg</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,nw,n,nw,nw,nw,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rok-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-rok</name>
					<script>send('do n,e,e,n,e,e,n,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-rok$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rok-kadar</name>
					<script>send('do w,w,w,w,w,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rok-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-san</name>
					<script>send('do s,s,s,s,s,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-san$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>san-kadar</name>
					<script>send('do w,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^san-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-bank</name>
					<script>send('do s,s,s,s,s,s,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-kadar</name>
					<script>send('do w,n,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-inn</name>
					<script>send('do s,s,s,s,s,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-kadar</name>
					<script>send('do n,e,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-bar</name>
					<script>send('do s,s,s,s,s,s,w,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-kadar</name>
					<script>send('do ne,n,e,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-food</name>
					<script>send('do s,s,s,s,s,s,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-food$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>food-kadar</name>
					<script>send('do n,n,e,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^food-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-ass</name>
					<script>send('do s,s,s,s,s,w,w,w,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-ass$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ass-kadar</name>
					<script>send('do n,e,e,e,e,e,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ass-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-skadar</name>
					<script>send('do s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-kadar</name>
					<script>send('do n,n,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-shop</name>
					<script>send('do s,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-kadar</name>
					<script>send('do w,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-are</name>
					<script>send('do s,s,s,s,s,e,ne,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-are$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>are-kadar</name>
					<script>send('do s,s,sw,w,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^are-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-bar</name>
					<script>send('do n,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-skadar</name>
					<script>send('do s,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-shop</name>
					<script>send('do n,n,n,n,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-skadar</name>
					<script>send('do w,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-bank</name>
					<script>send('do n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-skadar</name>
					<script>send('do w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-inn</name>
					<script>send('do n,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-skadar</name>
					<script>send('do e,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-food</name>
					<script>send('do n,n,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-food$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>food-skadar</name>
					<script>send('do n,e,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^food-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-ass</name>
					<script>send('do n,w,w,w,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-ass$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ass-skadar</name>
					<script>send('do e,s,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ass-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-cem</name>
					<script>send('do s,s,s,s,s,s,s,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-cem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cem-kadar</name>
					<script>send('do ne,n,n,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cem-kadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-cem</name>
					<script>send('do sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-cem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cem-skadar</name>
					<script>send('do ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cem-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-are</name>
					<script>send('do n,n,n,e,ne,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-are$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>are-skadar</name>
					<script>send('do s,s,sw,w,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^are-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>skadar-san</name>
					<script>send('do n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^skadar-san$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>san-skadar</name>
					<script>send('do w,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^san-skadar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kadar-mt</name>
					<script>send('do nw,w,w,w,w,w,nw,w,w,w,w,w,w,nw,nw,n,ne,ne,n,ne,n,ne,n,ne,ne,n,ne,n,ne,n,n,n,ne,n,n,ne,n,n,n,n,ne,ne,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kadar-mt$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>RHU</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>alz-ereb</name>
					<script>send('do n,w,w,w,w,w,w,nw,w,w,w,nw,nw,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,w,n,w,n,n,w,n,w,n,w,n,w,w,n,w,n,n,w,w,n,w,n,w,n,n,n,n,n,w,n,w,w,s,w,s,s,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^alz-ereb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ihc-ereb</name>
					<script>send('do sw,w,w,w,nw,w,w,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,w,s,w,s,s,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ihc-ereb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>alz-dale</name>
					<script>send('do n,w,w,w,w,w,w,nw,w,w,w,nw,nw,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,n,w,n,w,n,w,w,n,w,n,w,n,n,w,n,w,w,n,w,n,n,n,n,n,n,n,w,n,w,w,s,w,s,s,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^alz-dale$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>alz-esg</name>
					<script>send('do n,w,w,w,w,w,w,nw,w,w,w,nw,nw,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,n,w,n,w,w,n,n,w,w,n,n,w,w,n,n,w,n,n,n,n,n,n,n,n,w,n,w,w,s,w,s,s,s,s,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^alz-esg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>alz-thran</name>
					<script>send('do n,w,w,w,w,w,w,nw,w,w,w,nw,nw,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,w,w,s,s,s,s,sw,w,w,w,w,w,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^alz-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ihc-thran</name>
					<script>send('do sw,w,w,w,nw,w,w,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,w,w,s,s,s,s,sw,w,w,w,w,w,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ihc-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ihc-esg</name>
					<script>send('do sw,w,w,w,nw,w,w,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,w,s,w,s,s,s,s,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ihc-esg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ihc-dale</name>
					<script>send('do sw,w,w,w,nw,w,w,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,w,s,w,s,s,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ihc-dale$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>alz-ihc</name>
					<script>send('do n,n,e,n,e,n,n,e,n,n,n,n,n,n,n,n,e,n,e,n,e,e,n,e,n,e,n,n,e,n,e,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^alz-ihc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ihc-alz</name>
					<script>send('do sw,s,s,s,s,s,s,s,w,s,w,s,w,w,w,w,s,s,s,s,w,w,s,s,s,w,s,s,s,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ihc-alz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>alz-heal</name>
					<script>send('do s,s,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^alz-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-alz</name>
					<script>send('do se,e,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-alz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ror-thran</name>
					<script>send('do out,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,w,w,s,s,s,s,sw,w,w,w,w,w,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ror-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ror-ihc</name>
					<script>send('do out,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ror-ihc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ihc-ror</name>
					<script>send('do sw,w,w,w,nw,w,w,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,whistle twice')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ihc-ror$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ror-alz</name>
					<script>send('do out,e,e,e,e,e,e,s,s,s,s,s,s,s,s,e,s,s,s,s,s,s,s,s,s,se,se,se,e,e,e,se,e,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ror-alz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>alz-ror</name>
					<script>send('do n,w,w,w,w,w,w,nw,w,w,w,nw,nw,nw,n,n,n,n,n,n,n,w,w,w,w,n,n,n,w,n,w,n,n,n,w,n,n,n,whistle twice')</script>
					<command></command>
					<packageName></packageName>
					<regex>^alz-ror$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bull-ihc</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bull-ihc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ihc-bull</name>
					<script>send('do n,n,n,n,n,n,n,n,n,w,n,n,n,n,n,pasture')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ihc-bull$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhunheal-alz</name>
					<script>send('do w,s,w,w,s,e,e,e,s,se,se,se,e,e,e,se,e,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhunheal-alz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhunheal-ihc</name>
					<script>send('do w,s,w,w,n,n,n,n,n,n,n,ne,e,ne,ne,ne,e,e,ne,ne,e,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhunheal-ihc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ihc-rhunheal</name>
					<script>send('do sw,w,w,w,nw,w,w,nw,w,w,w,w,w,w,sw,w,w,sw,w,sw,sw,w,w,sw,sw,sw,w,sw,s,s,s,s,s,s,s,outpost,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ihc-rhunheal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhunheal-thran</name>
					<script>send('do w,s,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,w,w,s,s,s,s,sw,w,w,w,w,w,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhunheal-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>alz-rhunheal</name>
					<script>send('do n,w,w,w,w,w,w,nw,w,w,w,nw,nw,nw,w,w,w,n,n,outpost,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^alz-rhunheal$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>ROH</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>edo-by</name>
					<script>send('do n,w,w,w,w,w,w,n,n,nw,nw,nw,nw,n,n,n,n,nw,w,nw,w,nw,nw,nw,w,w,w,w,sw,nw,w,nw,w,nw,w,nw,w,nw,n,nw,nw,nw,nw,nw,nw,nw,w,nw,w,w,nw,w,w,nw,nw,nw,nw,nw,nw,w,nw,nw,nw,n,n,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,w,nw,nw,nw,w,nw,n,n,n,n,n,n,nw,nw,nw,n,n,n,nw,nw,n,nw,n,nw,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-dru</name>
					<script>send('do n,w,w,w,n,w,n,w,w,nw,nw,nw,nw,n,n,n,n,nw,w,nw,w,nw,nw,nw,w,w,w,w,sw,nw,w,nw,w,nw,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-dru$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-th</name>
					<script>send('do n,w,w,w,w,w,w,n,n,nw,nw,nw,nw,n,n,n,n,nw,w,nw,w,nw,nw,nw,w,n,nw,w,w,w,w,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-th$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-ado</name>
					<script>send('do n,w,w,w,n,w,n,w,w,nw,nw,nw,nw,n,n,n,n,nw,w,nw,w,nw,nw,nw,w,w,w,w,sw,s,sw,s,se,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>iford-ado</name>
					<script>send('do nw,nw,nw,w,w,w,w,sw,s,sw,s,se,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^iford-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>treeb-ado</name>
					<script>send('do se,w,out,w,s,w,w,w,w,sw,s,sw,s,se,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^treeb-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>igard-ado</name>
					<script>send('do w,s,w,w,w,w,sw,s,se,s,sw,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^igard-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>igard-edo</name>
					<script>send('do s,s,se,se,e,se,e,se,s,s,s,s,se,se,se,se,s,s,e,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^igard-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-igard</name>
					<script>send('do n,w,n,w,n,w,w,w,w,nw,nw,nw,nw,n,n,n,n,nw,w,nw,w,nw,nw,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-igard$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ten-iford</name>
					<script>send('do w,s,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ten-iford$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>iford-ten</name>
					<script>send('do e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^iford-ten$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ten-edo</name>
					<script>send('do w,s,s,se,e,se,s,s,s,s,se,se,se,se,e,s,e,e,e,e,e,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ten-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-ten</name>
					<script>send('do n,w,w,w,n,w,n,w,w,nw,nw,nw,nw,n,n,n,n,nw,w,nw,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-ten$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-bar</name>
					<script>send('do s,s,s,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-edo</name>
					<script>send('do n,e,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-heal</name>
					<script>send('do s,s,s,e,e,e,s,s,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-edo</name>
					<script>send('do e,n,n,n,w,w,w,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-maid</name>
					<script>send('do s,s,s,up,s,s,e,e,up')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-maid$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>maid-edo</name>
					<script>send('do down,w,w,n,n,down,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^maid-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-wiz</name>
					<script>send('do s,s,s,w,w,w,n,n,rap four times')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-wiz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wiz-edo</name>
					<script>send('do out,s,s,e,e,e,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^wiz-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-loth</name>
					<script>send('do n,n,n,n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n,n,n,n,n,w,w,w,n,w,w,n,w,w,n,w,n,w,n,w,n,w,n,n,w,n,n,w,n,w,w,w,n,w,w,n,w,w,w,n,n,e,e,e,e,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-ent</name>
					<script>send('do n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-ent$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ent-edo</name>
					<script>send('do w,w,w,w,w,w,w,w,s,w,w,w,w,s,s,w,w,w,w,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ent-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-nu</name>
					<script>send('do n,n,n,n,e,e,n,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,e,n,e,n,e,n,n,e,e,n,e,n,n,e,n,e,e,n,n,e,e,n,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-nu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-su</name>
					<script>send('do n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,n,e,n,e,e,n,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-su$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>su-edo</name>
					<script>send('do w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,sw,w,w,w,w,w,s,w,w,w,w,w,w,w,w,w,w,w,s,w,w,w,s,w,w,w,s,w,s,w,w,w,w,w,w,w,w,w,w,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^su-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-well</name>
					<script>send('do n,n,n,w,w,w,w,w,w,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,nw,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-well$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>well-edo</name>
					<script>send('do s,s,s,s,s,se,s,s,s,s,s,s,s,s,s,s,s,s,s,se,se,e,e,e,e,e,s,e,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^well-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-fras</name>
					<script>send('do n,n,n,w,w,w,w,w,w,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,nw,n,n,n,n,n,n,n,n,n,n,n,n,ne,e,ne,ne,e,ne,n,ne,e,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-fras$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-cal</name>
					<script>send('do n,e,e,se,se,se,se,s,s,s,se,se,se,se,e,e,e,e,se,se,e,e,e,se,se,e,se,s,s,e,e,s,se,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-mt</name>
					<script>send('do n,e,e,se,se,se,se,s,s,s,se,se,se,se,e,e,e,e,se,se,e,e,e,se,se,e,se,e,e,s,s,s,se,se,e,e,e,e,e,e,e,se,e,e,e,e,e,e,se,e,e,e,e,e,e,se,e,e,e,se,e,se,se,e,e,s,s,se,se,se,s,s,sw,sw,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-mt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-osgi</name>
					<script>send('do n,e,e,se,se,se,se,s,s,s,se,se,se,se,e,e,e,e,se,se,e,e,e,se,se,e,se,e,e,e,e,e,e,e,e,se,e,e,e,se,e,e,e,e,se,e,e,e,e,e,e,se,e,e,e,e,e,e,e,se,se,e,s,s,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-rhos</name>
					<script>send('do n,n,n,n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,e,n,e,n,e,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,w,n,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-dg</name>
					<script>send('do n,n,n,n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,e,n,e,n,e,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,w,n,w,n,n,e,e,e,e,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-dm</name>
					<script>send('do n,n,n,e,e,e,e,e,e,e,e,e,e,e,n,e,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,n,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,e,e,e,e,s,s,e,s,s,s,s,s,s,s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,e,e,e,e,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-dm$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-uh</name>
					<script>send('do n,e,s,s,s,s,s,se,s,s,s,e,e,s,s,e,s,s,e,s,e,s,s,s,e,s,s,s,s,s,s,s,s,s,s,s,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-uh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-es</name>
					<script>send('do n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,n,n,e,e,e,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-es$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-sb</name>
					<script>send('do n,n,n,e,e,e,e,e,e,n,e,n,e,n,e,e,e,e,e,e,e,e,e,n,n,n,n,n,n,n,n,e,n,n,e,e,n,e,n,n,e,e,n,n,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-sb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-lvl19</name>
					<script>send('do n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,s,s,s,se,se,e,e,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-lvl19$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lvl19-edo</name>
					<script>send('do w,w,n,w,nw,nw,n,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,s,w,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lvl19-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sb-edo</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,w,w,w,s,s,w,w,w,s,w,w,s,s,s,w,s,w,w,w,w,w,w,w,w,w,w,w,w,s,w,s,s,w,w,w,w,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^sb-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>es-edo</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,w,w,w,w,w,w,w,s,w,w,w,w,w,s,w,w,w,w,w,w,w,w,w,s,w,w,w,w,w,w,w,w,w,w,s,w,w,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^es-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>uh-edo</name>
					<script>send('do s,w,n,n,n,n,n,n,n,n,n,n,n,w,n,n,n,n,w,n,n,w,n,w,w,n,n,n,w,n,nw,n,n,n,n,n,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^uh-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-wag</name>
					<script>send('do n,e,e,se,se,se,se,s,s,s,se,se,se,se,e,e,e,e,se,se,e,e,e,se,se,e,se,e,e,e,e,s,se,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-wag$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-woses</name>
					<script>send('do n,e,e,se,se,se,se,s,s,s,se,se,se,se,e,e,e,e,se,se,e,e,e,se,se,e,se,e,e,s,s,s,se,se,e,e,e,e,e,e,e,se,e,e,e,e,e,e,se,e,e,e,e,e,e,se,e,n,village')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-woses$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-stone</name>
					<script>send('do n,e,e,se,se,se,se,s,s,s,se,se,se,se,e,e,e,e,se,se,e,e,e,se,se,e,se,e,e,e,e,e,e,e,e,se,e,e,e,se,e,e,e,e,se,s,s,s,se,e,e,e,e,e,e,se,e,e,e,se,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-stone$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>su-dg</name>
					<script>send('do e,e,n,e,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,w,w,n,w,n,w,w,n,w,n,n,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^su-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ent-nu</name>
					<script>send('do e,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,e,n,e,n,n,e,e,n,e,n,n,e,n,e,n,e,e,n,e,n,n,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ent-nu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>su-ent</name>
					<script>send('do w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,w,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^su-ent$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ent-su</name>
					<script>send('do e,n,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ent-su$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>su-nu</name>
					<script>send('do n,w,n,w,n,n,w,w,w,w,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^su-nu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-arh</name>
					<script>send('do n,w,w,w,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-arh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-arh2</name>
					<script>send('do n,n,n,n,n,n,n,n,n,e,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-arh2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-horn</name>
					<script>send('do n,e,e,se,se,se,se,s,s,s,se,se,se,se,e,e,e,e,se,se,e,e,e,se,se,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-horn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-anfi</name>
					<script>send('do n,e,e,se,se,se,se,s,s,s,se,se,se,se,e,e,e,e,se,se,e,e,e,se,se,e,se,e,e,e,e,e,e,e,e,se,e,e,e,se,e,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-anfi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>horn-edo</name>
					<script>send('do w,n,nw,nw,w,w,w,nw,nw,w,w,w,w,nw,nw,nw,nw,n,n,n,nw,nw,nw,nw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^horn-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>horn-cal</name>
					<script>send('do s,e,e,s,s,e,se,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^horn-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>uh-upb</name>
					<script>send('do s,w,n,n,n,n,n,n,n,n,n,n,n,n,w,n,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^uh-upb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>upb-uh</name>
					<script>send('do n,e,s,s,s,s,s,s,s,s,s,s,s,w,s,s,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^upb-uh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-upb</name>
					<script>send('do n,e,s,s,s,s,s,se,s,s,s,e,s,e,s,e,e,s,s,s,s,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-upb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>arh-edo</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^arh-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>arh2-edo</name>
					<script>send('do s,s,s,s,s,s,s,w,w,s,w,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^arh2-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>upb-edo</name>
					<script>send('do n,w,w,n,n,n,w,n,w,n,n,w,n,n,w,n,nw,n,n,n,n,n,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^upb-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>uh-stevo</name>
					<script>send('do s,w,w,s,w,s,w,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^uh-stevo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>stevo-uh</name>
					<script>send('do s,e,e,n,e,e,n,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^stevo-uh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>uh-inn</name>
					<script>send('do n,ne,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^uh-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-uh</name>
					<script>send('do w,s,s,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-uh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>uh-shop</name>
					<script>send('do nw,move board')</script>
					<command></command>
					<packageName></packageName>
					<regex>^uh-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-uh</name>
					<script>send('do out,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-uh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>uh-stab</name>
					<script>send('do n,ne,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^uh-stab$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>stab-uh</name>
					<script>send('do s,s,s,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^stab-uh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>upb-cal</name>
					<script>send('do n,w,w,n,n,n,w,n,w,n,n,w,n,n,w,n,nw,ne,e,se,e,e,s,s,se,se,se,se,e,e,e,e,se,se,e,e,e,se,se,e,se,s,e,s,s,e,se,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^upb-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>edo-idle</name>
					<script>send('do n,e,e,se,e,e,e,e,e,e,e,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^edo-idle$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>idle-edo</name>
					<script>send('do s,w,w,w,w,w,w,w,w,w,nw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^idle-edo$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>ROV</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-by</name>
					<script>send('do sw,sw,w,w,w,w,w,w,w,w,w,w,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,sw,sw,sw,sw,sw,s,se,s,sw,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,n,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,sw,sw,w,w,w,sw,w,w,w,w,w,w,w,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-riv</name>
					<script>send('do sw,sw,w,w,w,w,w,w,w,w,w,w,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,sw,sw,sw,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>nu-edo</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,w,w,w,w,s,w,w,w,s,s,w,w,w,w,w,s,w,w,w,w,w,s,w,w,w,w,w,w,w,w,s,w,w,w,w,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^nu-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>fras-edo</name>
					<script>send('do w,w,w,w,w,w,w,w,sw,s,sw,w,sw,sw,w,sw,s,s,s,s,s,s,s,s,s,s,s,s,se,s,s,s,s,s,s,s,s,s,s,s,s,s,se,se,s,s,se,e,e,e,ne,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^fras-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-edo</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,s,e,s,s,s,e,s,s,s,s,s,s,s,w,w,s,w,w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,w,w,w,w,w,s,w,w,w,w,w,s,w,w,s,s,s,s,w,w,s,s,w,w,w,w,w,w,w,w,s,w,w,w,w,w,w,w,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-beorn</name>
					<script>send('do w,n,w,n,w,n,w,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-beorn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>beorn-rhos</name>
					<script>send('do e,e,s,e,s,e,s,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^beorn-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-hp</name>
					<script>send('do sw,sw,w,w,w,w,w,w,w,w,w,w,nw,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-hp$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-warg</name>
					<script>send('do sw,sw,w,w,w,w,w,w,w,w,w,w,nw,n,n,w,n,w,w,w,w,camp,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-warg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>hp-rhos</name>
					<script>send('do e,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,ne,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^hp-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>warg-rhos</name>
					<script>send('do out,out,e,e,e,e,e,s,s,s,se,e,e,e,e,e,e,e,e,e,e,ne,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^warg-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>frams-warg</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,s,camp,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^frams-warg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>warg-frams</name>
					<script>send('do out,out,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^warg-frams$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>warg-loth</name>
					<script>send('do out,out,s,s,s,s,s,s,se,se,se,sw,s,se,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^warg-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-sling</name>
					<script>send('do sw,sw,w,w,w,w,s,s,s,e,path')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-sling$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sling-rhos</name>
					<script>send('do path,w,n,n,n,e,e,e,e,ne,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^sling-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>frams-mg</name>
					<script>send('do w,n,n,w,n,n,w,w,n,w,n,n,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^frams-mg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mg-frams</name>
					<script>send('do se,s,e,s,s,e,e,s,e,s,e,s,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mg-frams$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-frams</name>
					<script>send('do sw,sw,w,w,w,w,w,w,w,w,w,w,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,n,n,n,n,w,w,n,w,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-frams$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>frams-rhos</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,e,s,e,s,s,e,s,s,s,s,s,s,s,s,s,s,s,s,s,s,se,e,e,e,e,e,e,e,e,e,e,ne,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^frams-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>frams-loth</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,se,se,sw,s,se,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^frams-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>frams-hp</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^frams-hp$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>hp-frams</name>
					<script>send('do n,n,n,n,n,n,e,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^hp-frams$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-wh</name>
					<script>send('do n,n,n,n,n,w,n,n,w,w,w,w,n,n,n,n,n,n,n,n,w,w,n,w,n,n,w,n,n,n,e,s,se,e,e,e,s,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-wh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wh-rhos</name>
					<script>send('do nw,n,w,w,w,nw,n,w,s,s,s,s,s,s,s,s,s,e,s,s,s,e,s,s,e,s,s,e,e,s,s,e,s,e,s,e,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^wh-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-loth</name>
					<script>send('do sw,sw,w,w,w,w,s,s,s,s,s,s,s,s,w,w,w,w,w,w,w,w,w,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-thran</name>
					<script>send('do n,n,n,n,n,n,n,n,w,n,w,n,n,w,n,w,n,n,n,n,n,e,e,se,e,e,e,e,e,e,se,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,ne,e,ne,ne,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-rhos</name>
					<script>send('do s,sw,sw,sw,w,sw,w,w,w,w,w,w,w,w,w,w,w,nw,w,w,w,w,w,nw,w,w,w,w,w,w,nw,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,e,e,s,s,e,s,e,s,e,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-dg</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,e,e,e,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-flask</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,e,s,s,e,s,e,e,s,s,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-flask$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>flask-rhos</name>
					<script>send('do n,n,n,w,n,n,n,n,n,w,n,n,w,w,n,n,n,w,n,n,w,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^flask-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-srs</name>
					<script>send('do se,e,e,e,e,e,e,ne,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-srs$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-ess</name>
					<script>send('do n,n,n,n,n,w,n,n,w,w,w,w,n,n,n,n,n,n,n,n,n,n,e,e,e,se,e,e,e,e,e,e,se,e,e,e,e,e,se,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-ess$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>srs-rhos</name>
					<script>send('do n,sw,w,w,w,w,w,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^srs-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ess-rhos</name>
					<script>send('do e,n,nw,w,w,w,w,w,nw,w,w,w,w,w,w,nw,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,s,e,e,e,s,e,s,e,s,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ess-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-beornings</name>
					<script>send('do w,n,w,n,w,w,n,n,w,w,n,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-beornings$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>beornings-rhos</name>
					<script>send('do e,s,s,e,e,e,s,e,s,s,e,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^beornings-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-awl</name>
					<script>send('do n,n,n,n,n,w,n,n,w,w,w,w,n,n,n,n,n,n,n,n,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-awl$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>awl-rhos</name>
					<script>send('do e,e,e,plains,s,s,s,s,s,s,e,s,s,s,e,s,s,e,e,s,e,s,e,e,s,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^awl-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-fsl</name>
					<script>send('do n,n,n,n,n,w,n,n,w,w,w,w,n,n,n,n,n,n,n,n,w,w,n,w,n,n,w,n,n,n,n,n,n,n,n,n,e,n,n,e,n,e,n,e,e,e,e,path')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-fsl$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>fsl-rhos</name>
					<script>send('do path,w,w,w,w,s,w,s,w,s,s,w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,s,s,s,e,s,s,e,s,s,s,e,e,e,s,e,s,e,s,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^fsl-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-cblade</name>
					<script>send('do sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-cblade$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-ship</name>
					<script>send('do sw,sw,w,w,w,w,s,w,w,w,w,w,s,s,w,w,w,w,s,s,sw,s,se,sw,s,s,s,s,s,s,s,s,s,s,e,e,e,e,e,e,e,se,s,s,e,e,s,s,e,e,path,climb chain')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-ship$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ship-rhos</name>
					<script>send('do climb down chain,path,n,w,n,n,w,w,w,n,nw,w,w,w,w,w,w,w,n,n,n,n,n,n,n,n,n,n,ne,e,e,e,e,e,n,e,n,e,n,e,e,n,n,n,n,n,e,e,e,e,ne,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ship-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-recurve</name>
					<script>send('do s,s,s,s,s,s,e,s,e,s,s,e,s,e,s,s,s,s,e,s,s,s,s,s,s,e,e,e,trail')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-recurve$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>flask-rushes</name>
					<script>send('do w,w,w,w,w,w,w,n,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^flask-rushes$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rushes-flask</name>
					<script>send('do e,e,e,e,e,e,e,s,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rushes-flask$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-rushes</name>
					<script>send('do sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-rushes$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rushes-rhos</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rushes-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-jarlnoth</name>
					<script>send('do se,e,e,e,e,e,e,ne,se,e,e,e,e,e,e,n,n,n,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-jarlnoth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>jarlnoth-rhos</name>
					<script>send('do s,s,s,s,s,s,s,s,s,w,w,w,w,w,w,nw,sw,w,w,w,w,w,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^jarlnoth-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-jarl</name>
					<script>send('do s,sw,sw,sw,w,sw,w,s,s,s,s,s,s,s,s,w,w,w,w,w,w,w,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-jarl$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>jarl-thran</name>
					<script>send('do s,s,e,e,e,e,e,n,e,e,n,e,n,n,n,n,n,n,ne,e,ne,ne,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^jarl-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-ribbon</name>
					<script>send('do se,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,ne,e,e,e,e,e,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-ribbon$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-crys</name>
					<script>send('do s,sw,s,s,s,s,s,s,s,s,s,e,e,e,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-crys$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>crys-thran</name>
					<script>send('do w,n,w,w,w,n,n,n,n,n,n,n,n,n,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^crys-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-ebs</name>
					<script>send('do s,sw,sw,sw,w,sw,w,w,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-ebs$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ebs-thran</name>
					<script>send('do n,n,n,n,n,e,e,ne,e,ne,ne,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ebs-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-maegon</name>
					<script>send('do s,sw,sw,sw,w,sw,w,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-maegon$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>maegon-thran</name>
					<script>send('do s,s,e,ne,e,ne,ne,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^maegon-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-axebelt</name>
					<script>send('do s,sw,sw,sw,w,sw,s,s,s,s,s,s,e,path')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-axebelt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>axebelt-thran</name>
					<script>send('do path,w,n,n,n,n,n,n,ne,e,ne,ne,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^axebelt-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-bsc</name>
					<script>send('do ne,n,n,w,w,path')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-bsc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-bsl</name>
					<script>send('do ne,n,n,n,w,w,w,w,w,w,w,w,w,camp,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-bsl$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-elven</name>
					<script>send('do ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,turn torch,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-elven$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-emerald</name>
					<script>send('do ne,e,e,e,e,e,ne,n,n,n,e,n,e,n,n,e,e,n,n,e,e,e,n,n,e,e,crawl behind shrub')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-emerald$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-esg</name>
					<script>send('do ne,e,e,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-esg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-dale</name>
					<script>send('do ne,e,e,e,e,e,ne,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-dale$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-ereb</name>
					<script>send('do ne,e,e,e,e,e,ne,n,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-ereb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-morg</name>
					<script>send('do s,sw,sw,sw,s,s,s,s,s,s,s,s,s,e,s,s,s,s,s,e,e,e,e,e,e,e,ne,e,e,s,s,e,e,e,e,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,w,w,w,w,w,sw,sw,s,sw,s,s,s,s,s,s,s,s,se,s,s,s,s,s,s,s,s,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-dg</name>
					<script>send('do s,sw,sw,sw,w,sw,w,w,w,w,w,w,w,w,w,w,w,nw,w,w,w,w,w,nw,w,w,w,w,w,w,nw,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,s,s,e,s,s,s,s,e,s,s,s,s,s,s,e,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,s,s,e,s,s,s,s,s,s,s,s,e,e,e,e,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-alz</name>
					<script>send('do ne,e,e,e,e,e,ne,n,n,n,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,s,e,e,e,e,s,e,s,e,s,s,s,e,s,s,s,e,s,s,s,s,s,e,s,s,s,e,e,se,se,se,e,e,e,se,e,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-alz$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-ihc</name>
					<script>send('do ne,e,e,e,e,e,ne,n,n,n,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,se,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-ihc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-rhunheal</name>
					<script>send('do ne,e,e,e,e,e,ne,n,n,n,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,s,e,e,e,e,s,e,s,e,s,s,s,e,s,s,s,e,s,s,s,s,s,s,outpost,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-rhunheal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-drba</name>
					<script>send('do ne,e,e,e,e,e,ne,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-drba$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-ddm</name>
					<script>send('do ne,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,n,e,e,n,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-ddm$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-ivory</name>
					<script>send('do ne,n,n,n,n,w,n,w,n,n,w,n,w,w,w,n,n,n,n,w,n,w,w,n,w,w,w,w,w,n,w,w,w,w,w,w,w,w,w,w,w,s,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-ivory$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-shop</name>
					<script>send('do stairs,terrace,gates,knock on gates,deeper,deeper,w,nw,n,nw,w,sw,sw,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-bank</name>
					<script>send('do stairs,terrace,gates,knock on gates,deeper,deeper,w,nw,sw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-bar</name>
					<script>send('do stairs,terrace,gates,knock on gates,deeper,deeper,w,nw,n,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-thran</name>
					<script>send('do s,se,s,se,e,out,out,out,terrace,stairs,bridge')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-thran</name>
					<script>send('do se,ne,se,e,out,out,out,terrace,stairs,bridge')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-thran</name>
					<script>send('do w,sw,se,e,e,ne,se,e,out,out,out,terrace,stairs,bridge')</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-rs</name>
					<script>send('do ne,n,n,n,n,w,n,w,n,n,w,n,w,w,w,n,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-rs$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-ror</name>
					<script>send('do ne,e,e,e,e,e,ne,n,n,n,e,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,e,e,e,e,whistle twice')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-ror$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>nu-dg</name>
					<script>send('do e,e,n,e,n,e,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,w,n,w,n,n,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^nu-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thran-els</name>
					<script>send('do s,sw,sw,sw,s,s,s,s,s,s,s,s,s,e,s,s,s,s,s,e,e,e,e,e,e,e,ne,e,e,s,s,e,e,e,e,s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,w,s,w,s,s,s,s,s,s,s,s,s,w,s,w,w,w,w,w,w,w,w,s,s,w,s,w,s,s,w,s,s,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thran-els$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-orcish</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,s,e,e,e,e,s,e,e,s,s,e,s,s,s,s,e,s,e,s,e,path,s,enter')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-orcish$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>flask-dg</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,s,w,s,w,s,w,s,w,s,w,s,s,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^flask-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-ssb</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,e,s,e,e,s,s,e,e,e,s,s,s,s,s,s,s,s,e,s,s,s,s,s,s,s,s,s,s,s,e,e,s,s,s,s,s,s,s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,e,e,e,e,s,e,e,s,e,s,s,s,e,e,s,e,encampment')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-ssb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>nu-ent</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,w,s,w,s,w,s,s,w,s,w,w,s,w,s,w,s,w,s,w,s,s,w,s,w,s,w,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^nu-ent$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>nu-su</name>
					<script>send('do s,s,s,e,e,e,s,s,e,s,e,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^nu-su$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ship-loth</name>
					<script>send('do climb down chain,path,s,s,s,s,s,s,w,s,s,w,s,w,s,w,s,w,s,w,s,s,w,s,s,w,w,s,w,s,s,w,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ship-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dwh-loth</name>
					<script>send('do out,s,s,s,se,s,s,s,e,s,e,s,e,s,e,s,e,s,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dwh-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>fran-loth</name>
					<script>send('do n,n,n,n,n,n,n,e,e,n,e,n,n,n,n,n,n,e,e,e,e,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^fran-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>hp-loth</name>
					<script>send('do s,s,se,se,se,se,sw,s,se,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^hp-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rhos-mor</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,e,s,e,s,s,s,s,s,s,e,e,e,s,e,s,e,s,s,s,s,s,s,s,e,s,e,s,s,s,s,s,s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,e,e,e,e,s,s,e,s,e,e,s,s,s,s,s,s,s,s,e,e,e,e,e,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhos-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-pass</name>
					<script>send('do nw,ne,n,n,n,n,n,n,move pile')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-pass$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>SG</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>pel-mt</name>
					<script>send('do n,ne,ne,n,ne,n,ne,n,ne,ne,n,ne,n,ne,n,n,n,ne,n,n,ne,n,n,n,n,ne,ne,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-mt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-mt</name>
					<script>send('do s,se,e,e,e,e,ne,e,e,ne,e,e,ne,e,e,ne,e,e,e,e,n,ne,ne,n,ne,n,ne,n,ne,ne,n,ne,n,ne,n,n,n,ne,n,n,ne,n,n,n,n,ne,ne,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-mt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>da-mt</name>
					<script>send('do out,s,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,e,n,e,n,n,n,e,e,n,e,e,e,e,e,e,s,e,e,s,e,e,e,e,e,e,e,e,n,e,e,e,ne,n,ne,n,n,n,ne,n,n,ne,n,n,n,n,ne,ne,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^da-mt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-cou</name>
					<script>send('do se,se,e,n,n,part reeds,board rowboat,w,n,w,s,down')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-cou$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-len</name>
					<script>send('do w,w,w,w,sw,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-len$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>len-pel</name>
					<script>send('do e,e,e,e,e,ne,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^len-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-len</name>
					<script>send('do s,se,e,e,e,e,ne,e,e,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-len$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>len-lin</name>
					<script>send('do s,sw,w,w,sw,w,w,w,w,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^len-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>len-inn</name>
					<script>send('do n,n,n,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^len-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-len</name>
					<script>send('do w,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-len$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>len-bar</name>
					<script>send('do n,n,n,n,n,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^len-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-len</name>
					<script>send('do w,w,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-len$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-lin</name>
					<script>send('do w,w,w,w,sw,w,w,sw,w,w,sw,w,w,sw,w,w,w,w,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-pel</name>
					<script>send('do s,se,e,e,e,e,ne,e,e,ne,e,e,ne,e,e,ne,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-da</name>
					<script>send('do w,w,w,w,sw,w,w,sw,w,w,sw,w,w,sw,w,w,w,w,nw,nw,n,nw,n,n,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,w,w,w,w,w,n,enter')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-da$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>da-pel</name>
					<script>send('do out,e,s,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,se,s,s,s,s,se,s,se,se,e,e,e,e,ne,e,e,ne,e,e,ne,e,e,ne,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^da-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-morg</name>
					<script>send('do se,se,n,e,n,e,e,n,e,e,e,e,e,e,ne,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-gls</name>
					<script>send('do w,n,nw,w,w,w,w,w,w,w,w,n,w,w,w,n,n,w,w,w,w,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-gls$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gls-lin</name>
					<script>send('do s,e,e,e,e,e,e,e,e,e,e,e,s,e,e,s,e,s,e,s,se,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gls-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-tarn</name>
					<script>send('do n,w,nw,n,n,n,n,nw,n,n,n,n,nw,n,nw,w,w,w,w,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-tarn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tarn-lin</name>
					<script>send('do s,e,e,e,e,e,se,s,se,s,s,s,s,se,s,s,s,s,se,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^tarn-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>eth-tarn</name>
					<script>send('do w,s,w,w,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^eth-tarn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tarn-eth</name>
					<script>send('do e,e,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^tarn-eth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>da-tarn</name>
					<script>send('do out,e,s,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n,e,n,e,e,n,n,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^da-tarn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tarn-da</name>
					<script>send('do w,w,w,s,w,w,w,w,w,w,w,s,s,s,w,s,s,s,w,w,w,w,w,w,w,w,w,w,n,w,enter')</script>
					<command></command>
					<packageName></packageName>
					<regex>^tarn-da$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>da-dap</name>
					<script>send('do w,w,s,w,w,w,n,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^da-dap$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dap-da</name>
					<script>send('do e,n,e,e,e,s,s,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dap-da$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>da-lin</name>
					<script>send('do out,e,s,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,e,e,e,e,e,se,s,s,s,s,se,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^da-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-da</name>
					<script>send('do w,n,nw,n,n,n,n,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,w,n,enter')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-da$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-eth</name>
					<script>send('do n,w,nw,n,n,n,n,nw,n,n,n,n,nw,n,nw,n,n,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-eth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>eth-lin</name>
					<script>send('do se,s,s,se,s,se,s,s,s,s,se,s,s,s,s,se,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^eth-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-cal</name>
					<script>send('do n,w,nw,n,n,n,n,nw,n,n,n,n,nw,n,nw,n,n,nw,n,n,n,n,w,nw,nw,w,w,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cal-lin</name>
					<script>send('do se,e,e,e,se,se,e,s,s,s,s,se,s,s,se,s,se,s,s,s,s,se,s,s,s,s,se,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>da-eth</name>
					<script>send('do out,e,s,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,e,n,e,e,n,n,e,e,n,n,e,e,n,e,n,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^da-eth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>eth-da</name>
					<script>send('do s,w,w,w,w,w,w,s,w,w,w,s,w,w,w,w,w,s,s,w,s,s,w,w,w,w,w,w,w,s,s,w,w,w,n,w,enter')</script>
					<command></command>
					<packageName></packageName>
					<regex>^eth-da$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>da-cal</name>
					<script>send('do out,e,s,e,e,e,e,n,e,n,e,n,e,e,n,e,e,n,e,n,e,n,n,n,e,n,e,n,e,n,e,n,e,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^da-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cal-da</name>
					<script>send('do sw,w,w,w,s,s,s,w,w,s,s,s,s,w,s,s,w,w,w,w,w,w,s,w,s,s,s,w,w,w,w,w,n,enter')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-da$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>eth-cal</name>
					<script>send('do n,n,n,n,w,nw,nw,w,w,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^eth-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cal-eth</name>
					<script>send('do se,e,e,e,se,se,e,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-eth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cal-picks</name>
					<script>send('do sw,w,w,nw,nw,nw,nw,n,nw,n,nw,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cal-picks$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>picks-cal</name>
					<script>send('do s,s,s,s,s,s,se,s,se,s,se,se,se,se,e,e,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^picks-cal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>eth-heal</name>
					<script>send('do n,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^eth-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-eth</name>
					<script>send('do e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-eth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-bank</name>
					<script>send('do city,s,s,s,s,enter,e,e,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-lin</name>
					<script>send('do out,w,w,out,n,n,n,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-inn</name>
					<script>send('do city,s,s,s,s,enter,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-lin</name>
					<script>send('do out,n,nw,out,n,n,n,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-sc</name>
					<script>send('do city,s,s,s,s,enter,se,se,se,se,se,out,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-sc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sc-lin</name>
					<script>send('do w,w,w,w,w,enter,nw,nw,nw,nw,nw,out,n,n,n,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^sc-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-dom</name>
					<script>send('do city,s,s,s,s,enter,s,s,sw,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-dom$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dom-lin</name>
					<script>send('do out,ne,ne,nw,out,n,n,n,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dom-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-gal</name>
					<script>send('do city,s,s,s,s,enter,se,se,se,ne,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-gal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gal-lin</name>
					<script>send('do out,sw,nw,nw,nw,out,n,n,n,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gal-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-grok</name>
					<script>send('do city,s,s,s,s,enter,se,se,se,sw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-grok$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>grok-lin</name>
					<script>send('do out,ne,nw,nw,nw,out,n,n,n,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^grok-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-kel</name>
					<script>send('do city,s,s,s,s,enter,se,se,se,sw,sw,sw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-kel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>kel-lin</name>
					<script>send('do out,ne,ne,ne,nw,nw,nw,out,n,n,n,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^kel-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lin-cas</name>
					<script>send('do city,s,s,s,s,enter,se,se,se,se,se,sw,sw,w,sw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lin-cas$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cas-lin</name>
					<script>send('do out,ne,e,ne,ne,nw,nw,nw,nw,nw,out,n,n,n,n,out')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cas-lin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-clock</name>
					<script>send('do gate,sw,sw,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-clock$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>clock-pel</name>
					<script>send('do e,e,e,e,e,e,ne,ne,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^clock-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-jar</name>
					<script>send('do gate,sw,sw,w,w,w,w,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-jar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>jar-pel</name>
					<script>send('do w,n,e,e,e,e,ne,ne,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^jar-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-ram</name>
					<script>send('do gate,sw,sw,w,w,w,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-ram$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ram-pel</name>
					<script>send('do s,e,e,e,e,ne,ne,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ram-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-dirty</name>
					<script>send('do gate,sw,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-dirty$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dirty-pel</name>
					<script>send('do nw,ne,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dirty-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-mucky</name>
					<script>send('do gate,sw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-mucky$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mucky-pel</name>
					<script>send('do se,ne,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mucky-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-thief</name>
					<script>send('do gate,gatehouse,up,se,e,se,se,se,s,se,down,out,w,s,s,s,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-thief$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thief-pel</name>
					<script>send('do w,w,n,n,n,e,tower,up,nw,n,nw,nw,nw,w,nw,down,out,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thief-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-sling</name>
					<script>send('do gate,gatehouse,up,se,e,se,se,se,s,se,down,out,w,s,s,s,s,s,w,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-sling$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>sling-pel</name>
					<script>send('do s,e,e,n,n,n,n,n,e,tower,up,nw,n,nw,nw,nw,w,nw,down,out,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^sling-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-heal</name>
					<script>send('do gate,sw,sw,w,w,w,w,w,s,w,s,s,s,s,s,se,e,se,e,sw,sw,s,w,sw,w,s,s,se,sw,s,s,nw,w,sw,w,s,s,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-pel</name>
					<script>send('do n,w,w,w,n,n,e,ne,e,se,n,n,ne,nw,n,n,e,ne,e,n,ne,ne,w,nw,w,nw,n,n,n,n,n,n,e,e,e,e,e,e,ne,ne,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-hall</name>
					<script>send('do gate,sw,sw,w,w,w,w,w,s,w,s,s,s,s,s,se,e,se,e,sw,sw,s,w,sw,w,s,s,se,e,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-hall$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>hall-pel</name>
					<script>send('do w,w,w,w,w,w,w,w,nw,n,n,e,ne,e,n,ne,ne,w,nw,w,nw,n,n,n,n,n,n,e,e,e,e,e,e,ne,ne,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^hall-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-keep</name>
					<script>send('do gate,sw,sw,w,w,w,w,w,s,w,s,s,s,s,s,se,e,se,e,sw,sw,s,w,sw,w,s,s,e,ne,e,ne,tower,up,e,se,se,se,enter,down')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-keep$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>keep-pel</name>
					<script>send('do up,out,nw,nw,nw,w,down,out,sw,w,sw,w,n,n,e,ne,e,n,ne,ne,w,nw,w,nw,n,n,n,n,n,e,e,n,e,e,e,e,ne,ne,gate')</script>
					<command></command>
					<packageName></packageName>
					<regex>^keep-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pel-roi</name>
					<script>send('do se,se,e,n,n,e,e,e,e,e,e,e,n,e,ne,ne,ne,n,n,n,n,n,n,n,n,n,n,w,n,n,n,n,n,n,touch bottom,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pel-roi$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>SOR</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>dg-edo</name>
					<script>send('do w,s,w,s,w,w,w,w,s,s,s,s,s,s,s,s,s,s,e,s,e,s,e,s,s,s,s,s,s,s,s,s,w,w,w,w,s,s,s,w,s,s,s,w,s,w,s,s,w,w,w,s,s,s,s,w,w,s,w,w,w,s,s,w,s,s,s,w,s,s,s,s,s,s,s,s,w,w,w,s,s,w,s,w,w,w,w,w,w,w,w,w,w,w,w,w,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dm-edo</name>
					<script>send('do n,n,n,w,w,w,w,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,w,n,w,w,n,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,sw,w,w,w,w,w,w,w,s,w,w,w,w,w,w,w,w,w,s,w,w,w,w,w,s,s,s,w,w,w,w,w,w,w,w,w,w,w,w,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dm-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-rhos</name>
					<script>send('do w,w,s,s,w,w,w,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cblade-rhos</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cblade-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>recurve-dg</name>
					<script>send('do forest,w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,s,s,w,s,w,s,w,s,w,s,w,s,w,s,s,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^recurve-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>recurve-rhos</name>
					<script>send('do forest,w,w,n,n,n,n,w,n,n,n,n,n,w,n,n,w,w,n,n,n,w,n,n,w,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^recurve-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-recurve</name>
					<script>send('do w,s,w,s,w,w,w,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,e,n,e,e,n,e,n,e,n,n,n,n,e,n,e,trail')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-recurve$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-cblade</name>
					<script>send('do w,s,s,w,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,w,s,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-cblade$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cblade-dg</name>
					<script>send('do n,n,n,n,n,n,n,n,n,e,e,n,n,n,n,n,e,e,e,e,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cblade-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ribbon-rhos</name>
					<script>send('do n,n,n,n,n,n,n,n,w,w,w,w,w,sw,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,nw,sw,w,w,w,w,w,w,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ribbon-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-thran</name>
					<script>send('do w,w,s,s,w,w,w,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,n,n,w,n,w,n,n,n,n,n,e,e,se,e,e,e,e,e,e,se,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,ne,e,ne,ne,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-thran</name>
					<script>send('do n,ne,n,n,n,n,n,n,n,n,nw,n,nw,n,n,n,n,n,ne,ne,n,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,e,n,n,e,n,n,e,n,n,n,n,e,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,n,n,n,w,n,w,n,w,w,w,w,sw,w,w,w,w,w,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>els-dg</name>
					<script>send('do w,w,w,w,w,w,w,w,w,w,w,w,w,w,s,s,s,s,s,w,s,s,w,s,w,s,w,s,w,s,w,s,w,s,s,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^els-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-els</name>
					<script>send('do w,s,s,w,w,w,w,w,n,n,e,n,e,n,e,n,e,n,e,n,e,n,n,e,n,n,n,n,n,e,e,e,e,e,e,e,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-els$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>els-thran</name>
					<script>send('do e,e,e,e,n,n,e,n,n,e,n,e,n,n,e,e,e,e,e,e,e,e,n,e,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,e,n,n,n,n,n,n,e,n,n,n,n,w,n,w,n,w,w,w,w,sw,w,w,w,w,w,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^els-thran$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-els</name>
					<script>send('do n,ne,n,n,n,n,n,n,n,n,nw,n,nw,n,n,n,n,n,ne,ne,n,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,e,n,n,e,n,n,e,n,n,n,n,e,n,n,n,w,w,n,w,w,w,n,w,w,n,w,w,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-els$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>els-morg</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,e,s,e,e,s,e,e,e,s,e,e,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,w,w,w,w,sw,sw,s,sw,s,s,s,s,s,s,s,s,se,s,s,s,s,s,s,s,s,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^els-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-loth</name>
					<script>send('do w,w,s,s,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,e,s,e,s,s,s,s,w,s,w,s,w,w,n,n,n,n,n,w,w,w,n,w,w,n,w,w,n,w,n,w,n,w,n,w,n,n,w,n,n,w,n,w,w,w,n,w,w,n,w,w,w,n,n,e,e,e,e,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-su</name>
					<script>send('do w,s,s,w,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,e,s,e,s,s,s,s,s,s,e,e,e,s,e,s,e,s,s,s,s,w,s,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-su$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-nu</name>
					<script>send('do w,s,s,w,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,e,s,e,s,s,s,s,w,s,w,s,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-nu$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-morg</name>
					<script>send('do w,s,s,w,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,e,s,e,s,s,s,s,s,s,e,e,e,s,e,s,e,s,s,s,s,s,s,s,e,s,e,s,s,s,s,s,s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,e,e,e,e,s,s,e,s,e,e,s,s,s,s,s,s,s,s,s,s,s,se,s,s,s,s,s,s,s,s,se,s,s,s,s,s,s,s,s,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-dg</name>
					<script>send('do n,ne,n,n,n,n,n,n,n,n,nw,n,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,w,n,w,w,w,n,w,n,w,w,n,w,n,n,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-dm</name>
					<script>send('do w,s,w,s,w,w,w,w,s,s,s,e,s,e,s,s,s,s,e,s,s,s,s,e,e,s,s,s,s,s,e,s,e,s,s,s,s,e,s,s,s,s,s,e,s,s,s,s,e,s,s,s,s,s,s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,e,e,e,e,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-dm$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-orcish</name>
					<script>send('do w,s,w,s,w,w,w,w,n,n,n,n,n,n,e,n,e,e,n,e,n,n,n,n,n,n,e,e,e,e,e,e,s,e,path,s,enter')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-orcish$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-flask</name>
					<script>send('do w,w,s,s,w,w,w,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,e,e,n,e,n,n,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-flask$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-dmw</name>
					<script>send('do w,s,s,w,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,e,s,e,s,s,s,s,s,s,e,e,e,s,e,s,e,s,s,s,s,s,s,s,e,s,e,s,s,s,s,s,s,s,s,s,se,se,se,se,se,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-dmw$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-ruck</name>
					<script>send('do w,s,s,w,w,w,w,w,s,s,s,s,s,s,s,e,s,e,s,s,e,s,e,s,e,s,e,s,e,s,e,s,e,s,e,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,e,s,e,s,s,e,s,e,e,s,e,s,s,e,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-ruck$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-mor</name>
					<script>send('do w,s,s,w,w,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,s,s,e,e,s,e,s,s,s,s,s,s,e,e,e,s,e,s,e,s,s,s,s,s,s,s,e,s,e,s,s,s,s,s,s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,e,e,e,e,s,s,e,s,e,e,s,s,s,s,s,s,s,s,e,e,e,e,e,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-knoll</name>
					<script>send('do w,s,w,s,w,w,w,w,s,s,s,e,s,e,e,s,e,e,e,e,s,s,e,e,e,s,e,e,e,e,e,e,e,e,e,s,e,e,s,e,e,e,s,e,s,s,e,s,s,s,e,s,s,s,s,e,e,s,s,s,s,e,e,e,e,e,e,s,s,e,e,e,e,s,e,e,e,e,e,e,s,s,s,knoll')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-knoll$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dg-ssb</name>
					<script>send('do w,s,w,s,w,w,w,w,s,s,s,e,s,e,s,s,s,s,e,s,s,s,s,e,e,s,s,s,s,s,e,s,e,s,s,s,s,e,s,s,s,s,s,e,s,s,s,s,e,s,s,s,s,s,s,s,s,s,se,se,se,se,se,e,e,e,e,e,e,e,e,e,e,e,e,s,e,e,s,e,s,s,s,s,e,e,e,encampment')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dg-ssb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dm-dg</name>
					<script>send('do n,n,n,w,w,w,w,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,w,n,w,w,w,n,w,n,w,w,n,w,n,n,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dm-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>orcish-dg</name>
					<script>send('do out,n,path,w,n,w,w,w,s,s,s,s,s,w,s,s,w,s,w,s,w,s,w,s,w,s,w,s,s,e,e,e,e,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^orcish-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>orcish-rhos</name>
					<script>send('do out,n,path,w,n,n,n,n,n,w,n,n,w,n,n,w,n,n,n,n,w,n,n,n,n,w,n,n,n,n,n,w,n,n,w,w,n,n,n,w,n,n,w,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^orcish-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dmw-dg</name>
					<script>send('do n,n,nw,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,w,n,w,w,w,n,w,n,w,w,n,w,n,n,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dmw-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ruck-dg</name>
					<script>send('do n,n,n,n,n,n,n,n,n,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,w,n,w,w,w,n,w,n,w,w,n,w,n,n,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ruck-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-dg</name>
					<script>send('do nw,ne,n,n,n,nw,ne,n,n,n,n,n,n,n,n,n,n,n,n,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,w,n,w,w,w,n,w,n,w,w,n,w,n,n,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>knoll-dg</name>
					<script>send('do plains,w,w,w,w,w,w,w,n,w,n,w,w,n,w,n,w,n,n,w,w,n,w,n,n,w,n,w,n,w,w,n,n,w,w,n,w,n,n,w,n,w,n,w,w,n,n,w,n,w,n,w,w,w,w,w,n,w,w,w,n,w,w,n,w,w,w,n,w,n,w,w,n,w,n,n,e,e,e,e,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^knoll-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-ruck</name>
					<script>send('do n,ne,ne,ne,n,nw,n,n,n,n,nw,n,nw,n,n,n,n,n,n,ne,ne,ne,n,e,e,e,e,e,e,e,e,e,e,e,e,n,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-ruck$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ruck-morg</name>
					<script>send('do s,s,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,sw,s,sw,s,s,s,s,s,s,s,s,se,s,s,s,s,s,s,s,s,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ruck-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ssb-dg</name>
					<script>send('do out,n,n,n,n,n,n,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,w,n,w,w,w,n,w,n,w,w,n,w,n,n,e,e,e,e,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ssb-dg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-ssb</name>
					<script>send('do n,ne,n,ne,n,nw,n,ne,n,nw,nw,n,n,nw,n,ne,n,n,n,ne,ne,n,n,n,n,n,n,n,encampment')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-ssb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ssb-morg</name>
					<script>send('do out,s,s,s,s,s,s,sw,s,sw,s,s,s,s,s,s,s,s,se,s,s,s,s,s,s,s,s,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ssb-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ssb-rhos</name>
					<script>send('do out,n,n,n,n,n,n,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,w,n,w,w,w,n,w,n,w,w,n,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ssb-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-osgi</name>
					<script>send('do n,w,w,knock on gate,w,nw,w,w,sw,nw,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-osgi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-ud</name>
					<script>send('do n,w,w,knock on gate,w,nw,n,n,n,n,ne,climb through window')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-ud$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-inn</name>
					<script>send('do n,w,w,knock on gate,w,nw,n,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-war</name>
					<script>send('do n,w,w,knock on gate,w,nw,n,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-war$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-heal</name>
					<script>send('do n,w,w,knock on gate,w,nw,n,e,e,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-goth</name>
					<script>send('do n,w,w,knock on gate,w,nw,w,w,sw,nw,w,w,w,w,w,s,sw,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-goth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-pel</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,sw,sw,w,w,w,w,w,w,s,w,w,s,w,s,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-pel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-cou</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,sw,sw,w,w,w,w,w,s,w,w,w,part reeds,board rowboat,w,n,w,s,down')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-cou$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-dms</name>
					<script>send('do se,e,se,se,se,e,se,se,se,s,se,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-dms$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-dcms</name>
					<script>send('do se,s,s,s,s,s,s,s,s,e,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-dcms$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-roi</name>
					<script>send('do s,s,s,s,w,s,touch bottom,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-roi$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-azim</name>
					<script>send('do se,e,se,se,se,s,se,se,s,s,e,e,tent')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-azim$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-rok</name>
					<script>send('do se,e,se,se,se,s,se,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-rok$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-blue</name>
					<script>send('do se,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-blue$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-ruck</name>
					<script>send('do ne,nw,n,n,n,ne,nw,n,e,e,e,e,e,e,e,e,e,e,n,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-ruck$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ruck-mor</name>
					<script>send('do w,s,w,w,s,w,w,w,w,w,w,w,w,w,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ruck-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-mg</name>
					<script>send('do n,ne,e,e,e,e,ne,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-mg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mg-morg</name>
					<script>send('do w,sw,w,w,w,w,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mg-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-mm</name>
					<script>send('do n,ne,e,e,e,e,s,e,e,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-mm$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-mmbar</name>
					<script>send('do n,ne,e,e,e,e,s,e,e,se,traverse wreckage,sw,s,se,ne,se,gates,w,w,sw,sw,sw,s,s,s,se,se,se,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-mmbar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-mor</name>
					<script>send('do n,ne,ne,ne,n,nw,n,n,n,n,nw,n,nw,n,n,n,n,n,n,ne,ne,ne,n,e,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-stairs</name>
					<script>send('do n,ne,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-stairs$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-ss</name>
					<script>send('do n,ne,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-ss$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-forge</name>
					<script>send('do n,w,w,knock on gate,w,nw,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-forge$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-morg</name>
					<script>send('do nw,ne,n,n,n,nw,ne,n,w,sw,sw,s,sw,s,s,s,s,s,s,s,s,se,s,s,s,s,s,s,s,s,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>stairs-morg</name>
					<script>send('do w,w,w,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^stairs-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ss-morg</name>
					<script>send('do n,w,w,w,w,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ss-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mg-mor</name>
					<script>send('do w,sw,w,w,w,n,ne,n,nw,n,n,n,n,nw,n,nw,n,n,n,n,n,n,ne,ne,ne,n,e,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mg-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-mg</name>
					<script>send('do ne,nw,n,n,n,ne,nw,n,w,s,sw,sw,sw,s,s,s,s,s,s,se,s,se,s,s,s,s,se,s,sw,s,e,e,e,ne,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-mg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-rhos</name>
					<script>send('do nw,ne,n,n,n,nw,ne,n,n,n,n,n,n,n,n,n,n,n,n,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,w,n,w,w,n,w,w,w,n,w,n,w,w,n,w,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mor-dm</name>
					<script>send('do nw,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,w,w,n,n,w,w,w,w,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^mor-dm$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dm-mor</name>
					<script>send('do n,e,s,e,e,s,s,s,s,s,s,s,s,e,e,e,e,e,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dm-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-oli</name>
					<script>send('do n,ne,n,n,n,n,n,n,n,n,nw,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-oli$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>oli-morg</name>
					<script>send('do s,e,se,s,s,s,s,s,s,s,s,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^oli-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-ha</name>
					<script>send('do n,ne,n,ne,n,nw,n,ne,n,nw,nw,w,w,w,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-ha$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ha-morg</name>
					<script>send('do waterfall,e,e,e,se,s,s,s,s,s,s,s,s,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ha-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pass-mor</name>
					<script>send('do out,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pass-mor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>morg-pass</name>
					<script>send('do n,ne,n,ne,n,nw,n,ne,n,nw,nw,n,n,nw,n,ne,n,n,n,ne,ne,ne,n,e,move pile')</script>
					<command></command>
					<packageName></packageName>
					<regex>^morg-pass$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pass-morg</name>
					<script>send('do out,w,sw,sw,s,sw,s,s,s,s,s,s,s,s,se,s,s,s,s,s,s,s,s,sw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pass-morg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dm-comprehend</name>
					<script>send("do 8s,3sw,4w,5n,search plants, get scroll,n, nw, enter, give scroll to man")</script>
					<command></command>
					<packageName></packageName>
					<regex>^comprehend$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>comprehend-dm</name>
					<script>send('do out,se,6s,4e,3ne,8n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^comprehendout$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>WA</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>gh-blossom</name>
					<script>send('do e,e,n,ne,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gh-blossom$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>blossom-gh</name>
					<script>send('do s,sw,sw,s,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^blossom-gh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gh-wt</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gh-wt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wt-gh</name>
					<script>send('do w,w,w,w,n,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^wt-gh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gh-by</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gh-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gh-bel</name>
					<script>send('do e,s,s,s,s,s,s,s,se,sw,s,sw,sw,sw,sw,se,down,s,w,w,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gh-bel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-gh</name>
					<script>send('do s,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-gh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bel-gh</name>
					<script>send('do n,n,n,n,n,n,n,e,e,n,up,ne,n,ne,nw,n,ne,n,ne,n,n,n,n,n,n,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bel-gh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gh-bree</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e,e,ne,e,e,e,e,ne,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gh-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-gh</name>
					<script>send('do w,w,w,w,w,w,w,sw,sw,nw,w,w,sw,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-gh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gh-shop</name>
					<script>send('do w,w,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gh-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-gh</name>
					<script>send('do s,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-gh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gh-cirdan</name>
					<script>send('do w,w,w,w,nw,w,enter,n,up,up,up,up,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gh-cirdan$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cirdan-gh</name>
					<script>send('do n,down,down,down,down,s,out,e,se,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cirdan-gh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bel-by</name>
					<script>send('do n,n,n,n,n,n,n,e,e,n,up,ne,ne,ne,e,e,e,e,e,e,e,e,ne,e,ne,ne,ne,ne,ne,n,ne,n,ne,e,e,e,e,e,e,e,ne,e,e,ne,e,e,ne,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bel-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-bel</name>
					<script>send('do s,w,w,sw,w,w,sw,w,w,sw,sw,s,w,w,w,w,w,w,w,sw,s,sw,sw,sw,sw,sw,w,sw,w,w,sw,w,w,sw,w,w,w,w,sw,down,s,w,w,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-bel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bel-bree</name>
					<script>send('do n,n,n,n,n,n,n,e,e,n,up,ne,ne,ne,e,e,e,e,e,e,e,e,ne,e,ne,ne,ne,ne,ne,n,ne,n,ne,e,e,e,e,e,e,e,ne,e,e,ne,e,e,ne,e,e,e,e,e,e,e,e,ne,e,e,e,e,ne,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bel-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-bel</name>
					<script>send('do w,w,w,w,w,w,w,sw,sw,nw,w,w,sw,w,w,w,w,w,w,w,w,sw,w,w,sw,w,w,sw,w,w,sw,w,w,w,w,s,w,sw,s,sw,sw,sw,sw,sw,w,sw,w,w,sw,w,w,sw,w,w,nw,sw,sw,down,s,w,w,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-bel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bel-ado</name>
					<script>send('do n,n,n,n,n,n,n,e,e,n,up,ne,se,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,e,se,e,se,e,se,se,se,e,se,se,se,se,se,se,se,se,s,se,se,s,s,s,se,se,se,e,se,se,se,se,se,se,e,e,se,e,e,se,e,se,se,se,se,se,se,se,s,se,e,se,e,se,e,se,e,se,s,sw,s,se,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bel-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-bel</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,nw,w,nw,w,nw,w,nw,w,nw,n,nw,nw,nw,nw,nw,nw,nw,w,nw,w,w,nw,w,w,nw,nw,nw,nw,nw,nw,w,nw,nw,n,n,nw,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,w,nw,nw,nw,w,nw,w,nw,w,nw,w,w,w,w,w,nw,w,w,w,nw,nw,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,w,sw,w,w,sw,w,w,w,w,w,w,sw,sw,down,s,w,w,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-bel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bel-gildor</name>
					<script>send('do n,n,n,n,n,n,n,e,e,n,up,ne,ne,ne,e,e,e,e,e,e,e,e,ne,e,ne,ne,ne,ne,ne,n,ne,e,e,e,e,e,e,e,e,e,e,ne,e,ne,e,e,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bel-gildor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gildor-bel</name>
					<script>send('do sw,nw,w,sw,w,w,nw,sw,nw,sw,w,sw,w,w,w,w,w,w,w,w,w,w,sw,s,sw,sw,sw,sw,sw,w,sw,w,w,sw,w,w,sw,w,w,sw,w,w,down,s,w,w,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gildor-bel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bel-dell</name>
					<script>send('do n,n,n,n,n,n,n,e,e,n,up,se,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,e,e,s,e,s,s,s,se,e,e,se,se,se,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bel-dell$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dell-bel</name>
					<script>send('do nw,nw,nw,nw,w,w,nw,w,w,w,w,w,w,w,w,w,n,w,w,w,w,w,n,n,w,w,w,w,n,nw,n,down,s,w,w,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dell-bel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bel-md</name>
					<script>send('do n,n,n,n,n,n,n,e,e,n,up,ne,ne,ne,e,e,e,e,e,e,e,e,ne,e,ne,ne,ne,ne,ne,n,ne,n,ne,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bel-md$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>md-bel</name>
					<script>send('do sw,s,s,sw,s,sw,sw,sw,sw,sw,w,sw,w,w,sw,w,w,w,w,w,w,sw,sw,down,s,w,w,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^md-bel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bel-fiskin</name>
					<script>send('do n,n,n,n,n,n,n,e,e,n,up,ne,ne,ne,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bel-fiskin$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>fiskin-bel</name>
					<script>send('do sw,s,sw,s,s,s,sw,down,s,w,w,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^fiskin-bel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bel-wt</name>
					<script>send('do n,n,n,n,n,n,n,e,e,n,up,ne,ne,ne,n,ne,ne,n,n,e,e,n,e,n,n,e,e,n,n,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bel-wt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wt-bel</name>
					<script>send('do w,w,w,s,w,s,s,s,w,s,s,s,s,w,w,sw,sw,sw,sw,s,sw,down,s,w,w,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^wt-bel$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>md-gh</name>
					<script>send('do sw,w,w,nw,w,w,w,w,w,w,w,w,w,w,w,n,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^md-gh$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gh-md</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gh-md$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>md-wt</name>
					<script>send('do w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^md-wt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wt-md</name>
					<script>send('do e,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^wt-md$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dell-island</name>
					<script>send('do farm,s,s,s,sw,w,sw,w,sw,w,s,s,e,e,n,e,e,e,e,s,e,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dell-island$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>island-dell</name>
					<script>send('do n,n,w,n,w,w,w,w,s,w,w,n,n,e,ne,e,ne,ne,n,e,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^island-dell$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dell-house</name>
					<script>send('do farm,s,e,s,e,s,s,s,s,s,se,e,se,ne,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dell-house$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>house-dell</name>
					<script>send('do w,sw,nw,nw,n,n,n,w,n,w,n,w,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^house-dell$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dell-spring</name>
					<script>send('do farm,s,s,s,sw,w,sw,w,sw,w,s,s,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dell-spring$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>spring-dell</name>
					<script>send('do w,w,n,n,e,ne,e,ne,ne,e,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^spring-dell$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dell-glade</name>
					<script>send('do farm,s,s,s,s,s,e,e,s,s,se,se,se,se,sw,sw,sw,sw,sw,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dell-glade$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>glade-dell</name>
					<script>send('do e,e,e,e,e,ne,e,ne,ne,e,ne,ne,nw,nw,nw,nw,n,n,n,n,w,w,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^glade-dell$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>spring-glade</name>
					<script>send('do w,w,n,n,e,ne,e,e,e,e,e,e,s,s,se,se,se,se,sw,sw,sw,sw,sw,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^spring-glade$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>island-house</name>
					<script>send('do n,n,w,n,w,w,w,w,s,w,w,n,n,e,ne,e,e,e,e,e,e,s,s,se,e,se,ne,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^island-house$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>glade-spring</name>
					<script>send('do e,e,e,e,ne,ne,e,e,ne,e,ne,ne,nw,nw,nw,nw,n,n,w,w,w,w,w,w,sw,w,s,s,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^glade-spring$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>house-island</name>
					<script>send('do sw,sw,nw,nw,nw,n,n,w,w,w,w,w,w,sw,w,s,s,e,e,n,e,e,e,e,s,e,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^house-island$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dell-by</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne,e,e,ne,e,e,ne,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dell-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-dell</name>
					<script>send('do s,w,w,sw,w,w,sw,w,w,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-dell$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dell-bree</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne,e,e,ne,e,e,ne,e,e,e,e,e,e,e,e,ne,e,e,e,e,ne,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dell-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-dell</name>
					<script>send('do w,w,w,w,w,w,w,sw,sw,nw,w,w,sw,w,w,w,w,w,w,w,w,sw,w,w,sw,w,w,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-dell$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dell-arg</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne,e,e,ne,e,e,ne,e,e,e,e,e,e,e,e,ne,e,e,se,ne,ne,e,e,e,e,e,e,e,e,e,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dell-arg$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>arg-dell</name>
					<script>send('do nw,w,w,w,w,w,w,w,w,w,sw,sw,nw,w,w,sw,w,w,w,w,w,w,w,w,sw,w,w,sw,w,w,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^arg-dell$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>md-by</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,ne,e,e,ne,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^md-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-md</name>
					<script>send('do w,w,s,sw,w,w,sw,w,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-md$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-cloak</name>
					<script>send('do s,w,w,sw,w,w,sw,w,w,sw,sw,s,s,s,s,s,s,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-cloak$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>cloak-by</name>
					<script>send('do n,n,e,n,n,n,n,n,ne,ne,e,e,ne,e,e,ne,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^cloak-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-annum</name>
					<script>send('do w,w,w,w,n,n,w,n,w,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-annum$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>annum-by</name>
					<script>send('do s,s,s,s,s,s,s,s,s,s,s,s,w,w,s,s,s,e,s,e,s,s,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^annum-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-ans</name>
					<script>send('do w,w,w,w,w,n,w,n,n,n,n,n,n,n,n,w,n,n,n,n,n,n,w,w,w,w,n,n,n,n,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-ans$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ans-by</name>
					<script>send('do w,w,s,s,s,s,s,s,s,s,s,e,e,s,s,e,s,e,e,s,s,s,s,e,s,e,s,s,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ans-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-bar</name>
					<script>send('do n,e,e,e,e,e,bar')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-by</name>
					<script>send('do out,w,w,w,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-bank</name>
					<script>send('do n,e,e,e,e,n,n,n,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-bank$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bank-by</name>
					<script>send('do w,w,w,s,s,s,w,w,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bank-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-bat</name>
					<script>send('do n,e,e,e,e,n,e,e,push brick')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-bat$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bat-by</name>
					<script>send('do out,w,w,s,w,w,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bat-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-shop</name>
					<script>send('do n,e,e,e,e,n,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-by</name>
					<script>send('do e,s,s,w,w,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-stock</name>
					<script>send('do e,e,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-stock$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>stock-by</name>
					<script>send('do w,w,w,w,w,w,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^stock-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-gildor</name>
					<script>send('do e,e,s,s,e,s,e,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-gildor$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gildor-by</name>
					<script>send('do w,n,w,n,w,w,n,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gildor-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-took</name>
					<script>send('do s,w,w,sw,s,s,sw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-took$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>took-by</name>
					<script>send('do ne,n,n,ne,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^took-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-thar</name>
					<script>send('do e,e,e,e,e,e,e,e,e,se,se,se,se,se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,se,se,se,e,se,se,se,se,se,se,se,se,s,se,se,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-thar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thar-by</name>
					<script>send('do n,n,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,w,nw,nw,nw,w,nw,n,n,n,n,n,n,nw,nw,nw,n,n,n,nw,nw,n,nw,n,nw,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thar-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-bree</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-by</name>
					<script>send('do w,w,w,w,w,w,w,sw,w,w,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-ado</name>
					<script>send('do e,e,e,e,e,e,e,e,e,se,se,se,se,se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,se,se,se,e,se,se,se,se,se,se,se,se,s,se,se,s,s,s,se,se,se,e,se,se,se,se,se,se,e,e,se,e,e,se,e,se,se,se,se,se,se,se,s,se,e,se,e,se,e,se,e,se,s,sw,s,se,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-by</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,nw,w,nw,w,nw,w,nw,w,nw,n,nw,nw,nw,nw,nw,nw,nw,w,nw,w,w,nw,w,w,nw,nw,nw,nw,nw,nw,w,nw,nw,nw,n,n,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,w,nw,nw,nw,w,nw,n,n,n,n,n,n,nw,nw,nw,n,n,n,nw,nw,n,nw,n,nw,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-riv</name>
					<script>send('do e,e,e,e,e,e,e,e,e,se,ne,e,e,e,e,e,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,ne,e,e,e,ne,ne,ne,e,ne,e,ne,e,e,e,e,e,se,e,e,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,e,e,s,e,e,ne,ne,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-by</name>
					<script>send('do nw,sw,sw,sw,s,sw,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,n,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,sw,sw,w,w,w,sw,w,w,w,w,w,w,w,nw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-rhos</name>
					<script>send('do e,e,e,e,e,e,e,e,e,e,e,ne,e,e,e,e,e,e,se,ne,e,se,e,se,e,e,e,e,e,e,e,ne,e,e,e,ne,ne,ne,e,ne,e,ne,e,e,e,e,e,se,e,e,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,s,e,e,ne,ne,n,ne,ne,ne,ne,ne,ne,n,n,n,ne,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,ne,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-edo</name>
					<script>send('do e,e,e,e,e,e,e,e,e,se,se,se,se,se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,se,se,se,e,se,se,se,se,se,se,se,se,s,se,se,s,s,s,se,se,se,e,se,se,se,se,se,se,e,e,se,e,e,se,e,se,se,se,se,se,se,se,s,se,e,se,e,se,e,se,e,se,ne,e,e,e,e,se,se,se,e,se,e,se,s,s,s,s,se,se,se,se,e,e,e,s,e,e,e,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-loth</name>
					<script>send('do e,e,e,e,e,e,e,e,e,se,se,se,se,se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,se,se,se,e,se,se,se,se,se,se,se,se,s,se,se,s,se,s,s,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,n,n,n,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,e,e,e,e,se,se,se,se,se,se,se,e,e,e,e,e,e,ne,e,e,se,e,e,e,se,se,s,s,se,s,se,s,s,s,s,e,e,e,e,s,e,s,s,e,e,e,e,e,e,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-buck</name>
					<script>send('do e,e,e,e,e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-buck$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>buck-by</name>
					<script>send('do n,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^buck-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-ado</name>
					<script>send('do s,se,s,s,se,s,s,s,sw,s,s,s,s,s,s,s,s,s,se,s,se,s,s,se,se,se,se,se,se,se,se,s,se,se,s,s,s,se,se,se,e,se,se,se,se,se,se,e,e,se,e,e,se,e,se,se,se,se,se,se,se,s,se,e,se,e,se,e,se,e,se,s,se,s,sw,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-bree</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,ne,n,nw,n,nw,w,nw,w,nw,w,nw,w,nw,n,nw,nw,nw,nw,nw,nw,nw,w,nw,w,w,nw,w,w,nw,nw,nw,nw,nw,nw,w,nw,nw,nw,n,n,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,n,n,nw,n,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-buck</name>
					<script>send('do w,w,w,w,w,w,w,sw,sw,nw,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-buck$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>buck-bree</name>
					<script>send('do n,e,e,ne,e,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^buck-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-heal</name>
					<script>send('do n,e,e,n,town,ne,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-bree</name>
					<script>send('do se,sw,valley,s,sw,sw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-bar</name>
					<script>send('do e,e,e,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-bree</name>
					<script>send('do s,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-inn</name>
					<script>send('do e,e,e,e,e,n,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-bree</name>
					<script>send('do sw,s,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-stab</name>
					<script>send('do e,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-stab$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>stab-bree</name>
					<script>send('do n,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^stab-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-combe</name>
					<script>send('do n,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-combe$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>combe-bree</name>
					<script>send('do s,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^combe-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>combe-shop</name>
					<script>send('do town,ne,n,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^combe-shop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>shop-combe</name>
					<script>send('do e,s,s,sw,valley')</script>
					<command></command>
					<packageName></packageName>
					<regex>^shop-combe$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>combe-heal</name>
					<script>send('do town,ne,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^combe-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-combe</name>
					<script>send('do se,sw,valley')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-combe$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>combe-inn</name>
					<script>send('do town,ne,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^combe-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-combe</name>
					<script>send('do nw,sw,valley')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-combe$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>combe-bar</name>
					<script>send('do town,ne,se,bar')</script>
					<command></command>
					<packageName></packageName>
					<regex>^combe-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-combe</name>
					<script>send('do out,nw,sw,valley')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-combe$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-arch</name>
					<script>send('do n,e,e,ne,n,archet')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-arch$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>arch-bree</name>
					<script>send('do out,s,sw,sw,sw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^arch-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-lev</name>
					<script>send('do w,w,w,w,n,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-lev$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>lev-bree</name>
					<script>send('do se,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^lev-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-tom</name>
					<script>send('do s,s,w,w,s,s,w,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-tom$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>tom-bree</name>
					<script>send('do nw,n,n,e,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^tom-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-forsaken</name>
					<script>send('do s,se,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-forsaken$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>forsaken-bree</name>
					<script>send('do nw,nw,sw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^forsaken-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-wtop</name>
					<script>send('do s,ne,e,se,e,se,e,e,e,e,e,e,e,ne,e,n,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-wtop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>wtop-bree</name>
					<script>send('do w,w,w,s,s,sw,w,w,w,w,w,w,w,nw,w,nw,w,sw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^wtop-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-dike</name>
					<script>send('do n,n,w,nw,n,n,n,n,n,n,nw,n,n,nw,n,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-dike$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dike-bree</name>
					<script>send('do s,s,s,s,s,s,s,se,s,s,se,s,s,s,s,s,s,se,s,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dike-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-thront</name>
					<script>send('do n,n,w,nw,n,n,n,n,n,n,nw,n,n,nw,n,n,n,n,n,n,n,n,e,n,e,down,w,w,nw,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-thront$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thront-bree</name>
					<script>send('do s,se,se,e,e,up,w,s,w,s,s,s,s,s,s,s,s,se,s,s,se,s,s,s,s,s,s,se,s,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thront-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-pipe</name>
					<script>send('do s,se,s,s,se,s,s,hill,e,e,climb into filthy wagon')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-pipe$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pipe-bree</name>
					<script>send('do out,w,w,greenway,n,n,nw,n,n,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pipe-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-riv</name>
					<script>send('do s,e,e,e,e,se,e,e,e,e,e,e,e,ne,e,e,e,ne,ne,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,e,s,e,s,e,e,e,e,e,e,e,e,e,e,ne,ne,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-bree</name>
					<script>send('do nw,sw,sw,sw,s,sw,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,n,n,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,sw,sw,sw,w,w,w,sw,w,w,w,w,w,w,w,nw,w,nw,w,sw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-serpent</name>
					<script>send('do s,s,s,s,s,s,s,w,sw,sw,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,w,s,w,s,s,w,s,w,s,w,w,s,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-serpent$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>serpent-bree</name>
					<script>send('do n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,n,e,n,e,n,n,e,n,n,e,n,e,n,e,n,ne,ne,ne,ne,n,n,n,n,n,e,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^serpent-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thar-dru</name>
					<script>send('do se,se,se,e,se,se,se,se,se,se,e,e,se,e,e,se,e,se,se,se,se,se,se,se,s,se,e,e,e,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thar-dru$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dru-thar</name>
					<script>send('do s,s,s,s,s,w,w,w,nw,n,nw,nw,nw,nw,nw,nw,nw,w,nw,w,w,nw,w,w,nw,nw,nw,nw,nw,nw,w,nw,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dru-thar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thar-ado</name>
					<script>send('do se,se,se,e,se,se,se,se,se,se,e,e,se,e,e,se,e,se,se,se,se,se,se,se,s,se,e,se,e,se,e,se,e,se,s,se,s,sw,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thar-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-thar</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,ne,n,nw,n,nw,w,nw,w,nw,w,nw,w,nw,n,nw,nw,nw,nw,nw,nw,nw,w,nw,w,w,nw,w,w,nw,nw,nw,nw,nw,nw,w,nw,nw,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-thar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>thar-bree</name>
					<script>send('do n,n,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,n,n,nw,n,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^thar-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-thar</name>
					<script>send('do s,se,s,s,se,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,se,s,s,se,se,se,se,se,se,se,se,s,se,se,s,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-thar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-string</name>
					<script>send('do nw,sw,sw,sw,s,sw,sw,w,w,n,n,n,n,n,n,n,n,n,n,e,n,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-string$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>string-riv</name>
					<script>send('do s,s,s,s,s,s,s,w,s,w,s,s,s,s,e,e,ne,ne,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^string-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-ring</name>
					<script>send('do nw,sw,sw,sw,s,sw,sw,w,w,n,n,n,n,n,e,e,e,n,e,e,e,e,e,n,e,e,n,valley')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-ring$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ring-riv</name>
					<script>send('do w,w,w,w,w,w,w,w,w,w,s,s,s,s,w,s,s,s,s,e,e,ne,ne,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ring-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-crys</name>
					<script>send('do nw,sw,sw,sw,s,s,e,e,e,e,e,e,path')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-crys$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-blem</name>
					<script>send('do nw,sw,sw,sw,s,s,s,s,s,s,e,e,cave,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-blem$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>crys-riv</name>
					<script>send('do out,w,w,w,w,w,w,n,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^crys-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>blem-riv</name>
					<script>send('do w,out,n,n,n,w,n,w,n,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^blem-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-brooch</name>
					<script>send('do nw,sw,sw,sw,s,sw,sw,s,s,s,w,s,clearing')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-brooch$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>brooch-riv</name>
					<script>send('do out,n,n,n,e,n,ne,ne,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^brooch-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-haub</name>
					<script>send('do nw,sw,sw,sw,s,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,sw,se,s,s,s,s,s,s,s,s,sw,s,e,n,n,ne,ne,se,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-haub$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>haub-riv</name>
					<script>send('do n,n,nw,nw,sw,sw,s,s,w,n,n,n,n,n,n,n,n,n,n,n,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^haub-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-heal</name>
					<script>send('do e,e,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-heal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>heal-riv</name>
					<script>send('do s,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^heal-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-rhos</name>
					<script>send('do ne,ne,ne,ne,n,ne,nw,nw,ne,e,e,e,e,e,e,e,e,e,e,e,e,e,e,se,e,e,e,e,e,e,e,e,e,e,ne,ne')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-rhos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-loth</name>
					<script>send('do nw,sw,sw,sw,s,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,sw,se,se,se,s,s,s,s,e,ne,e,e,se,e,e,e,se,se,s,s,se,s,se,s,s,s,s,e,e,e,e,s,e,s,s,e,e,e,e,e,e,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-ado</name>
					<script>send('do nw,sw,sw,sw,s,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,sw,w,w,sw,sw,sw,sw,w,sw,sw,w,nw,w,sw,sw,nw,w,sw,sw,w,sw,sw,nw,sw,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,se,se,se,se,se,se,se,s,se,e,se,e,se,e,se,e,se,s,sw,s,se,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-riv</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,nw,w,nw,w,nw,w,nw,w,nw,n,nw,nw,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,e,e,se,e,e,ne,ne,ne,e,ne,ne,ne,ne,e,ne,e,e,ne,e,ne,ne,ne,e,e,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-aiglos</name>
					<script>send('do nw,w,sw,nw,nw,nw,sw,nw,feel behind waterfall')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-aiglos$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>aiglos-riv</name>
					<script>send('do out,se,se,se,se,ne,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^aiglos-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-gob</name>
					<script>send('do nw,sw,sw,sw,s,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,sw,se,s,s,s,s,s,s,s,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-gob$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gob-riv</name>
					<script>send('do w,n,n,n,n,n,n,n,nw,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gob-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ost-riv</name>
					<script>send('do e,ne,ne,ne,ne,ne,ne,ne,ne,ne,e,ne,ne,ne,ne,ne,e,e,e,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ost-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-ost</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,nw,w,nw,w,nw,w,nw,w,nw,n,nw,nw,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,e,se,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-ost$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ost-ado</name>
					<script>send('do w,w,w,nw,w,w,w,s,s,s,s,s,s,s,s,s,s,s,s,s,se,se,se,se,se,se,se,s,se,e,se,e,se,e,se,e,se,s,sw,s,se,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ost-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-dike</name>
					<script>send('do e,e,e,e,e,e,e,e,e,se,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,e,e,n,e,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-dike$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dike-by</name>
					<script>send('do s,s,s,s,s,s,s,w,s,s,s,s,s,s,s,s,s,s,s,s,sw,w,sw,w,w,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dike-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-ost</name>
					<script>send('do nw,sw,sw,sw,s,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,sw,w,w,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,w,w,sw,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-ost$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gob-loth</name>
					<script>send('do w,n,e,e,e,ne,e,e,se,e,e,e,se,se,s,s,se,s,se,s,s,s,s,e,e,e,e,s,e,s,s,e,e,e,e,e,e,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gob-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-gob</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,nw,w,nw,w,nw,w,nw,w,nw,n,nw,nw,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,e,e,se,e,e,ne,ne,ne,e,ne,e,se,e,ne,e,se,ne,ne,e,se,e,e,e,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-gob$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>gob-ado</name>
					<script>send('do w,w,w,w,w,w,nw,nw,w,nw,sw,sw,sw,sw,w,sw,sw,w,nw,nw,sw,nw,sw,w,sw,sw,w,s,s,s,s,s,s,s,s,s,s,s,s,s,se,se,se,se,se,se,se,s,se,e,se,e,se,e,se,e,se,s,se,s,sw,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^gob-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>riv-dru</name>
					<script>send('do nw,sw,sw,sw,s,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,s,sw,sw,w,w,sw,sw,sw,sw,w,sw,sw,w,nw,w,sw,sw,nw,w,sw,sw,w,sw,sw,nw,sw,sw,sw,s,s,s,s,s,s,s,s,s,s,s,s,s,se,se,se,se,se,se,se,s,se,e,e,e,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^riv-dru$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dru-riv</name>
					<script>send('do s,s,s,s,s,w,w,w,nw,n,nw,nw,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne,ne,ne,ne,ne,ne,ne,e,e,ne,se,se,e,ne,ne,e,se,ne,e,ne,ne,ne,e,e,ne,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne,n,ne,ne,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dru-riv$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bree-dru</name>
					<script>send('do s,se,s,s,se,s,s,s,sw,s,s,s,s,s,s,s,s,s,se,s,se,s,s,se,se,se,se,se,se,se,se,s,se,se,s,s,s,se,se,se,e,se,se,se,se,se,se,e,e,se,e,e,se,e,se,se,se,se,se,se,se,s,se,e,e,e,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bree-dru$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dru-bree</name>
					<script>send('do s,s,s,s,s,w,w,w,nw,n,nw,nw,nw,nw,nw,nw,nw,w,nw,w,w,nw,w,w,nw,nw,nw,nw,nw,nw,w,nw,nw,nw,n,n,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,n,n,nw,n,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,nw,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dru-bree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>by-dru</name>
					<script>send('do e,e,e,e,e,e,e,e,e,se,se,se,se,se,se,se,se,se,s,s,s,s,s,s,s,s,s,s,se,se,se,e,se,se,se,se,se,se,se,se,s,se,se,s,s,s,se,se,se,e,se,se,se,se,se,se,e,e,se,e,e,se,e,se,se,se,se,se,se,se,s,se,e,e,e,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^by-dru$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dru-by</name>
					<script>send('do s,s,s,s,s,w,w,w,nw,n,nw,nw,nw,nw,nw,nw,nw,w,nw,w,w,nw,w,w,nw,nw,nw,nw,nw,nw,w,nw,nw,nw,n,n,n,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,w,nw,nw,nw,w,nw,n,n,n,n,n,n,nw,nw,nw,n,n,n,nw,nw,n,nw,n,nw,w,w,w,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dru-by$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-dru</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,nw,w,nw,w,nw,n,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-dru$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dru-ado</name>
					<script>send('do s,s,s,s,s,s,se,e,se,e,se,s,sw,s,se,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dru-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dru-edo</name>
					<script>send('do s,s,s,s,s,s,se,e,se,e,se,ne,e,e,e,e,se,se,se,e,se,e,se,s,s,s,s,se,se,se,se,e,e,s,e,s,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dru-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>dru-th</name>
					<script>send('do s,s,s,s,s,e,e,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^dru-th$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>th-dru</name>
					<script>send('do w,w,w,n,n,n,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^th-dru$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-th</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,nw,n,n,w,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-th$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>th-ado</name>
					<script>send('do s,e,s,s,se,s,sw,s,se,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^th-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>th-edo</name>
					<script>send('do s,e,e,e,e,e,se,s,e,se,se,se,e,se,e,se,s,s,s,s,se,se,se,se,s,e,e,e,e,s,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^th-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-pann</name>
					<script>send('do n,e,e,ne,e,e,e,e,e,path,further,yard')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-pann$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>pann-ado</name>
					<script>send('do path,path,out,w,w,w,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^pann-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-archer</name>
					<script>send('do n,w,w,w,w,sw,sw,sw,sw,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,climb tree')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-archer$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>archer-ado</name>
					<script>send('do down,ne,ne,ne,ne,e,ne,se,e,e,e,ne,ne,se,e,e,e,ne,se,ne,se,se,e,se,se,e,ne,ne,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^archer-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-bone</name>
					<script>send('do n,w,w,w,w,sw,sw,sw,sw,sw,sw,sw,w,w,w,w,w,w,w,w,w,sw,w,w,w,w,w,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-bone$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bone-ado</name>
					<script>send('do e,e,ne,e,ne,ne,ne,ne,ne,ne,ne,ne,ne,se,se,ne,se,se,se,ne,e,e,ne,e,e,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bone-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-inn</name>
					<script>send('do s,e,s,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-inn$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>inn-ado</name>
					<script>send('do s,w,w,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^inn-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-bar</name>
					<script>send('do s,e,s,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-bar$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>bar-ado</name>
					<script>send('do w,s,w,w,n,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^bar-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-edo</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,ne,e,e,e,e,se,se,se,e,se,e,se,s,s,s,s,se,se,se,se,e,e,e,s,e,s,e,e,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-edo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-loth</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,nw,w,nw,w,nw,w,nw,w,nw,n,nw,nw,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,e,e,e,e,se,se,se,se,se,se,se,e,e,e,e,e,e,ne,e,e,se,e,e,e,se,se,s,s,se,s,se,s,s,s,s,e,e,e,e,s,e,s,s,e,e,e,e,e,e,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-loth$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-haub</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,nw,w,nw,w,nw,w,nw,w,nw,n,nw,nw,nw,nw,nw,nw,nw,n,n,n,n,n,n,n,n,n,n,n,n,n,ne,e,e,se,e,e,ne,ne,ne,e,ne,e,se,e,se,se,ne,se,e,se,e,e,e,ne,e,e,n,n,ne,ne,se,se,s,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-haub$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>haub-ado</name>
					<script>send('do n,n,nw,nw,sw,sw,s,s,w,w,sw,w,w,w,nw,sw,sw,nw,nw,w,nw,sw,w,w,sw,w,nw,sw,sw,nw,sw,w,nw,w,s,s,s,s,s,s,s,s,s,s,s,s,s,se,se,se,se,se,se,se,s,se,e,se,e,se,e,se,e,se,s,sw,s,se,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^haub-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-iford</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,ne,e,e,e,e,se,se,se')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-iford$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-treeb</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,ne,e,e,e,e,e,n,enter,e,nw')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-treeb$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-fbc</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,nw,n,ne,n,nw,w,w,w,w,s,w')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-fbc$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>fbc-ado</name>
					<script>send('do e,e,e,n,e,e,se,s,se,s,sw,s,sw,se,s,s,sw,s,sw,w,w,sw,w,w,s')</script>
					<command></command>
					<packageName></packageName>
					<regex>^fbc-ado$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>ado-igard</name>
					<script>send('do n,e,e,ne,e,e,ne,n,ne,n,n,nw,ne,n,ne,n,nw,n,ne,e,e,e,e,e,n')</script>
					<command></command>
					<packageName></packageName>
					<regex>^ado-igard$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>haub-loth</name>
					<script>send('do n,n,nw,nw,sw,sw,s,s,w,n,ne,n,n,e,e,e,ne,e,e,se,e,e,e,se,se,s,s,se,s,se,s,s,s,s,e,e,e,e,s,e,s,s,e,e,e,e,e,e,e,n,e')</script>
					<command></command>
					<packageName></packageName>
					<regex>^haub-loth$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Quests</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>CM</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Push Boulder</name>
					<script>pbcoroutine = pbcoroutine or coroutine.create(pushBoulder)
local moretocome = coroutine.resume(pbcoroutine)


if not moretocome then
  pbcoroutine = nil
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^pb$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Freebies</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Adornas freebies</name>
					<script>t2tMapper.go("anke")
if ankeTrig then killTrigger(ankeTrig) end
ankeTrig = tempRegexTrigger("^A living area\\(", function()
	send("do yard,shed,drop big diaper basket,get broom,yard,house,ask anke about baby,done")
	if doDoneTrig then killTrigger(doDoneTrig) end
	doDoneTrig = tempRegexTrigger("^Do: Commands completed.",function()
		send("do bedroom,wield broom,sweep under bed,get earring,out,sweep floor,nursery,sweep floor,drop broom,drop earring,out,yard,shed,get dirty basket,yard,get dirty basket,house,nursery,drop dirty basket,get diapers from big diaper basket into dirty basket,get big diaper basket,out,yard,shed,drop big diaper basket,yard,house,nursery,get earring,lift baby,unpin diaper,dispose of diaper,anoint sophie,place diaper on sophie,lay sophie in crib,get broom,out,yard,shed,drop broom,put earring in big diaper basket,get big diaper basket,wear big diaper basket,get big diaper basket,wear basket,get broom into big diaper basket,get broom,yard,house,gold")
	end,1)
end,1)

if goldTrig then killTrigger(goldTrig) end
goldTrig = tempRegexTrigger("^You search your pockets|You are poor as dirt|You drunkenly search and find|You are too drunk to count your gold",function()
	t2tMapper.go("adornas")
  if adoTrig then killTrigger(adoTrig) end
  adoTrig = tempRegexTrigger("^The north gate of Adornas\\(", function()
    send("do s,e,sell all from pack,sell all from basket,w,s,se,enter,w,drop basket,get saw,put saw in pack,put saw in basket,get basket,e,out,nw,e,s,get blanket,put blanket in pack,put blanket in basket,get blanket into basket,get blanket into pack,2n,sell all from pack,sell all from basket,sell saw,sell blanket,w,n,brew")
		if brewTrig then killTrigger(brewTrig) end
    brewTrig = tempRegexTrigger("^You must specify the components\\!",function()
				t2tMapper.go("adolandslide")
    end,1)
	end,1)	  
end,1)

if landslideTrig then killTrigger(landslideTrig) end
landslideTrig = tempRegexTrigger("^A landslide blocks the trail",function()
	send("do get bag into pack,get bag into basket,get bag,gold")
	if goldTrig then killTrigger(goldTrig) end
	goldTrig = tempRegexTrigger("^You search your pockets|You are poor as dirt|You drunkenly search and find|You are too drunk to count your gold",function()
		t2tMapper.go("panniers")
	end,1)
end,1)

if panniersTrigger then killTrigger(panniersTrigger) end
panniersTrigger = tempRegexTrigger("^A large yard\\(", function() 
	send("do house,search sink,get knife into pack,get knife into basket,get knife into bag,get knife,out,gold") 
	if goldTrig then killTrigger(goldTrig) end
	goldTrig = tempRegexTrigger("^You search your pockets|You are poor as dirt|You drunkenly search and find|You are too drunk to count your gold",function()
		t2tMapper.go("adoshop")
		adoShopTrig = tempRegexTrigger("^The Adornas general store\\(", function() 
			send("do sell all from pack,sell all from basket,sell all from bag,sell bag,sell knife,tag basket,wear basket")
			tempTimer(1,function() t2tMapper.go("adornas") end)
		end,1)
	end,1)
end,1)</script>
					<command></command>
					<packageName></packageName>
					<regex>^adofree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Druwaur freebies</name>
					<script>t2tMapper.go("drustab")

if druStab then killTrigger(druStab) end
druStab = tempRegexTrigger("^A sweaty and smelly stable\\(se\\)", function()
	send("do search hay,put charm in pack")
	tempRegexTrigger("^Do: Commands completed.$",function() t2tMapper.go(70195) end,1)
end,1)

if cotsTrig then killTrigger(cotsTrig) end
cotsTrig = tempRegexTrigger("^A tent of cots\\(w\\)", function()
  send("search pile")
	tempTimer(0.5,function() t2tMapper.go("druwaur") end)
end,1)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^drufree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Tharbad freebies</name>
					<script>send("do enter,move branches,trail,squeeze,say dunland,in,cubby,pick chest,bash chest,open chest,get all from chest into pack,get all from chest,out,out,gap,s,out")</script>
					<command></command>
					<packageName></packageName>
					<regex>^tharfree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Bree freebies</name>
					<script>t2tMapper.go("haysend")

if haysEnd then killTrigger(haysEnd) end
haysEnd = tempRegexTrigger("^Hay's End\\(", function()
	send("do 3n,w,enter,w,n,clean dresser,s,e,out,e,3s")
	send("do enter,e,rip bag,get ring,w,ne,n,get ring,give ring to lover,drop ring,s,sw,out")
	send("do pick flower,get flower,enter,n,give flower to girl,drop flower,10out,get pin,2nw,get pin,give pin to woman,2drop pin,2se,s,out")
	send("do enter,e,pull handle,get shovel,w,n,nw,l hole,dig hole,get bone,se,s,2ne,n,e,give bone to mutt,w,n,get spear,2s,2sw,out,gold")
	if goldTrig then killTrigger(goldTrig) end
	goldTrig = tempRegexTrigger("^You search your pockets|You are poor as dirt|You drunkenly search and find|You are too drunk to count your gold",function()
		t2tMapper.go("bluto")
	end,1)
end,1)

if blutoTrig then killTrigger(blutoTrig) end
blutoTrig = tempRegexTrigger("^The Bucklebury Weaponsmith\\(",function()
	send("do sell all,sell all from basket,sell all from pack")
	send("do 2s,get hammer,n,3w,out,2w,s,office,get oar,exit,n,2e,enter,3e,n,sell all,sell all from basket,sell all from pack")
	send("do s,2w,n,d,w,ask dudo about helping,workroom,pour flour into bowl,pour sugar into bowl,pour butter into bowl,mix bowl,mold dough,spread rolls,bake shortbread,get tray,out,give tray to dudo,e,u,s,2e,n,tag")
	if tagTrig then killTrigger(tagTrig) end
	tagTrig = tempRegexTrigger("^Tag what\\?|You are too drunk to remember tagging anything.",function()
		t2tMapper.go("oldbuck")
	end,1)
end,1)

if oldbuck then killTrigger(oldbuck) end
oldbuck = tempRegexTrigger("^Entrance to the Oldbuck House\\(",function()
	send("do open mailbox,wear all from mailbox,get pack from mailbox,put backpack in basket,put backpack in pack 2,packtag")
	if packtagTrig then killTrigger(packtagTrig) end
	packtagTrig = tempRegexTrigger("^You have no packtag set.",function()
		t2tMapper.go("bybank")
	end,1)
end,1)

if bybankTrig then killTrigger(bybankTrig) end
bybankTrig = tempRegexTrigger("^The Bank\\(",function()
	send("do deposit all")
	if doTrig then killTrigger(doTrig) end
	doTrig = tempRegexTrigger("^Do: Commands completed.", function()
		t2tMapper.go("levitate")
	end,1)
end,1)

if levitateTrig then killTrigger(levitateTrig) end
levitateTrig = tempRegexTrigger("^Outside a small farm\\(", function()
	send("do path,in,l panel,push panel,get key,out,n,unlock east door,drop key,get all key into basket,get all key into pack,e,get ladder,2w,climb ladder,get cat,se,path,brew")
	if brewTrig then killTrigger(brewTrig) end
	brewTrig = tempRegexTrigger("^You must specify the components\\!",function()
		t2tMapper.go("scaryhouse")
	end,1)
end,1)

if scaryTrig then killTrigger(scaryTrig) end
scaryTrig = tempRegexTrigger("^An abandoned house\\(out", function()
	send("do move pile,stairs,2n,pull baseboard,hole,give cat to spirit,drop cat,10w,get key,unlock chest,get gold,out,unlock crate,open crate,drop key,get condenser from crate,2s,push logs,stairs,wield")
	if wieldTrig then killTrigger(wieldTrig) end
	wieldTrig = tempRegexTrigger("^Wield what\\?",function()
		t2tMapper.go("combeshop")
	end,1)
end,1)

if combeShop then killTrigger(combeShop) end
combeShop = tempRegexTrigger("^The weapon shop\\(e\\)", function()
	send("do sell all,sell all from basket,sell all from pack")
	send("do e,2s,sw,valley,2e,se,crawl into hollow,in,dig mound")
	send("do sw,out,nw,w,2sw,w,2n,3e,n,ne,2e,search wall,push bump")
	send("do w,n,rest in bed,5w,10s,w,enter,offer help,wear cloak,get cloak into basket,get cloak into pack,out,e,12n,2e,town,ne,2n,w,sell all,sell all from basket,sell all from pack,throw")
	if throwTrig then killTrigger(throwTrig) end
	throwTrig = tempRegexTrigger("^Throw what\\?",function()
		t2tMapper.go("md")
	end,1)
end,1)

if mdTrig then killTrigger(mdTrig) end
mdTrig = tempRegexTrigger("^The Gate of Michel Delving\\(", function()
	send("do enter,4n,in,3n,move painting,s,w,n,take figurine,10out,get diamond into pack,get diamond,climb rope,s,w,n,get dagger,s,w,2n,u,open dresser,wear all from dresser,get all from dresser into basket,get all from dresser into pack,d,stand on cushion,open chest,drop jar from chest,5eat jerky,2s,w,3s,e,search shrubs,get coin into basket,get coin into pack,get coin,3s,3e,n,w,give diamond to smith,put dagger in pack,get diamond from pack,give diamond to smith,put dagger in pack,e,2s,out,fill")
	if fillTrig then killTrigger(fillTrig) end
	fillTrig = tempRegexTrigger("^Fill what from what\\?",function()
		t2tMapper.go("belshop")
	end,1)
end,1)

if belshopTrig then killTrigger(belshopTrig) end
belshopTrig = tempRegexTrigger("^The shop\\(", function()
	send("do sell all,sell all from basket,sell all from pack,empty")
	if emptyTrig then killTrigger(emptyTrig) end
	emptyTrig = tempRegexTrigger("^Empty what\\?|^Empty a pipe, you mean\\?",function()
		t2tMapper.go("wt")
	end,1)
end,1)

if wtTrig then killTrigger(wtTrig) end
wtTrig = tempRegexTrigger("^A courtyard\\(", function()
	send("do enter,u,2sw,d,e,get pen,w,u,2ne,d,out,light")
	if lightTrig then killTrigger(lightTrig) end
	lightTrig = tempRegexTrigger("^Light what\\?",function()
		t2tMapper.go("brandyhall")
	end,1)
end,1)

if brandyTrig then killTrigger(brandyTrig) end
brandyTrig = tempRegexTrigger("^The Entrance to Brandy Hall\\(", function()
	send("do n,e,get pen,give pen to scribe,drop pen,w,s,enc")
	if encTrig then killTrigger(encTrig) end
	encTrig = tempRegexTrigger("^You are [\\\w\\\s]+enc",function()
		t2tMapper.go("serpent")
	end,1)
end,1)

if serpentTrig then killTrigger(serpentTrig) end
serpentTrig = tempRegexTrigger("^A windswept beach\\(", function()
	send("do swim,climb rope,in,e,cut mattress,get gold,w,out,climb,get flag,2d,beach,skin")
	if skinTrig then killTrigger(skinTrig) end
	skinTrig = tempRegexTrigger("^Skin what\\?|You must have a knife, dagger, or cooking gear to do that.",function()
		t2tMapper.go("breebar")
		if breeBar then killTrigger(breeBar) end
		breeBar = tempRegexTrigger("^Prancing Pony common room\\(", function()
			send("do get flag,give flag to sailor,drop flag,tag flask,put flask in basket,put flask in pack,cook")
			if cookTrig then killTrigger(cookTrig) end
			cookTrig = tempRegexTrigger("^Cook what\\?",function()
				t2tMapper.go("breepipe")
			end,1)
		end,1)
	end,1)
end,1)

if breePipe then killTrigger(breePipe) end
breePipe = tempRegexTrigger("^Filthy wagon\\(out\\)", function()
	send("do wear pouch from ground,get pouch into basket,get pouch into pack,get pouch,get pipe,get leaf,pack pipe,get pipe into basket,get pipe into pack,get leaf into basket,get leaf into pack")
	if doTrig then killTrigger(doTrig) end
	doTrig = tempRegexTrigger("^Do: Commands completed.", function()
		t2tMapper.go("pipehobbit")
  end,1)
end,1)

if pipeTrig then killTrigger(pipeTrig) end
pipeTrig = tempRegexTrigger("^A campfire at the center of the settlement\\(", function()
	send("do give pipe to hobbit,get pipe into pack,get pipe into basket,pick hole door,bash hole door,hole,move mattress,out,enter,n,shake root,oak,fluff pillow,get dagger into pack,get dagger into basket,get dagger,out,s,wield")
	if wieldTrig then killTrigger(wieldTrig) end
	wieldTrig = tempRegexTrigger("^Wield what\\?",function()
		t2tMapper.go("homesteader")
	end, 1)
end,1)

if homeTrig then killTrigger(homeTrig) end
homeTrig = tempRegexTrigger("^Homesteader's house\\(out\\)", function()
	send("do offer help,out,garden,barn,get axe,put axe in basket,put axe in pack,search equipment,get pitchfork,put pitchfork in basket,put pitchfork in pack,garden,yard,house,gold")
	if goldTrig then killTrigger(goldTrig) end
	goldTrig = tempRegexTrigger("^You search your pockets|You are poor as dirt|You drunkenly search and find|You are too drunk to count your gold",function()
		t2tMapper.go("combeshop")
		if combeShop then killTrigger(combeShop) end
		combeShop = tempRegexTrigger("^The weapon shop\\(e\\)", function()
			send("do sell all,sell all from basket,sell all from pack,throw")
			if throwTrig then killTrigger(throwTrig) end
			throwTrig = tempRegexTrigger("^Throw what\\?",function()
				t2tMapper.go("bybank")
				if bybankTrig then killTrigger(bybankTrig) end
				bybankTrig = tempRegexTrigger("^The Bank\\(",function()
					send("do deposit all")
					if doTrig then killTrigger(doTrig) end
					doTrig = tempRegexTrigger("^Do: Commands completed.", function()
						t2tMapper.go("bombadil")
					end,1)
				end,1)
			end,1)
		end,1)
	end,1)
end,1)

if bombTrig then killTrigger(bombTrig) end
bombTrig = tempRegexTrigger("^A well trodden path\\(", function()
	send("do se,2e,s,dance with goldberry,get gloves,wear gloves,e,get trowel from bucket,put trowel in pack,put trowel in basket,w,stairs,bash locker,pick locker,open locker,wear all from locker,get all from locker into pack,get all from locker into basket,get rope,put rope in pack,put rope in basket,d,n,2w,nw,light")
	if wightWriting then killTrigger(wightWriting) end
	wightWriting = tempRegexTrigger("^You make out the words: ([\\\w \\\,\\\.\\\-]+)$",function() wightSong = matches[2] end,1)
	if lightTrig then killTrigger(lightTrig) end
	lightTrig = tempRegexTrigger("^Light what\\?",function()
		send("nw")
		send("n")
		send("e")
		send("e")
		if barrowTrigger then killTrigger(barrowTrigger) end
		barrowTrigger = tempRegexTrigger("^An open barrow\\(", function()
			if wightFlight then killTrigger(wightFlight) end
			wightFlight = tempRegexTrigger("^The wight is whisked away by the singing|You sing:",function() 
        t2tMapper.go("combeshop")
        if combeTrig then killTrigger(combeTrig) end
        combeTrig = tempRegexTrigger("^The weapon shop\\(",function()
          send("do sell all,sell all from pack,sell all from basket")
          tempRegexTrigger("^Do: Commands completed.",function() t2tMapper.go("lps") end,1)
        end,1)
      end,1)
			send("s")
			send("read writing")
			tempTimer(1,function() 
				send("s;push wall")
				send("get brooch into basket")
				send("get brooch into pack")
				send("wear brooch from ground")
				send("get brooch")
				send("w;push rock")
				send("w")
				send("get vest into basket")
				send("get vest into pack")
				send("wear vest from ground")
				send("get vest")
				send("open chest")
				send("e")
				send("e")
				send("s")
				send(f"sing {wightSong}")
			end)
		end,1)
	end,1)
end,1)

if lpsTrig then killTrigger(lpsTrig) end
lpsTrig = tempRegexTrigger("^In front of an abandoned cottage\\(", function()
	send("do 2n,get shield,wear shield,get quilt,put quilt in basket,put quilt in pack,e,get shirt,wear shirt,w,2s,brew")
	if brewTrig then killTrigger(brewTrig) end
	brewTrig = tempRegexTrigger("^You must specify the components\\!",function()
		t2tMapper.go("combeshop")
	end,1)
end,1)

</script>
					<command></command>
					<packageName></packageName>
					<regex>^breefree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Staddle freebies</name>
					<script>t2tMapper.go("staddlebear")
if staddleBear then killTrigger(staddleBear) end
staddleBear = tempRegexTrigger("^A child's bedroom\\(", function()
    send("do scoop bear,get bear,give bear to prisca,2drop bear,open drawers,drop jam,get jam,5eat jam,drop all jam")
    if doTrig then killTrigger(doTrig) end
    doTrig = tempRegexTrigger("^Do: Commands completed.", function()
        t2tMapper.go("falron")
    end,1)
end,1)

if falronTrig then killTrigger(falronTrig) end
falronTrig = tempRegexTrigger("^A living room\\(", function()
    send("do nw,pick north door,bash north door,n,get clay,put clay in basket,put clay in pack,get bowl,put bowl in basket,put bowl in pack,search tools,put chisel in basket,put chisel in pack,s,se,gold")
    if goldTrig then killTrigger(goldTrig) end
    goldTrig = tempRegexTrigger("^You search your pockets|You are poor as dirt|You drunkenly search and find|You are too drunk to count your gold",function()
        t2tMapper.go("staddledin")
    end,1)
end,1)

if staddledinTrig then killTrigger(staddledinTrig) end
staddledinTrig = tempRegexTrigger("^A dining room\\(", function()
    send("do bash cupboard,pick cupboard,open cupboard,get all from cupboard into basket,get all from cupboard into pack,get all from cupboard,2w,10out,kill honery,get chair,put chair in basket,put chair in pack,e,n,get vase,drop all from vase,put vase in basket,put vase in pack,s,e,tag")
    if tagTrig then killTrigger(tagTrig) end
    tagTrig = tempRegexTrigger("^Tag what\\?|You are too drunk to remember tagging anything.",function()
        t2tMapper.go("arguindel")
    end,1)
end,1)

if argTrig then killTrigger(argTrig) end
argTrig = tempRegexTrigger("^Arguindel's Trading Post\\(", function()
    send("do sell all from basket,sell all from pack,sell clay,sell bowl,sell chisel,sell plate,sell cup,sell vase,sell chair,packtag")
    if packtagTrig then killTrigger(packtagTrig) end
    packtagTrig = tempRegexTrigger("^You have no packtag set.",function()
        t2tMapper.go("staddlebrew")
    end,1)
end,1)

if staddlebrewTrig then killTrigger(staddlebrewTrig) end
staddlebrewTrig = tempRegexTrigger("^A hallway in the brewery\\(", function()
    send("do request employment,get barrel,2e,2n,2sw,nw,6w,2sw,nw,2w,sw,8w,sw,2w,sw,2w,sw,6w,nw,enter,3n,w,deliver ale to gangee,e,3s,out,10e,ne,2e,ne,n,2e,n,5e,bar,deliver ale to bando,out,5w,s,9e,s,gates,e,se,tent,deliver ale to bongo,out,s,2se,sw,2se,enter,e,s,deliver ale to lobo,n,w,out,2nw,n,2nw,n,nw,gates,n,se,2ne,e,ne,se,9e,n,deliver ale to butterbur,s,3w,2s,e,ne,n,town,ne,se,bar,deliver ale to bubba,out,nw,sw,valley,3s,2w,give note to radamal,brew")
    if brewTrig then killTrigger(brewTrig) end
    brewTrig = tempRegexTrigger("^You must specify the components\\!",function()
        t2tMapper.go("bree")
    end,1)
end,1)</script>
					<command></command>
					<packageName></packageName>
					<regex>^staddlefree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Bywater freebies</name>
					<script>t2tMapper.go("bamfurlong")
if bamfurlongTrigger then killTrigger(bamfurlongTrigger) end
bamfurlongTrigger = tempRegexTrigger("^Bamfurlong, a farm estate\\(",function() 
	send("do w,n,ask farmhand about barney,e,ask maggot about job,get seeds,e,get yoke,2w,ask farmhand about help,s,yoke barney,plough field,plant seeds,e,drop yoke,drop seeds")
	if doDoneTrigger then killTrigger(doDoneTrigger) end
	doDoneTrigger = tempRegexTrigger("^Do: Commands completed.",function () 
		t2tMapper.go("wt") 
	end, 1)
end,1)

if wtTrig then killTrigger(wtTrig) end
wtTrig = tempRegexTrigger("^A courtyard\\(", function()
	send("do enter,w,get robe,wear robe,peer in box,get shard,get box,e,out")
	if doTrig then killTrigger(doTrig) end
	doTrig = tempRegexTrigger("^Do: Commands completed.", function()
		t2tMapper.go("belshop")
	end,1)
end,1)

if belshopTrig then killTrigger(belshopTrig) end
belshopTrig = tempRegexTrigger("^The shop\\(", function()
	send("do sell all,sell all from basket,sell all from pack,gold")
	if goldTrig then killTrigger(goldTrig) end
	goldTrig = tempRegexTrigger("^You search your pockets|You are poor as dirt|You drunkenly search and find|You are too drunk to count your gold",function()
		t2tMapper.go("poker")
	end,1)
end,1)

if pokerTrig then killTrigger(pokerTrig) end
pokerTrig = tempRegexTrigger("^An elven home\\(n\\)", function()
	send("do get poker,tag")
	if tagTrig then killTrigger(tagTrig) end
	tagTrig = tempRegexTrigger("^Tag what\\?|You are too drunk to remember tagging anything.",function()
		t2tMapper.go("belshop")
		if belshopTrig then killTrigger(belshopTrig) end
		belshopTrig = tempRegexTrigger("^The shop\\(", function()
			send("do sell all,sell all from basket,sell all from pack,packtag")
			if packtagTrig then killTrigger(packtagTrig) end
			packtagTrig = tempRegexTrigger("^You have no packtag set.",function()
				t2tMapper.go("ans")
			end,1)
		end,1)
	end,1)
end,1)
		
if ansTrig then killTrigger(ansTrig) end
ansTrig = tempRegexTrigger("^A group of trees in the Twilight Hills\\(", function()
	send("do watch sparrow,woods,10u,kill shepherd,10e,get dagger from corpse,get dagger,get gold,taste mushroom,inspect underbrush,out,brew")
	if brewTrig then killTrigger(brewTrig) end
	brewTrig = tempRegexTrigger("^You must specify the components\\!",function()
		t2tMapper.go("belshop")
		belshopTrig = tempRegexTrigger("^The shop\\(", function()
			send("do sell all,sell all from basket,sell all from pack,wield")
			if wieldTrig then killTrigger(wieldTrig) end
			wieldTrig = tempRegexTrigger("^Wield what\\?",function()
				t2tMapper.go("bywater")
			end,1)
		end,1)
	end,1)
end,1)

if bywaterTrig then killTrigger(bywaterTrig) end
bywaterTrig = tempRegexTrigger("^Outside Hobbiton\\(", function()
	send("do 2n,ne,n,nw,in,n,e,n,get jam,s,2w,get knife,spread jam on bread,drop all butter knife,get all butter knife into basket,get all butter knife into pack,drop jam,get sandwich,e,give sandwich to keeper,eat sandwich,slide logs,get paper,w,give recipe to cook,e,s,out,se,s,sw,4n,ne,2n,pull coathook,wear coathook from ground,get coathook into basket,get coathook into pack,get coathook,2s,sw,6s,throw")
	if throwTrig then killTrigger(throwTrig) end
	throwTrig = tempRegexTrigger("^Throw what\\?",function()
		t2tMapper.go("belshop")
		belshopTrig = tempRegexTrigger("^The shop\\(", function()
			send("do sell all,sell all from basket,sell all from pack,packtag")
			if packtagTrig then killTrigger(packtagTrig) end
			packtagTrig = tempRegexTrigger("^You have no packtag set.",function()
				t2tMapper.go("guestroom")
			end,1)
		end,1)
	end,1)
end,1)

if guestroom then killTrigger(guestroom) end
guestroom = tempRegexTrigger("^The Guestroom\\(hall\\)", function()
	send("do open closet,wear all from closet,get all from closet into basket,get all from closet into pack,get dress,hall,e,n,l cabinets,get silverware,put silverware in basket,put silverware in pack,s,e,n,pull rug,get rug,put rug in basket,put rug in pack,s,2w,guestroom,fill")
	if fillTrig then killTrigger(fillTrig) end
	fillTrig = tempRegexTrigger("^Fill what from what\\?",function()
		t2tMapper.go("belshop")
		belshopTrig = tempRegexTrigger("^The shop\\(", function()
			send("do sell all,sell all from basket,sell all from pack,wield")
			if wieldTrig then killTrigger(wieldTrig) end
			wieldTrig = tempRegexTrigger("^Wield what\\?",function()
				t2tMapper.go("herbsatchel")
			end,1)
		end,1)
	end,1)
end,1)

if herbsatchel then killTrigger(herbsatchel) end
herbsatchel = tempRegexTrigger("^A cottage porch\\(", function()
	send("do enter,open cabinet,n,e,search shelves,d,search pile,u,w,s,get bowl from cabinet,n,e,get bowl,d,get bowl,u,give bowl to corbo,get satchel,get all into satchel,open satchel,get all from satchel into basket,put herb satchel in basket,put herb satchel in pack,w,s,out,wear satchel,empty")
	if emptyTrig then killTrigger(emptyTrig) end
	emptyTrig = tempRegexTrigger("^Empty what\\?|^Empty a pipe, you mean\\?",function()
		t2tMapper.go("babushka")
	end,1)
end,1)

if babushkaTrig then killTrigger(babushkaTrig) end
babushkaTrig = tempRegexTrigger("^A cobbled yard\\(", function()
	send("do garden,barn,search hay,wear gloves,get bucket,scoop water into bucket,out,n,drop bucket,pull weeds")
	if glovesTrig then killTrigger(glovesTrig) end
  glovesTrig = tempRegexTrigger("^You notice the damage your gloves took in all the weeding.", function() send("do get bucket,water flowers,drop bucket") end,1)
	tempRegexTrigger("^over the great results of your work.  Now to prove yourself to Babushka", function() send("do s,yard,house,drop flowers,get flowers,give flowers to babushka,yard,light") end,1)
  if failTrig then killTrigger(failTrig) end
  failTrig = tempRegexTrigger("^What are you trying to do if the weeds are gone?", function() send("do s,yard,light") end,1)
  if failTwo then killTrigger(failTwo) end
  failTwo = tempRegexTrigger("^yourself from damage by wearing some armour on your hands.", function() send("do s,yard,light") end,1)
	if failTrigThree then killTrigger(failTrigThree) end
  failTrigThree = tempRegexTrigger("^You do not feel strong enough to do such an energy consuming job.", function() send("do s,yard,light") end,1)
  if lightTrig then killTrigger(lightTrig) end
	lightTrig = tempRegexTrigger("^Light what\\?",function() 
		t2tMapper.go("maella")
	end,1)
end,1)

--if maellaTrig then killTrigger(maellaTrig) end
--maellaTrig = tempRegexTrigger("^ Maella lies in bed| Maella, the happy little hobbit",function()
--	send("do offer help,w,out,w,4n,40e,3n,34e,2s,2e,2ne,2n,7e,search,get liriope flower into basket,get liriope flower,7w,2s,2sw,2w,n,get liriope flower into basket,get liriope flower,get liriope flower from basket,give flower to taurnil,drop all flower,n,40w,25w,3s,9w,4s,e,hole,s,open cupboard,get mortar from cupboard,drop mortar,get mortar,get petals,put petals in mortar,grind petals,dump powder into kettle,drop all petals,drop all mortar,heat kettle,get teacup from cupboard,n,e,get teacup,w,s,drop all teacup,get teacup,40out,40out,40out,40out,pour tea into teacup,n,e,give cup to maella,drop cup,enc")
--	if encTrig then killTrigger(encTrig) end
--	encTrig = tempRegexTrigger("^You are [\\\w\\\s]+enc",function()
--		t2tMapper.go("annuminas")
--	end,1)
--end,1)

if maellaTrig then killTrigger(maellaTrig) end
maellaTrig = tempRegexTrigger("^ Maella lies in bed",function()
	send("do offer help,wield")
	if wieldTrig then killTrigger(wieldTrig) end
	wieldTrig = tempRegexTrigger("^Wield what\\?",function()
		t2tMapper.go("rivorchard")
	end,1)
end,1)

if maellaOut then killTrigger(maellaOut) end
maellaOut = tempRegexTrigger("^ Maella, the happy little hobbit",function()
	tempTimer(1, function() t2tMapper.go("annuminas") end)
	killTrigger(fabledTrig)
end,1)

if noFlower then killTrigger(noFlower) end
noFlower = tempRegexTrigger("^    As you try to heat the kettle with water, you fail.  Perhaps you need", function()
    send("do n,e,drop teacup,cook")
    if cookTrig then killTrigger(cookTrig) end
    cookTrig = tempRegexTrigger("^Cook what\\?",function()
        tempTimer(1,function() t2tMapper.go("annuminas") end)
        if teaTrig then killTrigger(teaTrig) end
        if fabledTrig then killTrigger(fabledTrig) end
        if maellaOut then killTrigger(maellaOut) end
        if maellaTrig then killTrigger(maellaTrig) end
    end,1)
end,1)

if fabledTrig then killTrigger(fabledTrig) end
fabledTrig = tempRegexTrigger("^The fabled gardens of Rivendell\\(", function()
	send("do search,get liriope flower into basket,get liriope flower into pack,get liriope flower,gold")
	if goldTrig then killTrigger(goldTrig) end
	goldTrig = tempRegexTrigger("^You search your pockets|You are poor as dirt|You drunkenly search and find|You are too drunk to count your gold",function()
		tempTimer(1, function() t2tMapper.go("taurnil") end)
		if taurnilTrig then killTrigger(taurnilTrig) end
		taurnilTrig = tempRegexTrigger("^ Taurnil the helpful ranger", function()
			send("do get liriope flower,get liriope flower from basket,get liriope flower from pack,give flower to taurnil,drop all flower,get all flower into satchel,get all flower into pack,tag")
			if tagTrig then killTrigger(tagTrig) end
			tagTrig = tempRegexTrigger("^Tag what\\?|You are too drunk to remember tagging anything.",function()
				t2tMapper.go("maella")
				if maellaTwo then killTrigger(maellaTwo) end
				maellaTwo = tempRegexTrigger("^ Maella lies in bed",function()
					send("do w,s,open cupboard,get mortar from cupboard,drop mortar,get mortar,get petals,put petals in mortar,grind petals,dump powder into kettle,drop all petals,drop all mortar,heat kettle,get teacup from cupboard,n,e,get teacup,w,s,drop all teacup,get teacup")
					if teaTrig then killTrigger(teaTrig) end
					teaTrig = tempRegexTrigger("^After some time, the tea is finally heated into a medicinal tea.", function()
						send("do pour tea into teacup,n,e,give cup to maella,drop cup,enc")
						if encTrig then killTrigger(encTrig) end
						encTrig = tempRegexTrigger("^You are [\\\w\\\s]+enc",function()
							t2tMapper.go("annuminas")
						end,1)
					end,1)
				end,1)
			end,1)
		end,1)
	end,1)
end,1)

if annumTrig then killTrigger(annumTrig) end
annumTrig = tempRegexTrigger("^The Ruins of Annúminas\\(", function()
	send("do enter,e,get knife,sheath knife,untag all knife,tag knife,w,4n,e,get fork,w,2s,nw,w,nw,push brick,push right candlestick,get gems,get gems into pack,se,e,nw,n,rummage through wreckage,drink vial,drop vial,s,se,se,2s,out,skin")
	if skinTrig then killTrigger(skinTrig) end
	skinTrig = tempRegexTrigger("^Skin what\\?|You must have a knife, dagger, or cooking gear to do that.",function()
		t2tMapper.go("belshop")
		belshopTrig = tempRegexTrigger("^The shop\\(", function()
			send("do sell all,sell all from basket,sell all from pack")
		end,1)
	end,1)
end,1)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^byfree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Rivendell freebies</name>
					<script>send("do 2w,2sw,4nw,n,feel behind waterfall,open chest,get all from chest,out,s,4se,2ne,2e")
send("do 2w,2sw,s,2sw,16w,5n,encampment,get dagger,sheath dagger,out,w,encampment,get cloak,wear cloak,get pan,put pan in basket,put pan in pack,out,5s,17e,path,e,porch,enter,s,get vase,put vase in basket,put vase in pack,n,out,w,2path,2ne,n,2ne,2e")</script>
					<command></command>
					<packageName></packageName>
					<regex>^rivfree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Rhosgobel freebies</name>
					<script>send("do search,get gear,wear gear")
tempTimer(1,function() t2tMapper.go("frams") end)

if framsTrig then killTrigger(framsTrig) end
framsTrig = tempRegexTrigger("^Entrance to Framsburg\\(", function()
	send("do e,2n,path,house,light crystal,n,l cup,tip cup,get key,open box,get cheese from box,s,unlock west door,w,u,get cheese,offer cheese to rat,drop all cheese,10out,get spoon,d,e,out,drop key,get spoon,give spoon to man,drop spoon,extinguish crystal,path,2s,w")
	if doTrig then killTrigger(doTrig) end
	doTrig = tempRegexTrigger("^Do: Commands completed.", function()
		t2tMapper.go("msh")
	end,1)
end,1)

if mshTrig then killTrigger(mshTrig) end
mshTrig = tempRegexTrigger("^Near a cave opening\\(", function()
	send("do light crystal,nw,2n,get hide,put hide in basket,put hide in pack,2s,se,extinguish crystal")
	if doTrig then killTrigger(doTrig) end
	doTrig = tempRegexTrigger("^Do: Commands completed.", function()
		t2tMapper.go("jarlnoth")
	end,1)
end,1)

if jarlTrig then killTrigger(jarlTrig) end
jarlTrig = tempRegexTrigger("^Jarlnoth's house\\(",function()
	send("do s,ne,wield knife,cut nightshade")
	if nightTrig then killTrigger(nightTrig) end
	nightTrig = tempRegexTrigger("^You carefully cut off a small piece of nightshade.",function()
		send("do sw,get string,w,get string,build trap,e,w,l rabbit")
		if rabbitTrig then killTrigger(rabbitTrig) end
		rabbitTrig = tempRegexTrigger("^ A small rabbit trapped in a snare", function()
			send("do wield knife,kill rabbit")
			if rabbitDeath then killTrigger(rabbitDeath) end
			rabbitDeath = tempRegexTrigger("^You killed", function()
				send("do skin corpse,drop pelt,attach pelt to string,get pelt into pack,get pelt into basket,get corpse,doctor corpse with nightshade,drop nightshade,get meat,cave,get meat,feed wolf with meat,2drop meat")
			end,1)
      killTrigger(noRabbit)
		end,1)
		if noRabbit then killTrigger(noRabbit) end
		noRabbit = tempRegexTrigger("^You don't see that here.", function()
			send("do e,n,drop nghtshade,brew")
			if brewTrig then killTrigger(brewTrig) end
			brewTrig = tempRegexTrigger("^You must specify the components\\!",function()
				t2tMapper.go("ess")
				if rabbitTrig then killTrigger(rabbitTrig) end
			end,1)
		end,1)
	end,1)
	if wolfTrig then killTrigger(wolfTrig) end
	wolfTrig = tempRegexTrigger("^pack leader but pieces, but you search through and find a fang.", function()
		tempTimer(2,function() send("do skin corpse,eat corpse,drop pelt,attach pelt to string,get pelt into basket,get pelt into pack,get fang from corpse,get fang,out,e,n,get fang,get fang from pack,give fang to hermit,2drop fang,gold") end)
		if goldTrig then killTrigger(goldTrig) end
		goldTrig = tempRegexTrigger("^You search your pockets|You are poor as dirt|You drunkenly search and find|You are too drunk to count your gold!",function() 
			send("do put staff in basket,put staff in pack")
			t2tMapper.go("ess")
		end,1)
	end,1)
end,1)


if essTrig then killTrigger(essTrig) end
essTrig = tempRegexTrigger("^A Mossy Tree\\(",function()
	send("do w,move ivy,15out,search basket,get weed into basket,get simbelmyne into basket,get weed into pack,get simbelmyne into pack,get berry,u,tag")
	if tagTrig then killTrigger(tagTrig) end
	tagTrig = tempRegexTrigger("^Tag what\\?|You are too drunk to remember tagging anything.",function()
		t2tMapper.go("fsl")
	end,1)
end,1)

if fslTrig then killTrigger(fslTrig) end
fslTrig = tempRegexTrigger("^A small clearing\\(", function()
	send("do eat berry,privy,push walls,search,search filth,get bracelet into basket,get bracelet into pack,get bracelet,wear all,climb out,out,cabin,get shield,n,40out,wear shield,search bench,get pin,put pin in basket,put pin in pack,wear pin,s,out,cellar,pry box,get wine,drink wine,drop bottle,out,20out,pick zucchini,eat zucchini,drop zucchini,packtag")
	if packtagTrig then killTrigger(packtagTrig) end
	packtagTrig = tempRegexTrigger("^You have no packtag set.",function()
		t2tMapper.go("thranshop")
	end,1)
end,1)</script>
					<command></command>
					<packageName></packageName>
					<regex>^rhosfree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Thranduils Freebies</name>
					<script>send("do 4n,6e,enter,n,get stone,put stone in basket,put stone in pack,s,out,6w,4s,stairs,terrace,gates,knock on gates,2deeper,w,nw,n,nw,w,2sw,e,sell all,sell all from pack,w,sw,se,e,e,ne,se,e,3out,terrace,stairs,bridge,throw")

if throwTrig then killTrigger(throwTrig) end
throwTrig = tempRegexTrigger("^Throw what\\?",function()
	send("do 3s,6w,enter,accompany elf,get brooch,ask elf about proof,accompany elf,4n,take gold,4s,drop all brooch,out,4n,6e,3n,3n,w,path,2enter,shake shelf,get bow into pack,get bow,sling bow,get large key,unlock bedroom door with large key,bedroom,grab key from table,2drop large key,move rug,get large key,unlock door with large key,out,fill")
end,1)

if fillTrig then killTrigger(fillTrig) end
fillTrig = tempRegexTrigger("^Fill what from what\\?",function()
	send("do unlock out door with large key,out,drop large key,enter,dig through firewood,unlock hatch door with red key,drop red key,hatch,l barrels,lift lids,rummage through junk,sheath knife,u,out,stack boxes,climb boxes,grab hammer,climb down,get hammer,out,e,3s,stairs,terrace,gates,knock on gates,2deeper,w,nw,n,nw,w,2sw,e,sell all,sell all from pack,w,sw,se,e,e,ne,se,e,3out,terrace,stairs,bridge,empty")
end,1)

if emptyTrig then killTrigger(emptyTrig) end
emptyTrig = tempRegexTrigger("^Empty what\\?|^Empty a pipe, you mean\\?",function()
	t2tMapper.go("dalebank")
end,1)

if daleBank then killTrigger(daleBank) end
daleBank = tempRegexTrigger("^A fortified bank\\(s\\)", function()
	send("do s,3e,s,3w,touch fungus,get jewel,3e,s,w,l case,get jewel,e,10out,w,10out,show jewel to jeweler,put gem in basket,put gem in pack,e,2n,3w,n,wield")
	if wieldTrig then killTrigger(wieldTrig) end
	wieldTrig = tempRegexTrigger("^Wield what\\?",function()
		t2tMapper.go("thranmine")
	end,1)
end,1)

if thranMineTrig then killTrigger(thranMineTrig) end
thranMineTrig = tempRegexTrigger("^River edge\\(u\\)", function()
	send("do wade to boulder,climb into tunnel,light crystal,n,u,2n,w,15out,search pile,get axe,e,s,ne,15out,search dung,get head,exchange handles,get head,sw,s,d,s,extinguish crystal,boulder,skin")
	if skinTrig then killTrigger(skinTrig) end
	skinTrig = tempRegexTrigger("^Skin what\\?|You must have a knife, dagger, or cooking gear to do that.",function()
		tempTimer(1,function() t2tMapper.go("thranshop") end)
	end,1)
end,1)</script>
					<command></command>
					<packageName></packageName>
					<regex>^thranfree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>erebfree1</name>
					<script>send("do unlock door with jeweled key,light crystal,n,ne,nw,3n,w,2d,2e,se,2d,3n,creep through hole,w,10out,search pile,get nugget,put nugget in basket,put nugget in pack,e,creep through hole,3s,nw,e,s,2d,se,s,se,2d,nw,e,n,nw,2d,ne,n,w,sw,s,sw,w,scramble over boulder,2s,l east wall,l crack,wield pick,hack east wall,get diamond into basket,get diamond into pack,2n,2e,ne,n,ne,e,s,sw,2u,se,ne,pry chunk,get pick,get nugget,put nugget in basket,put nugget in pack,sw,nw,2d,ne,e,drop nugget,pry sword,get sword,w,n,w,ne,4d,w,sell pick,sell sword,drop pick,e,4u,sw,e,s,e,get nugget,put nugget in basket,put nugget in pack,w,n,w,sw,s,sw,w,n,get nugget,put nugget in basket,put nugget in pack,s,e,ne,n,ne,e,2s,get gold nugget from basket,get gold nugget from pack,give gold nugget to smith,10out,get coin,put coin in basket,put coin in pack,get gold nugget from basket,get gold nugget from pack,give gold nugget to smith,10out,get coin,put coin in basket,put coin in pack,get silver nugget from basket,get silver nugget from pack,give silver nugget to smith,10out,get arrow,put arrow in basket,put arrow in pack,n,sw,2u,se,s,w,se,2u,nw,n,nw,2u,n,w,se,2u,nw,2w,2u,e,3s,se,sw,extinguish crystal,unlock door with jeweled key,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^erebfree1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>erebfree2</name>
					<script>send("do unlock door with jeweled key,light crystal,n,ne,nw,3n,w,2d,2e,se,2d,nw,n,reach crate,break crate,get bag,put bag in basket,put bag in pack,s,se,2u,nw,2w,2u,e,3s,se,sw,extinguish crystal,unlock door with jeweled key,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^erebfree2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>erebfree3</name>
					<script>send("do unlock door with jeweled key,n,ne,nw,3n,w,get lantern,put lantern in basket,put lantern in pack,2d,get lantern,put lantern in basket,put lantern in pack,2e,se,2d,get lantern,put lantern in basket,put lantern in pack,nw,e,s,2d,get lantern,put lantern in basket,put lantern in pack,se,s,se,2d,get lantern,put lantern in basket,put lantern in pack,2u,nw,n,nw,2u,n,w,se,2u,nw,2w,2u,e,3s,se,sw,unlock door with jeweled key,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^erebfree3$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>erebfree4</name>
					<script>send("do unlock door with jeweled key,light crystal,n,ne,nw,3n,w,2d,2e,se,2d,nw,e,s,2d,n,nw,n,wear all from ground,get all into basket,get all into pack,get all,s,se,s,2u,n,w,se,2u,nw,2w,2u,e,3s,se,sw,extinguish crystal,unlock door with jeweled key,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^erebfree4$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>erebfree5</name>
					<script>send("do unlock door with jeweled key,light crystal,n,ne,nw,3n,w,2d,2e,se,2d,nw,e,s,2d,se,s,se,2d,nw,e,nw,bash desk,pick desk,open desk,get coin from desk,put coin in basket,put coin in pack,se,w,se,2u,nw,n,nw,2u,n,w,se,2u,nw,2w,2u,e,3s,se,sw,extinguish crystal,unlock door with jeweled key,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^erebfree5$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>erebfree6</name>
					<script>send("do unlock north door with jeweled key,n,light crystal,ne,nw,2n,e,loot diamond,get diamond into basket,get diamond into pack,get diamond,chip bench,get all ruby into basket,get all ruby into pack,w,2n,get all pail into pack,4s,se,sw,unlock door with jeweled key,extinguish crystal,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^erebfree6$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Esgaroth freebies</name>
					<script>if moveDoorFail then killTrigger(moveDoorFail) end
moveDoorFail = tempRegexTrigger("^You struggle and manage to close the door.$", function() send("move door") end,1)

t2tMapper.go("barbed")

if merchTrig then killTrigger(merchTrig) end
merchTrig = tempRegexTrigger("^Merchant's Lane\\(n, w and s\\)|Merchant's Lane\\(n, s and w\\)|Merchant's Lane\\(w, n and s\\)|Merchant's Lane\\(w, s and n\\)|Merchant's Lane\\(s, w and n\\)|Merchant's Lane\\(s, n and w\\)", function() 
	send("move door")
	if moveDoorSuccess then killTrigger(moveDoorSuccess) end
	moveDoorSuccess = tempRegexTrigger("^You struggle about and manage to move the door open.",function()
		send("w")
		send("do search storage barrel,get all arrow into pack")
    send("e")
		tempTimer(1,function() t2tMapper.go("esgaweap") end)
  end,1)
end,1)

if esgaWeap then killTrigger(esgaWeap) end
esgaWeap = tempRegexTrigger("^A bare weaponry shop\\(e\\)", function()
  send("do sell all barbed arrow,sell all arrow from pack,gold")
  goldTrig = tempRegexTrigger("^You search your pockets|You are poor as dirt|You drunkenly search and find|You are too drunk to count your gold",function()
    t2tMapper.go("esgaroth")
  end,1)
end,1)

if esgaTrig then killTrigger(esgaTrig) end
esgaTrig = tempRegexTrigger("^Before the Great Bridge of Laketown\\(", function()
  tempTimer(1, function() send("do s,5search,put sapphire in pack,get sapphire into pack,n") end)
end,1)</script>
					<command></command>
					<packageName></packageName>
					<regex>^esgafree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Loth freebies</name>
					<script>t2tMapper.go("ofearia")
if ofeariaTrigger then killTrigger(ofeariaTrigger) end
ofeariaTrigger = tempRegexTrigger("^The captain's room of Eressëa", function()
	send("do look under dresses,get cloak into pack,get cloak into basket,get cloak,wear all,get hairpin,climb up,deck,fore,fore,pry gem with hairpin,get gem into pack,get gem into basket,put hairpin in pack,put hairpin in basket,aft,aft,helm,enter hatch,tag")
	if tagTrig then killTrigger(tagTrig) end
	tagTrig = tempRegexTrigger("^Tag what\\?|You are too drunk to remember tagging anything.",function()
		t2tMapper.go("loth")
	end,1)
end,1)

if lothTrig then killTrigger(lothTrig) end
lothTrig = tempRegexTrigger("^Cerin Amroth\\(", function()
	send("do w,4n,4w,search trenches,get ring,put ring in basket,put ring in pack,wear ring,e,n,get ladle,put ladle in basket,put ladle in pack,s,e,n,s,2e,5s,cave,5e,n,2e,2u,out,d,2w,s,5e,3s,w,3u,nw,search pile,get shield,wear shield,se,3d,e,3n,2w,n,u,search hay,get nugget,d,drop nugget,get nugget,give nugget to blacksmith,drop nugget,put charm in pack,put charm in basket,wear charm,s,3w,3s,sw,u,unlock armoury door with a small steel key,pick armoury door,armoury,get bow,sling blow,wear all from ground,get all from ground into pack,get all,out,d,ne,4n,2e,u,hole,2d,2w,s,5w,out,n,e")
end,1)</script>
					<command></command>
					<packageName></packageName>
					<regex>^lothfree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Edoras freebies</name>
					<script>tempTimer(1,function()
  if map.currentRoom == 69818 then
	 send("do 3s,w,2n,s,n,s,n,s,n,s,n,s,n,s,n,s,n,s,n,s,2n,s,get spear,2n,light crystal,trigger a little cleaner todo push left brick,l left brick,trigger a little cleaner todo push middle brick,l middle brick,trigger a little cleaner todo push right brick,l right brick,trigger off,out,se,bash chest,pick chest,open chest,get all from chest,twist rack,climb out,extinguish crystal,2s,e,u,2s,2e,d,w,n,s,w,s,get stool,n,e,n,drop stool,stand on stool,dust cupboard,get key,climb down,unlock cupboard with sturdy iron key,drop key,open cupboard,get all from cupboard into pack,get all from cupboard,wear all,s,e,2u,2w,bash chest,pick chest,open chest,get all from chest into pack,get all from chest into basket,get all from chest,2e,d,2w,2n,d,3w,s,weed street,get flower into basket,get flower into pack,n,3e,3n,empty")
  end
end)

if emptyTrig then killTrigger(emptyTrig) end
emptyTrig = tempRegexTrigger("^Empty what\\?|^Empty a pipe, you mean\\?",function()
	t2tMapper.go("megshop")
end,1)

if megTrig then killTrigger(megTrig) end
megTrig = tempRegexTrigger("^General store\\(e\\)", function()
	send("do sell all,sell all from pack,gold")
	if goldTrig then killTrigger(goldTrig) end
	goldTrig = tempRegexTrigger("^You search your pockets|You are poor as dirt|You drunkenly search and find|You are too drunk to count your gold",function()
		t2tMapper.go("destroyedcaravan")
	end,1)
end,1)

if destTrig then killTrigger(destTrig) end
destTrig = tempRegexTrigger("^A destroyed caravan\\(", function()
	send("do light crystal,accountant wagon,move corpse,pull cloth,get cloth,out,second wagon,pull dagger with cloth,drop all cloth,out,crawl under wagon,pull shovel,get shovel,out,accountant wagon,get shovel,out,bury corpses with shovel,accountant wagon,extinguish crystal,give shovel to man,drop shovel,40e,wear all from corpse,get gold from corpse,get sheets from corpse into basket,get sheets from corpse into pack,out,search for trail,out,brew")
	if brewTrig then killTrigger(brewTrig) end
	brewTrig = tempRegexTrigger("^You must specify the components\\!",function()
		tempTimer(2, function() send("s") end)
		tempTimer(2, function() send("s") end)
		tempTimer(2, function() send("n") end)
		tempTimer(2, function() send("n") end)
		tempTimer(2, function() send("sheath dagger") end)
		tempTimer(4, function() t2tMapper.go("woses") end)
	end,1)
end,1)

if wosesTrig then killTrigger(wosesTrig) end
wosesTrig = tempRegexTrigger("^Woses village\\(", function()
	send("do forest,meditate,get statue into pack,get statue into basket,get statue,get knife into pack,get knife into basket,get knife,village,packtag")
	if packtagTrig then killTrigger(packtagTrig) end
	packtagTrig = tempRegexTrigger("^You have no packtag set.",function()
		t2tMapper.go("megshop")
		if megTrig then killTrigger(megTrig) end
		megTrig = tempRegexTrigger("^General store\\(e\\)", function()
			send("do sell all,sell all from pack,gold")
			if goldTrig then killTrigger(goldTrig) end
			goldTrig = tempRegexTrigger("^You search your pockets|You are poor as dirt|You drunkenly search and find|You are too drunk to count your gold",function()
				t2tMapper.go("wmd")
			end,1)
		end,1)
	end,1)
end,1)

if wmdTrig then killTrigger(wmdTrig) end
wmdTrig = tempRegexTrigger("^A hollow in the mountains\\(", function()
	send("do w,2n,climb rocks,get dagger,2d,u,2s,e,sheath dagger,throw")
	if throwTrig then killTrigger(throwTrig) end
	throwTrig = tempRegexTrigger("^Throw what\\?",function()
		t2tMapper.go("metalflask")
	end,1)
end,1)

if mfTrig then killTrigger(mfTrig) end
mfTrig = tempRegexTrigger("^A trampled path\\(", function()
	send("do w,nw,10out,search pile,se,e,fill")
	if fillTrig then killTrigger(fillTrig) end
	fillTrig = tempRegexTrigger("^Fill what from what\\?",function()
		t2tMapper.go("edoras")
	end,1)
end,1)</script>
					<command></command>
					<packageName></packageName>
					<regex>^edofree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>mt freebies</name>
					<script>send("do 5n,3nw,2n,stairs,ladder,search bedclothes,get key,d,get key,unlock locker with key,drop all tiny golden key,open locker,get all from locker,wear ring,stairs,2s,3se,5s,4s,w,s,search room,get ring from corpse,wear ring,n,e,s,sw,sw,gate,4ne,6n,nw,pull out bench,move bench,stand on bench,get quiver,wear quiver,se,2n,w,get grapes,20eat grape,drop branch,drop grapes,e,4nw,gate,2se,3s,e,sell exquisite emerald and diamond ring,sell guild ring,sell quiver,w,s,3sw,2w,3nw,n,distract guard,5n,w,open drawers,wear gloves,get all gloves into pack,2e,get candelabra,clean candelabra,w,6s,2se,ne,pick enter door,enter,2e,n,l under pillows,get blank,s,2w,out,sw,se,2e,3ne,n,e,sell gloves,sell candelabra,sell blank,w,s,2sw,gate,ne,n,3n,nw,gate,se,2s,2e,slide table,lift rug,search boxes,get blade,2w,sw,gate,nw,2ne,2n,2nw,2w,2sw,2e,search coffins,get kit,2w,2ne,2e,2se,s,gate,w,sw,3e,ne,2e,dispatch pigeon to iorlas,2w,sw,3w,ne,e,gate,s,sw,se,gate,ne,2n,nw,gate,se,3s,s,sw,gate,2ne,n,e,sell kit,sell blade,w,n,2n,nw,nw,gate,4se,7s,4sw,gate,2ne,5n",false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^mtfree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Pelargir freebies</name>
					<script>send("do s,search ledge,get key,e,get key,unlock chest with silver key,2drop key,bash chest,pick chest,open chest,get goblet from chest,put goblet in basket,put goblet in pack,w,n")
send("do s,w,stand on stool,get athelas,give athelas to maiden,drop all athelas,get all athelas into basket,get all athelas into pack,e,n")
send("do gate,stables,u,move hay,rifle through pocket,get shift,put shift in pack,put shift in basket,get shift into pack,get shift into basket,wear shift,get ring,put ring in basket,put ring in pack,get ring into pack,get ring into basket,wear ring,d,out,gate")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^pelfree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>breemeal</name>
					<script>send("do 2s,e,9s,6e,drop all,path,house,get rope,ask wife about chores,ask wife about help,offer help,out,garden,barn,drop rope,garden,yard,get bucket,draw water,get bucket,garden,barn,pour water into troughs,drop bucket,get axe,chop wood,drop axe,search equipment,get pitchfork,pitch hay,drop pitchfork,garden,pull weeds,barn,get rope,get board,make swing,garden,tree,tie swing,get rake,rake leaves,drop rake,garden,yard,house,get meal,out,path,get all,wear all,get all,wear all,get all,wear all,6w,9n,1w,2n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^breemeal$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>leggings</name>
					<script>send("do s,w,s,get stool,n,e,n,drop stool,stand on stool,dust cupboard,get key,climb down,unlock cupboard with key,drop key,open cupboard,get all from cupboard into pack,get all from cupboard",false)</script>
					<command></command>
					<packageName></packageName>
					<regex>^leggings$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>fixme</name>
					<script>if thranMineTrig then killTrigger(thranMineTrig) end
thranMineTrig = tempRegexTrigger("^River edge\\(u\\)", function()
	send("do wade to boulder,climb into tunnel,light crystal,n,u,2n,w,15out,search pile,get axe,e,s,ne,15out,search dung,get head,exchange handles,get head,sw,s,d,s,extinguish crystal,boulder,skin")
	if skinTrig then killTrigger(skinTrig) end
	skinTrig = tempRegexTrigger("^Skin what\\?|You must have a knife, dagger, or cooking gear to do that.",function()
		tempTimer(1,function() t2tMapper.go("thrans") end)
	end,1)
end,1)</script>
					<command></command>
					<packageName></packageName>
					<regex>^fixme$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Dol Amroth freebies</name>
					<script>send("do 2w,s,3w,e,s,10out,search locker 3,n,2e,n,2e")</script>
					<command></command>
					<packageName></packageName>
					<regex>^dafree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Linhir permit</name>
					<script>send("do city,4s,enter,e,n,request permit,get permit,u,give permit to secretary,get permit,drop permit,d,s,w,out,4n,out")</script>
					<command></command>
					<packageName></packageName>
					<regex>^permit$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>erebfree all</name>
					<script>send("do unlock door with jeweled key,light crystal,n,ne,nw,2n,e,loot diamond,get diamond into pack,get diamond,put diamond in pack,chip bench,get all ruby into pack,put all gem in pack,w,2n,get all pail into pack,s,w,get lantern into pack,2d,get lantern into pack,2e,se,2d,get lantern into pack,3n,creep through hole,w,10out,search pile,get nugget into pack,e,creep through hole,3s,nw,n,reach crate,break crate,get bag,put bag in pack,s,e,s,2d,get lantern into pack,n,nw,n,wear all from ground,get all into pack,get all,s,se,s,se,s,se,2d,get lantern into pack,nw,e,nw,bash desk,pick desk,open desk,get coin from desk,put coin in pack,se,n,ne,pry chunk,get pick,get nugget,put nugget in pack,sw,nw,2d,ne,n,w,sw,s,sw,w,n,get nugget,put nugget in pack,s,scramble over boulder,2s,wield pick,hack east wall,get diamond into pack,2n,2e,ne,n,ne,e,s,e,pry sword,get sword,w,n,w,ne,4d,w,sell pick,sell sword,drop pick,e,4u,sw,e,2s,get gold nugget from pack,give gold nugget to smith,15out,get coin,put coin in pack,get gold nugget from pack,give gold nugget to smith,15out,get coin,put coin in pack,get silver nugget from pack,give silver nugget to smith,15out,get arrow,put arrow in pack,n,sw,2u,se,s,w,se,2u,nw,n,nw,2u,n,w,se,2u,nw,2w,2u,e,3s,se,sw,extinguish crystal,unlock door with jeweled key,s")</script>
					<command></command>
					<packageName></packageName>
					<regex>^erebfree$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Azrakadar Cargo</name>
					<script>send("do 4s,port,ship,offer help,d,examine cargo,i")

if barrelTrig then killTrigger(barrelTrig) end
barrelTrig = tempRegexTrigger("^ A barrel of grog", function()
	send("do u,port,town,sw,give barrel to Anjublak,ne,port,ship,d,examine cargo,i")
end,1)

if paperTrig then killTrigger(paperTrig) end
paperTrig = tempRegexTrigger("^ A small chest of papers", function()
	send("do u,port,town,e,n,give chest to Overseer,s,w,port,ship,d,examine cargo,i")
end,1)

if toolsTrig then killTrigger(toolsTrig) end
toolsTrig = tempRegexTrigger("^ A small chest of tools", function()
	send("do u,port,cabin,personal,give tools to portmaster,cabin,out,ship,d,examine cargo,i")
end,1)

if bonesTrig then killTrigger(bonesTrig) end
bonesTrig = tempRegexTrigger("^ A small bag of bones", function()
	send("do u,port,s,give bones to Morgan,n,ship,d,examine cargo,i")
end,1)

if shopTrig then killTrigger(shopTrig) end
shopTrig = tempRegexTrigger("^ A crate of shopkeeper supplies", function()
	send("do u,port, town,n,w,n,give supplies to Amil,s,e,s,port,ship,d,examine cargo,i")
end,1)

if memoTrig then killTrigger(memoTrig) end
memoTrig = tempRegexTrigger("^ A crate of memorabilia", function()
	send("do u,port,town,give crate to retired corsair,port,ship,d,examine cargo,i")
end,1)

if sortedTrig then killTrigger(sortedTrig) end
sortedTrig = tempRegexTrigger("^The cargo has already been sorted through.", function()
	send("do up,ask supervisor about reward,port,town,4n")
	if barrelTrig then killTrigger(barrelTrig) end
	if paperTrig then killTrigger(paperTrig) end
	if toolsTrig then killTrigger(toolsTrig) end
	if bonesTrig then killTrigger(bonesTrig) end
	if shopTrig then killTrigger(shopTrig) end
	if memoTrig then killTrigger(memoTrig) end
end,1)</script>
					<command></command>
					<packageName></packageName>
					<regex>^azkcargo$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Telshar Staff</name>
					<script>send("do ne,4n,2w,get paper,gate,show paper,drop paper,enter,office,n,give staff to tezar,20out,s,foyer,out,gate,e,s,sw,give note to rider,ne,e,3s,sw")</script>
					<command></command>
					<packageName></packageName>
					<regex>^telstaff$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Ost-in-edhil</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Start ring prep</name>
					<script>send("do search ashes,drop mould")
send("do n,get coal,s,drop coal,n,get coal,s,drop coal,n,get coal,s")
send("do place coal in middle block,draw sword,crush coal,store sword")
send("do get coal,place coal in middle block,draw sword,crush coal,store sword")
send("do get coal,place coal in middle block,draw sword,crush coal,store sword")
send("do n,search rubble,get hammer,get tongs,s,drop hammer,drop tongs")
send("do n,look west wall,examine west wall,tear down web,w,get crucible,e,s,drop crucible")
send("do n,w,get bowl,fill bowl,e,s,fill trough,drop bowl")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ring1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Start ring forging</name>
					<script>tempRegexTrigger("^    Suddenly, fresh air starts coming from the hall.  The draft is strong", function()
	send("do get nugget into crucible,get metal into crucible,get ingot into crucible,get ring into crucible,get crucible,place crucible in forge")
end,1)
tempTimer(0.5, function() send("light forge") end)</script>
					<command></command>
					<packageName></packageName>
					<regex>^ring2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Finish ring</name>
					<script>send("do quench ring, polish ring, release ring")</script>
					<command></command>
					<packageName></packageName>
					<regex>^ring3$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Silver Flask</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Flask1</name>
					<script>send("do sweep pile,d,2rummage under table,get pouch")</script>
					<command></command>
					<packageName></packageName>
					<regex>^flask1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Flask2</name>
					<script>send("do search alcove,get bowl,dump pouch into bowl,get recipe")</script>
					<command></command>
					<packageName></packageName>
					<regex>^flask2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Flask3</name>
					<script>send("do drop page,clean wound,get flower from pouch into bowl,get wine from pack,pour wine into bowl,mix bowl,get paste from bowl,apply paste to horse,drop bowl")</script>
					<command></command>
					<packageName></packageName>
					<regex>^flask3$</regex>
				</Alias>
			</AliasGroup>
			<Alias isActive="yes" isFolder="no">
				<name>ssquest</name>
				<script>send("do put sword in baldric,search explosives crate")
expandAlias(".s3w6n3e")
send("n")
send("order torched arrow")
expandAlias(".s4e")
send("n")
send("do drench drapes with oil,ignite arrow,torch drapes")
send("s")
send("w")
expandAlias(".6s")
expandAlias(".3w")
send("n")
send("back")
send("do 'The Dark Lord's Breath,'The Dark Lord's Teeth,'The Dark Lord's Eyes,'The Dark Lord's Glory,'The Dark Lord's Mercy,'The Dark Lord's Knees,'The Dark Lord's Might")
send("out")
send("s")
expandAlias(".2w")
send("n")
send("w")
if ssQuestTrig then killTrigger(ssQuestTrig) end
ssQuestTrig = tempRegexTrigger("^Do: Commands completed.", function() expandAlias("map me") end,1)</script>
				<command></command>
				<packageName></packageName>
				<regex>^ssquest$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>sspass</name>
				<script></script>
				<command>do 'The Dark Lord's Breath,'The Dark Lord's Teeth,'The Dark Lord's Eyes,'The Dark Lord's Glory,'The Dark Lord's Mercy,'The Dark Lord's Knees,'The Dark Lord's Might</command>
				<packageName></packageName>
				<regex>^sspass$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Beautiful Silvan Longsword</name>
				<script>go("bsl")
send("read diary",false)
</script>
				<command></command>
				<packageName></packageName>
				<regex>^bsl$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Beautiful Silvan Longsword 2</name>
				<script>go("bsl")
send("report")</script>
				<command></command>
				<packageName></packageName>
				<regex>^bsl2$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>thranjail</name>
				<script>send("push rock;call guard;beg for mercy;ask guard about food;knock on door;ask guard about pillow")</script>
				<command></command>
				<packageName></packageName>
				<regex>^thranjail$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>srs</name>
				<script>send("say rauko ar endor;say elebereth ar rauko;say ehtele rauko ar endor;say demon wither in eru's light;say gnarsh trakt vino eru;say gimbutuk rauko tel;say matock bantul kych")</script>
				<command></command>
				<packageName></packageName>
				<regex>^srs$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>pann1</name>
				<script>t2tMapper.go("panniers")
</script>
				<command></command>
				<packageName></packageName>
				<regex>^pann1$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>pann3</name>
				<script>send("unlatch gate;lead horse;gate;barn;e")</script>
				<command></command>
				<packageName></packageName>
				<regex>^pann3$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>pann2</name>
				<script>send("get bucket;barn;further;e;fill bucket with oats;out;out;unlatch gate;gate;latch gate;tame horse")</script>
				<command></command>
				<packageName></packageName>
				<regex>^pann2$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>stallion</name>
				<script>send("do 3n,3w,yard,stables,u,move hay,climb through window,climb down,get dress,climb up,leap through window,give dress to laina,d,out,fields,whistle stallion,lead horse,3e,3s")</script>
				<command></command>
				<packageName></packageName>
				<regex>^stallion$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>fatty</name>
				<script>send("do 3w,4s,2se,2e,ne,open shutters,climb through east window,n,stable,get oats,stall,3feed oats to fatty,2 out,s,climb through window,sw,2w,2nw,4n,3e")</script>
				<command></command>
				<packageName></packageName>
				<regex>^fatty$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>mdquest</name>
				<script>send("do 'The longbottom is short,2e,'The leaf is sweet,w,n,in,2n,w,n,'The leaf is sweet,s,e,2s,out,2s,w,'The leaf is sweet,e,s,e,'The leaf is sweet,w,2n,w")</script>
				<command></command>
				<packageName></packageName>
				<regex>^mdquest$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>mori</name>
				<script>send("do ask man about help,fill bucket,toss water from bucket,fill bucket,toss water from bucket,fill bucket,toss water from bucket,fill bucket,toss water from bucket,fill bucket,toss water from bucket")</script>
				<command></command>
				<packageName></packageName>
				<regex>^mori$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>pelclean</name>
				<script>speedwalk("2w,2n,7s,sw,9n,nw,11s,sw,13n,w,13s,sw,15n,w,15s,w,15n,nw,17s,w,17n,w,17s,sw,18n,sw,17s,17n,ne, 18s, ne, 17n, e, 17s, e, 17n, se, 15s, e, 15n, e,15s, ne, 13n, e, 13s, ne, 11n, se,9s,ne, 7n, 2s, 2e",false,0.2)
--send("do 2w,2n,7s,sw,9n,nw,11s,sw,13n,w,13s,sw,15n,w,15s,w,15n,nw,17s,w,17n,w,17s,sw,18n,sw,17s,17n,ne, 18s, ne, 17n, e, 17s, e, 17n, se, 15s, e, 15n, e,15s, ne, 13n, e, 13s, ne, 11n, se,9s,ne, 7n, 2s, 2e")</script>
				<command></command>
				<packageName></packageName>
				<regex>^pelclean$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>prof - Prof Quest</name>
				<script>send("do push boulders,n,e,search webs,get bag,w,s")</script>
				<command></command>
				<packageName></packageName>
				<regex>^prof$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>dwarven steel leggings</name>
				<script>send("do get torch,n,w,s,get rags,wrap rags around torch,n,2e,search packages,get key,n,search under table,unlock chest with small plain key,drop key,open chest,get bottle from chest,open bottle,pour oil onto torch,drop bottle,s,w,push axe,light torch,burn web")</script>
				<command></command>
				<packageName></packageName>
				<regex>dlegs</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>mt6-tax</name>
				<script>send("do nw,2ne,2n,2nw,2w,2sw,2e,search coffins,get kit")</script>
				<command></command>
				<packageName></packageName>
				<regex>^mt6-kit$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>bracelet</name>
				<script>t2tMapper.go("privy")
if braceletTrig then killTrigger(braceletTrig) end
braceletTrig = tempTrigger("A revolting slop pit", function() send("do search filth,get bracelet") expandAlias("go rhos") end, 1)



</script>
				<command></command>
				<packageName></packageName>
				<regex>^bracelet$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>dsh - Dark Steel Helmet</name>
				<script>send ("do search behind stone 1,search behind stone 2,search behind stone 3,search behind stone 4,search behind stone 5,search behind stone 6,search behind stone 7,search behind stone 8,kill orc")</script>
				<command></command>
				<packageName></packageName>
				<regex>^dsh$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Special Commands</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Party mode On/Off</name>
				<script>--just try it :P

local condition = tostring(matches[2])
if condition == "on" then
  cecho("\n&lt;cyan&gt;PARTY MODE ACTIVATED WOOOOOO")
  enableTrigger("Party Mode")
elseif condition == "off" then
  disableTrigger("Party Mode")
  cecho("\n&lt;cyan&gt;I guess the party's over :(")
else
  cecho("\n&lt;cyan&gt;You're doing it wrong.")
end

</script>
				<command></command>
				<packageName></packageName>
				<regex>^party mode (\w+)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>^info (\X+)$</name>
				<script>--for debugging, you can get information on functions/aliases/triggers
--by typing 'info &lt;function name&gt;'
expandAlias("lua debug.getinfo("..matches[2]..")")</script>
				<command></command>
				<packageName></packageName>
				<regex>^info (\X+)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Reset Window Borders</name>
				<script>setBorderSizes(0,0,0,0)</script>
				<command></command>
				<packageName></packageName>
				<regex>^reset borders$</regex>
			</Alias>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>t2t mapper</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>T2T Mapper</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Setup Commands</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Setup</name>
						<script>t2tMapper.setup()</script>
						<command></command>
						<packageName></packageName>
						<regex>^t2t setup$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Get Prompt</name>
						<script>local prompt = matches[2]
local replacement = t2tMapper.returnPromptPattern(prompt)
cecho(f"Use &lt;yellow&gt;add prompt ^{replacement} $\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^t2t get prompt (\X+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Add Prompt</name>
						<script>local pattern = matches[2]
t2tMapper.addPrompt(pattern)</script>
						<command></command>
						<packageName></packageName>
						<regex>^t2t add prompt (\X+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Modify Mapper</name>
						<script>t2tMapper.updateGenericMapper()</script>
						<command></command>
						<packageName></packageName>
						<regex>^t2t modify mapper$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Help</name>
						<script>t2t.show_help(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^t2t help(?: (.*))?$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Shorts and Speedwalking</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Add Short</name>
						<script>local short = matches[3]
local roomid
if matches[2] and matches[2] ~= "" then
  roomid = matches[2]
else
  roomid = map.currentRoom
end

t2tMapper.setRoomShort(roomid,short)</script>
						<command></command>
						<packageName></packageName>
						<regex>^add short (\d+)?\s?(\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Remove Short</name>
						<script>local roomid
if matches[2] and matches[2] ~= "" then
  roomid = matches[2]
else
  roomid = map.currentRoom
end

t2tMapper.clearRoomShort(roomid)
cecho("&lt;cyan&gt;Short cleared.\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^remove short\s?(\d+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Get Short</name>
						<script>local roomid
if matches[2] and matches[2] ~= "" then
  roomid = matches[2]
else
  roomid = map.currentRoom
end

if t2tMapper.returnShort(roomid) then
  display(t2tMapper.returnShort(roomid))
else
  echo("No short defined.\n")
end


</script>
						<command></command>
						<packageName></packageName>
						<regex>^get short\s?(\d+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Go</name>
						<script>map.stop_mapping()
local target = matches[2]
t2tMapper.go(target)</script>
						<command></command>
						<packageName></packageName>
						<regex>^go ([\w\d]+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Save Room</name>
						<script>markedRoom = map.currentRoom
cecho(f"\n&lt;cyan&gt;Saved room &lt;red&gt;{map.currentRoom}, &lt;cyan&gt;{getRoomName(map.currentRoom)}")</script>
						<command></command>
						<packageName></packageName>
						<regex>^save room$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Return</name>
						<script>if markedRoom then
  cecho(f"&lt;cyan&gt;Moving to saved room {markedRoom}, {getRoomName(markedRoom)}")
  t2tMapper.go(markedRoom)
else
  cecho(f"&lt;cyan&gt;No room currently marked")
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^return$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Horse</name>
						<script>t2tMapper.go(horseRoom)</script>
						<command></command>
						<packageName></packageName>
						<regex>^horse$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Tele</name>
						<script>local dest = matches[2]

t2tMapper.tele(dest)</script>
						<command></command>
						<packageName></packageName>
						<regex>^tele (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Dead Mode</name>
						<script>local toggle = matches[2]

if toggle == "on" then
  t2tvars["DeadMode"] = "on"
  cecho("&lt;cyan&gt;Dead Mode Mapping Enabled\n")
elseif toggle == "off" then
  t2tvars["DeadMode"] = "off"
  cecho("&lt;cyan&gt;Dead Mode Mapping Disabled\n")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^t2t dead (on|off)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Problem Rooms</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Add Prob</name>
						<script>local trueName = tostring(matches[2])
local replaceName = tostring(matches[3])
local trueExits = tostring(matches[4])
local replaceExits = tostring(matches[5])

t2tMapper.addProb(trueName,replaceName,trueExits,replaceExits)</script>
						<command></command>
						<packageName></packageName>
						<regex>^add prob "(\X+)" "(\X+)" "([\w,\s,]*)" "([\w,\s,]*)"$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Remove Prob</name>
						<script>local probRoom = tonumber(matches[2])

t2tMapper.remProb(probRoom)

</script>
						<command></command>
						<packageName></packageName>
						<regex>^remove prob (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Show Probs</name>
						<script>t2tMapper.showProbs()</script>
						<command></command>
						<packageName></packageName>
						<regex>^show probs$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Room Attributes</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Set Room Name</name>
						<script>local roomid = matches[2]
local roomName = matches[3]
setRoomName(roomid, roomName)</script>
						<command></command>
						<packageName></packageName>
						<regex>^set room name (\d+) (.+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set Room Weight</name>
						<script>local roomid = matches[2]
local weight = matches[3]
setRoomWeight(roomid, weight)</script>
						<command></command>
						<packageName></packageName>
						<regex>^set room weight (\d+) (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set Room Color</name>
						<script>local colornum = matches[2]
setRoomEnv(map.currentRoom, colornum)</script>
						<command></command>
						<packageName></packageName>
						<regex>^colorme (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set Room Locks</name>
						<script>local roomID = tonumber(matches[2])
local exitDir = matches[3]
local alignMin = matches[4]
local alignMax = matches[5]

t2tMapper.addLocked(roomID,exitDir,alignMin,alignMax)</script>
						<command></command>
						<packageName></packageName>
						<regex>^set room locks (\d+) "([\w\s\d]+)" "([\w\s]+)" "([\w\s]+)"$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show Alignments</name>
						<script>cecho("&lt;cyan&gt;These are the valid alignments and capitalization must be adherred to when using the &lt;yellow&gt;set room locks&lt;cyan&gt; command.\n")
cecho('&lt;red&gt;Evilrace\n')
cecho('&lt;red&gt;Servant\n')
cecho('&lt;red&gt;Shadowspawn of Mordor\n')
cecho('&lt;red&gt;Shadowspawn\n')
cecho('&lt;red&gt;Demonic\n')
cecho('&lt;red&gt;Villainous\n')
cecho('&lt;red&gt;Immoral\n')
cecho('&lt;red&gt;Impartial\n')
cecho('&lt;red&gt;Moral\n')
cecho('&lt;red&gt;Heroic\n')
cecho('&lt;red&gt;Angelic\n')
cecho('&lt;red&gt;Hand of Eru\n')</script>
						<command></command>
						<packageName></packageName>
						<regex>^show alignments$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set Group Weight</name>
						<script>local roomName = matches[2]
local weight = tonumber(matches[3])
t2tMapper.massWeight(roomName, weight)</script>
						<command></command>
						<packageName></packageName>
						<regex>^set group weight (\X+) (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Set Group Color</name>
						<script>local roomName = matches[2]
local color = tonumber(matches[3])

t2tMapper.massColor(roomName,color)
</script>
						<command></command>
						<packageName></packageName>
						<regex>^set group color (\X+) (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Get Room Weight</name>
						<script>local room = matches[2]
local roomid = t2tMapper.parseRoomAsShortOrID(room)
cecho(f"Room weight for {roomid} is {getRoomWeight(roomid)}\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^get room weight ([\w\d]+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Get Room Color</name>
						<script>local room = matches[2]
local roomid = t2tMapper.parseRoomAsShortOrID(room)

if roomid then 
  getRoomEnv(roomID)
else
  cecho("&lt;red&gt;Invalid room number.\n")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^get room color ([\w\d]+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Get Room Locks</name>
						<script>local room = matches[2]
t2tMapper.displayRoomLocks(room)</script>
						<command></command>
						<packageName></packageName>
						<regex>^get room locks ([\w\d]+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Remove Room Locks</name>
						<script>local room = matches[2]
local roomid = t2tMapper.parseRoomAsShortOrID(room)
t2tMapper.removeLocked(roomid)</script>
						<command></command>
						<packageName></packageName>
						<regex>^remove room locks ([\w\d]+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>List Room Colors</name>
						<script>cecho("\n&lt;ansi_red&gt;Ansi Red - 257")
cecho("\n&lt;ansi_green&gt;Ansi Green - 258")
cecho("\n&lt;ansi_yellow&gt;Ansi Yellow - 259")
cecho("\n&lt;ansi_blue&gt;Ansi Blue - 260")
cecho("\n&lt;ansi_magenta&gt;Ansi Magenta - 261")
cecho("\n&lt;ansi_cyan&gt;Ansi Cyan - 262")
cecho("\n&lt;ansi_white&gt;Ansi White - 263")
cecho("\n&lt;white&gt;Ansi Black - 264")
cecho("\n&lt;ansi_light_red&gt;Ansi Light Red - 265")
cecho("\n&lt;ansi_light_green&gt;Ansi Light Green - 266")
cecho("\n&lt;ansi_light_yellow&gt;Ansi Light Yellow - 267")
cecho("\n&lt;ansi_light_blue&gt;Ansi Light Blue - 268")
cecho("\n&lt;ansi_light_magenta&gt;Ansi Light Magenta - 269")
cecho("\n&lt;ansi_light_cyan&gt;Ansi Light Cyan - 270")
cecho("\n&lt;ansi_light_white&gt;Ansi Light White - 271")
cecho("\n&lt;ansi_light_black&gt;Ansi Light Black - 272")</script>
						<command></command>
						<packageName></packageName>
						<regex>^colors$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Color Mark Room</name>
						<script>setRoomEnv(map.currentRoom, 270)</script>
						<command></command>
						<packageName></packageName>
						<regex>^mark$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Room Scripts</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Add Script</name>
						<script>local roomid, script
roomid = tonumber(matches[2])
script = tostring(matches[3])

if not roomid then
  roomid = map.currentRoom
end

t2tMapper.setRoomScript(roomid,script)</script>
						<command></command>
						<packageName></packageName>
						<regex>^add script (\d+)?\s?(\X+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Remove Script</name>
						<script>local room = matches[2]
if not room then room = map.currentRoom end
t2tMapper.clearRoomScript(room)</script>
						<command></command>
						<packageName></packageName>
						<regex>^remove script\s?(\d+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Get Script</name>
						<script>local roomid = tonumber(matches[2])

if not roomid then
  roomid = map.currentRoom
end

display(t2tMapper.returnScript(roomid))</script>
						<command></command>
						<packageName></packageName>
						<regex>^get script\s?(\d+)?$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Water Exits</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Launch</name>
						<script>local dir = matches[2]
t2tMapper.launch(dir)</script>
						<command></command>
						<packageName></packageName>
						<regex>^launch (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Land</name>
						<script>local dir = matches[2]
t2tMapper.land(dir)</script>
						<command></command>
						<packageName></packageName>
						<regex>^land (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Landlaunch</name>
						<script>if matches[2] == "on" then
  enableAlias("Launch")
  enableAlias("Land")
  cecho("&lt;cyan&gt;Land and Launch aliases enabled.\n")
end
if matches[2] == "off" then
  disableAlias("Launch")
  disableAlias("Land")
  cecho("&lt;cyan&gt;Land and Launch aliases disabled.\n")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^landlaunch (on|off)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Water</name>
						<script>water_toggle = matches[2]

if water_toggle == "on" then
  t2tvars["WaterExits"] = "on"
  cecho(f"\n&lt;cyan&gt;Water Exit Capture enabled.")
elseif water_toggle == "off" then
  t2tvars["WaterExits"] = "off"
  cecho(f"\n&lt;cyan&gt;Water Exit Capture disabled.")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^t2t water (on|off)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Waterflag</name>
						<script>local room = map.currentRoom
local toggle = matches[2]
if toggle == "on" then
  t2tMapper.setRoomWaterFlag(room)
elseif toggle == "off" then
  t2tMapper.clearRoomWaterFlag(room)
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^waterflag (on|off)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Swim</name>
						<script>local dir = matches[2]
t2tMapper.swim(dir)</script>
						<command></command>
						<packageName></packageName>
						<regex>^swim (\w+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>mapswim</name>
						<script>if matches[2] == "on" then
  enableAlias("Swim")
  cecho("&lt;cyan&gt;Swim alias enabled.\n")
end
if matches[2] == "off" then
  disableAlias("Swim")
  cecho("&lt;cyan&gt;Swim alias disabled.\n")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^mapswim (on|off)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Mapper Window/Visual</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Zoom</name>
						<script>setMapZoom(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^zoom (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Center</name>
						<script>local dest = matches[2]

t2tMapper.centerMapView(dest)
</script>
						<command></command>
						<packageName></packageName>
						<regex>^center ([\w\d]+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add Label</name>
						<script>local labelText = tostring(matches[2])
local x,y,z = getRoomCoordinates(getPlayerRoom())
createMapLabel(getRoomArea(getPlayerRoom()), f"{labelText}", x,y,z, 255,255,255, 0,0,0, 0, 10, true, true, "Ubuntu")</script>
						<command></command>
						<packageName></packageName>
						<regex>^add label (\X+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show Map</name>
						<script>mapCon:show()</script>
						<command></command>
						<packageName></packageName>
						<regex>^show map$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Unlock Map</name>
						<script>mapCon:unlockContainer()</script>
						<command></command>
						<packageName></packageName>
						<regex>^unlock map$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Generic Map Script Interaction</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Fail</name>
						<script>raiseEvent("onMoveFail")</script>
						<command></command>
						<packageName></packageName>
						<regex>^fail$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Move</name>
						<script>local dir = matches[2]
raiseEvent("onManualMove",dir)</script>
						<command></command>
						<packageName></packageName>
						<regex>^t2t move ([\w\s]+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>T2T Get Path</name>
						<script>local path = t2tMapper.returnPath(matches[2],matches[3])
if path then
  local pathString = "do " ..path
  cecho(f"\n&lt;cyan&gt;The path from {matches[2]} to {matches[3]} is: \n&lt;red&gt;{pathString}\n")
else
  cecho("\n&lt;red&gt;Path cannot be created.  Please check starting and ending locations.\n")
end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^get path (\w+|\d+) (\w+|\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Sneak</name>
						<script>local movement = matches[2]
send(f"sneak {movement}",false)
raiseEvent("onForcedMove",movement)</script>
						<command></command>
						<packageName></packageName>
						<regex>^sneak (\w+)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>t2tvars</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Pairs</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Add Pair</name>
							<script>local key = matches[2]
local value = matches[3]
t2tvars.addPair(key, value)</script>
							<command></command>
							<packageName></packageName>
							<regex>^add pair ([\w\d\-]+) ([\w\d\-]+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Remove Pair</name>
							<script>local key = matches[2]
t2tvars.remPair(key)</script>
							<command></command>
							<packageName></packageName>
							<regex>^rem pair ([\w\d\-]+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Show Pairs</name>
							<script>t2tvars.showPairs()</script>
							<command></command>
							<packageName></packageName>
							<regex>^show pairs$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Show Pair</name>
							<script>local key = matches[2]
t2tvars.showPair(key)</script>
							<command></command>
							<packageName></packageName>
							<regex>^show pair ([\w\d\-]+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Lists</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Add List</name>
							<script>local name = matches[2]
t2tvars.addList(name)</script>
							<command></command>
							<packageName></packageName>
							<regex>^add list ([\w\d\-]+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Add List Item</name>
							<script>local name = matches[2]
local item = matches[3]
t2tvars.addListItem(name,item)</script>
							<command></command>
							<packageName></packageName>
							<regex>^add listitem ([\w\d\-]+) ([\w\d\-]+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Remove List</name>
							<script>local name = matches[2]
t2tvars.remList(name)</script>
							<command></command>
							<packageName></packageName>
							<regex>^rem list ([\w\d\-]+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Remove List Item</name>
							<script>local name = matches[2]
local item = matches[3]
t2tvars.remListItem(name,item)</script>
							<command></command>
							<packageName></packageName>
							<regex>^rem listitem ([\w\d\-]+) ([\w\d\-]+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Show Lists</name>
							<script>t2tvars.showLists()</script>
							<command></command>
							<packageName></packageName>
							<regex>^show lists$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Show List</name>
							<script>local name = matches[2]
t2tvars.showList(name)</script>
							<command></command>
							<packageName></packageName>
							<regex>^show list ([\w\d\-]+)$</regex>
						</Alias>
					</AliasGroup>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>Tables</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Add Table</name>
							<script>local name = matches[2]
t2tvars.addTable(name)</script>
							<command></command>
							<packageName></packageName>
							<regex>^add table ([\w\d\-]+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Add Table Set</name>
							<script>local name = matches[2]
local setkey = matches[3]
local setvalue = matches[4]
t2tvars.addTableSet(name,setkey,setvalue)</script>
							<command></command>
							<packageName></packageName>
							<regex>^add tableset ([\w\d\-]+) ([\w\d\-]+) ([\w\d\-]+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Remove Table</name>
							<script>local name = matches[2]
t2tvars.remTable(name)</script>
							<command></command>
							<packageName></packageName>
							<regex>^rem table ([\w\d\-]+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Remove Table Set</name>
							<script>local name = matches[2]
local set = matches[3]
t2tvars.remTableSet(name,set)</script>
							<command></command>
							<packageName></packageName>
							<regex>^rem tableset ([\w\d\-]+) ([\w\d\-]+)$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Show Tables</name>
							<script>t2tvars.showTables()</script>
							<command></command>
							<packageName></packageName>
							<regex>^show tables$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Show Table</name>
							<script>local name = matches[2]
t2tvars.showTable(name)</script>
							<command></command>
							<packageName></packageName>
							<regex>^show table ([\w\d\-]+)$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>t2t addons</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Mapper Addons</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Breaks</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Get Room Breaks</name>
						<script>local roomid = tonumber(matches[2])

if not roomid then
  roomid = map.currentRoom
end

local breaks = t2tMapperAddons.returnBreaks(roomid)
if breaks then
	cecho(f"&lt;cyan&gt;Breaks for Room: {tonumber(roomid)}, Room Name: {getRoomName(roomid)} - &lt;red&gt;{breaks}\n")
else
	cecho(f"&lt;red&gt;There are no breaks associated with Room: {roomid} Room Name: {getRoomName(roomid)}.\n")
end</script>
						<command></command>
						<packageName></packageName>
						<regex>^get breaks\s?(\d+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add Breaks To Room Display</name>
						<script>local roomid, breaks
roomid = tonumber(matches[2])
breaks = tostring(matches[3])

if not roomid then
  roomid = map.currentRoom
end

t2tMapperAddons.setRoomBreaks(roomid,breaks)</script>
						<command></command>
						<packageName></packageName>
						<regex>^add break (\d+)?\s?([\w\s]+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Remove Room Huntbreak List</name>
						<script>local roomid = tonumber(matches[2])

if not roomid then
    roomid = map.currentRoom
end

t2tMapperAddons.clearRoomBreaks(roomid)
cecho("&lt;cyan&gt;Breaks cleared.\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^rem breaks\s?(\d+)?$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Inns</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Set Inn Location</name>
						<script>local roomid, inn
roomid = tonumber(matches[2])
inn = tostring(matches[3])

if not roomid then
  roomid = map.currentRoom
end

t2tMapperAddons.setRoomInn(roomid,inn)
</script>
						<command></command>
						<packageName></packageName>
						<regex>^set inn (\d+)?\s?([\w\s-]+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add Inn</name>
						<script>local inn = tostring(matches[2])
t2tMapper.addInn(inn)</script>
						<command></command>
						<packageName></packageName>
						<regex>^add inn ([\w\s-]+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Get Inn Name</name>
						<script>local roomid = tonumber(matches[2])
local inn
if roomid then
  inn = t2tMapperAddons.returnInn(roomid)
else
  inn = t2tMapperAddons.returnInn(map.currentRoom)
end
cecho(f"\n&lt;red&gt;{inn}\n")</script>
						<command></command>
						<packageName></packageName>
						<regex>^get inn\s?(\d+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>List Inns</name>
						<script>display(t2tvars.innTable)</script>
						<command></command>
						<packageName></packageName>
						<regex>^list inns$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Locked Rooms</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Align me or Align me here</name>
						<script>raiseEvent("onClearAlign")
enableTrigger("Align Results")
send("score")
send(matches[1], false)</script>
						<command></command>
						<packageName></packageName>
						<regex>^align me\s?(\w+)?$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Add Locked Room</name>
						<script>--Adds a room to the list of rooms restricted based on alignment

local roomID = tonumber(matches[2])
local exitDir = matches[3]
local alignMin = matches[4]
local alignMax = matches[5]

t2tMapper.addLocked(roomID,exitDir,alignMin,alignMax)</script>
						<command></command>
						<packageName></packageName>
						<regex>^add locked (\d+) "([\w\s\d]+)" "([\w\s]+)" "([\w\s]+)"$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Remove Locked Room</name>
						<script>--Removes a room from the list of rooms restricted based on alignment
local roomID = matches[2]
t2tMapper.removeLocked(roomID)</script>
						<command></command>
						<packageName></packageName>
						<regex>^rem locked (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show Locked rooms</name>
						<script>--Returns a list of rooms that change status based on alignment.
t2tMapper.showLocked()</script>
						<command></command>
						<packageName></packageName>
						<regex>^show locked$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show Syntax for add locked</name>
						<script>cecho('&lt;cyan&gt;Syntax: &lt;red&gt;add locked &lt;green&gt;&lt;roomID&gt;&lt;red&gt; "&lt;green&gt;&lt;exit&gt;&lt;red&gt;" "&lt;green&gt;&lt;minimum alignment&gt;&lt;red&gt;" "&lt;green&gt;&lt;maximum alignment&gt;&lt;red&gt;"')
</script>
						<command></command>
						<packageName></packageName>
						<regex>^add locked$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show syntax for remove locked</name>
						<script>cecho('&lt;cyan&gt;Syntax: &lt;red&gt;rem locked &lt;green&gt;&lt;roomID&gt;&lt;red&gt;')</script>
						<command></command>
						<packageName></packageName>
						<regex>^rem locked$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Show Alignments</name>
						<script>cecho("&lt;cyan&gt;These are the valid alignments and capitalization must be adherred to when using the add locked command.\n")
cecho('&lt;red&gt;Evilrace\n')
cecho('&lt;red&gt;Servant\n')
cecho('&lt;red&gt;Shadowspawn of Mordor\n')
cecho('&lt;red&gt;Shadowspawn\n')
cecho('&lt;red&gt;Demonic\n')
cecho('&lt;red&gt;Villainous\n')
cecho('&lt;red&gt;Immoral\n')
cecho('&lt;red&gt;Impartial\n')
cecho('&lt;red&gt;Moral\n')
cecho('&lt;red&gt;Heroic\n')
cecho('&lt;red&gt;Angelic\n')
cecho('&lt;red&gt;Hand of Eru\n')</script>
						<command></command>
						<packageName></packageName>
						<regex>^show alignments$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Save Locked Rooms</name>
						<script>t2tMapper.saveLocked()</script>
						<command></command>
						<packageName></packageName>
						<regex>^save locked$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Map Sim</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Sim Go to Room/Sim Move</name>
						<script>local simGoTarget = matches[2]
local simMoveDir = matches[3]

if simMoveDir then raiseEvent("onMove", simMoveDir) end
if simGoTarget and simGoTarget ~= "" then mapSim.go(simGoTarget) end
</script>
						<command></command>
						<packageName></packageName>
						<regex>^sim go ([\w\d]+)$|^sim ([\w\s\d]+)$</regex>
					</Alias>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Random Old Editing Aliases</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Clear Special Exits from Room</name>
						<script>clearSpecialExits(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^clear specials (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Mass Delete</name>
						<script>t2tMapper.massDelete(tostring(matches[2]))</script>
						<command></command>
						<packageName></packageName>
						<regex>^mass delete (\X+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Mass Rename</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex>^mass rename "(.+)" "(.+)"</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Find Area Special Exits</name>
						<script>getAreaSpecials(matches[2])</script>
						<command></command>
						<packageName></packageName>
						<regex>^find specials (\d+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Find room</name>
						<script>-- Gives you a roomid(or list of roomid's) that match the room name you're searching for
local room = tostring(matches[2])
t2tMapperAddons.getRoomID(room)
</script>
						<command></command>
						<packageName></packageName>
						<regex>^find room (\X+)$</regex>
					</Alias>
					<Alias isActive="yes" isFolder="no">
						<name>Change Area Name</name>
						<script>local oldArea = matches[2]
local newArea = matches[3]
setAreaName(oldArea, newArea)</script>
						<command></command>
						<packageName></packageName>
						<regex>^area "(\X+)" "(\X+)"$</regex>
					</Alias>
					<AliasGroup isActive="yes" isFolder="yes">
						<name>CU Stairs</name>
						<script></script>
						<command></command>
						<packageName></packageName>
						<regex></regex>
						<Alias isActive="yes" isFolder="no">
							<name>Set Up Exits</name>
							<script>local maproom = map.currentRoom
local roomid = maproom + 1
expandAlias(f"set exit up {roomid}")
expandAlias(f"set exit ne {roomid}")
expandAlias(f"set exit e {roomid}")
expandAlias(f"set exit se {roomid}")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^\/setup$</regex>
						</Alias>
						<Alias isActive="yes" isFolder="no">
							<name>Set Down Exits</name>
							<script>local maproom = map.currentRoom
local roomid = maproom - 1
expandAlias(f"set exit down {roomid}")
expandAlias(f"set exit nw {roomid}")
expandAlias(f"set exit w {roomid}")
expandAlias(f"set exit sw {roomid}")
</script>
							<command></command>
							<packageName></packageName>
							<regex>^\/setdown$</regex>
						</Alias>
					</AliasGroup>
				</AliasGroup>
				<AliasGroup isActive="yes" isFolder="yes">
					<name>Scripts</name>
					<script></script>
					<command></command>
					<packageName></packageName>
					<regex></regex>
					<Alias isActive="yes" isFolder="no">
						<name>Get All Scripts</name>
						<script>display(t2tMapperAddons.returnAllScripts())</script>
						<command></command>
						<packageName></packageName>
						<regex>^get all scripts$</regex>
					</Alias>
				</AliasGroup>
				<Alias isActive="yes" isFolder="no">
					<name>Speedwalk with .</name>
					<script>local path = tostring(matches[2])
speedwalk(path)</script>
					<command></command>
					<packageName></packageName>
					<regex>^\.([\d\w]+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Follow On</name>
					<script>enableTrigger("Follow")
cecho("\n&lt;cyan&gt;Follow leader/target on.")</script>
					<command></command>
					<packageName></packageName>
					<regex>^followon$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Follow Off</name>
					<script>disableTrigger("Follow")
cecho("\n&lt;cyan&gt;Follow leader/target off.")</script>
					<command></command>
					<packageName></packageName>
					<regex>^followoff$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Go to Last marked location for Kurak</name>
					<script>t2tMapper.go(kurak)</script>
					<command></command>
					<packageName></packageName>
					<regex>^kurak$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Go to last marked room for Kheligan</name>
					<script>t2tMapper.go(kheligan)</script>
					<command></command>
					<packageName></packageName>
					<regex>^kheligan$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add Enc (simulated room exit command)</name>
					<script>local tempRegex = matches[2]
t2tMapperAddons.addEnc(tempRegex)</script>
					<command></command>
					<packageName></packageName>
					<regex>^add enc (\X+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Inventory Management</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>i all</name>
					<script>send("i all")
enableTrigger("Inventory Management Triggers")
raiseEvent("onInventoryReset")</script>
					<command></command>
					<packageName></packageName>
					<regex>^i all$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add inventory</name>
					<script>local cat = matches[2]

local item = {
  name = matches[3],
  itemType = matches[4],
  command = matches[5]
}
if not table.contains(invTables,matches[3]) then
  if cat == "weapon" then
    local weapons = invTables.Weapons
    weapons[#weapons + 1] = item

  elseif cat == "armour" then
    local armour = invTables.Armour
    armour[#armour + 1] = item

  elseif cat == "container" then
    local containers = invTables.Containers
    containers[#containers + 1] = item

  elseif cat == "baldric" then
    local baldrics = invTables.Baldrics
    baldrics[#baldrics + 1] = item

  elseif cat == "healing" then
    local healing = invTables.Healing
    healing[#healing + 1] = item

  elseif cat == "poison" then
    local poisons = invTables.Poisons
    poisons[#poisons + 1] = item

  elseif cat == "light" then
    local light = invTables.Light
    light[#light + 1] = item

  elseif cat == "key" then
    local keys = invTables.Keys
    keys[#keys + 1] = item

  elseif cat == "bonus" then
    local bonus = invTables.Bonus
    bonus[#bonus + 1] = item

  elseif cat == "misc" then
    local misc = invTables.Misc
    misc[#misc + 1] = item
  end
  cecho(f"&lt;red&gt;{matches[3]} &lt;cyan&gt;added to inventory tables.\n")
else
  cecho(f"&lt;red&gt;{matches[3]} &lt;cyan&gt;already in inventory tables.\n")
end
invSave()</script>
					<command></command>
					<packageName></packageName>
					<regex>^add (weapon|armour|container|baldric|healing|poison|light|key|bonus|misc) "(\X*)" "(\w*)" "(\X*)"$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Find Item</name>
					<script>local item = matches[2]
if table.contains(invTables, item) then
  cecho("&lt;cyan&gt;Item Found\n")
else
  cecho("&lt;red&gt;Item not found\n")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^find item (\X+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Info Panels</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Manual Forge Start</name>
					<script>raiseEvent("onForgeStart")</script>
					<command></command>
					<packageName></packageName>
					<regex>^forge start$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Manual Forge Stop</name>
					<script>raiseEvent("onForgeStop")</script>
					<command></command>
					<packageName></packageName>
					<regex>^forge stop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Manually set Mordor Pass</name>
					<script>local tempPass = matches[2]
raiseEvent('onSetMordorUptime', tempPass)</script>
					<command></command>
					<packageName></packageName>
					<regex>^morpass (\X+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Enable Options</name>
					<script>local option = matches[2]

if option == "forge" then
  raiseEvent('onEnableForge')
elseif option == "mordor" then
  raiseEvent('onEnableMordor')
elseif option == "pvp" then
  raiseEvent('onEnablePVP')
elseif option == "bank" then
  raiseEvent('onEnableBank')
elseif option == "inns" then
  raiseEvent('onEnableInns')
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^enable (forge|mordor|pvp|bank|inns)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Disable Options</name>
					<script>local option = matches[2]

if option == "forge" then
  raiseEvent('onDisableForge')
elseif option == "mordor" then
  raiseEvent('onDisableMordor')
elseif option == "pvp" then
  raiseEvent('onDisablePVP')
elseif option == "bank" then
  raiseEvent('onDisableBank')
elseif option == "inns" then
  raiseEvent('onDisableInns')
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^disable (forge|mordor|pvp|bank|inns)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Alt List</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>add main (primary character for alt list)</name>
					<script>local mainChar = string.title(matches[2])

altList.addMain(mainChar)</script>
					<command></command>
					<packageName></packageName>
					<regex>^add main (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rem main altname</name>
					<script>local altName = string.title(matches[2])
altList.remMain(altName)</script>
					<command></command>
					<packageName></packageName>
					<regex>^rem main (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>add alt mainchar newalt</name>
					<script>local mainChar = string.title(matches[2])
local altChar = string.title(matches[3])
--local mainList = table.keys(altListNames)
	

--if table.contains(altListNames, altChar) then
--  cecho(f"&lt;red&gt;{mainChar} &lt;cyan&gt;already in alt list.\n")
--elseif not table.contains(mainList, mainChar) then
--  cecho(f"&lt;cyan&gt;Please add&lt;red&gt; {mainChar} &lt;cyan&gt;to list first using the &lt;green&gt;add main charname&lt;cyan&gt; alias.\n")
--else
--  if not table.contains(altListNames.mainChar,altChar) then
--    local mainDude = altListNames.mainChar
--    mainDude[mainDude + 1] = altChar
--    cecho(f"&lt;red&gt;{altChar} &lt;cyan&gt;added to list of alts for &lt;red&gt;{mainChar}&lt;cyan&gt;.\n")
--  end
--end

altList.addAlt(mainChar,altChar)
--altList.saveAlts()</script>
					<command></command>
					<packageName></packageName>
					<regex>^add alt (\w+) (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>rem alt altname</name>
					<script>local altChar = string.title(matches[2])
altList.remAlt(altChar)</script>
					<command></command>
					<packageName></packageName>
					<regex>^rem alt (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>find alt altname</name>
					<script>local altName = string.title(matches[2])

altList.findAlt(altName)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^find alt (\w+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Chat Window</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Show Tell window</name>
					<script>tabCon:show()</script>
					<command></command>
					<packageName></packageName>
					<regex>^show tells$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Clear Guild</name>
					<script>tabEMCO:clear("Guild")</script>
					<command></command>
					<packageName></packageName>
					<regex>^clear guild$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Clear Tells</name>
					<script>tabEMCO:clear("Tells")</script>
					<command></command>
					<packageName></packageName>
					<regex>^clear tells$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Trainers</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Add Trainer</name>
					<script>--^add trainer prof "name" "area" "skills" "affinity"
local profList = {"archer", "assassin", "civilian", "language", "minion", "necromancer", "ranger", "rider", "sniffer", "thief", "tradeskill", "warrior", "wizard"}
local prof = matches[2]

local trainer = {
  name = matches[3],
  area = matches[4],
  skills = matches[5],
  affinity = matches[6],
}

if table.contains(profList, prof) then
  if not table.contains(trainers,matches[3]) then
  	local profTrainers = trainers[prof]
  	profTrainers[#profTrainers + 1] = trainer
		cecho(f"&lt;red&gt;{matches[3]} &lt;cyan&gt;added to trainer list.\n")
	else
		cecho(f"&lt;red&gt;{matches[3]} &lt;cyan&gt;already in trainer list.\n")
  end
else
    cecho("\n&lt;red&gt;Not a valid profession.\n")
end
saveTrainers()
</script>
					<command></command>
					<packageName></packageName>
					<regex>^add trainer ([\w ]+) "([\w \-\']+)" "([\w \-\']+)" "([\w \-\d\'\,]+)" "([\w ]+)"$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Find Trainer</name>
					<script>local query = matches[2]
findTrainer(query)</script>
					<command></command>
					<packageName></packageName>
					<regex>^find trainer (\X+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Save trainers</name>
					<script>saveTrainers()</script>
					<command></command>
					<packageName></packageName>
					<regex>^save trainer$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add trainer help</name>
					<script>--^add trainer (\w+) "([\w \-\']+)" "([\w \-\']+)" "([\w \-\d\'\,]+)" "([\w ]+)"$
cecho('&lt;green&gt;Syntax: &lt;cyan&gt;add trainer &lt;profession&gt; "&lt;trainer name&gt;" "&lt;location&gt;" "&lt;skills&gt;" "&lt;affinity&gt;"')</script>
					<command></command>
					<packageName></packageName>
					<regex>^add trainer$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>PVP</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Who PVP</name>
					<script>raiseEvent("onWhoAll")</script>
					<command></command>
					<packageName></packageName>
					<regex>^who pvp$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Show PVP users</name>
					<script>disableTrigger("PVP Check Trigger")
--display(pvpScript.whoList.pvpList)
local pvpUsers = table.concat(pvpScript.whoList.pvpList,", ")
cecho(f"\n&lt;cyan&gt;PVP On Users: &lt;red&gt;{pvpUsers}\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^pvp list$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Target 1</name>
					<script>local tempTarg = matches[2]
raiseEvent("onSetPrimaryTarget", tempTarg)</script>
					<command></command>
					<packageName></packageName>
					<regex>^targ1 (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Target 2</name>
					<script>local tempTarg = matches[2]
raiseEvent("onSetSecondaryTarget", tempTarg)</script>
					<command></command>
					<packageName></packageName>
					<regex>^targ2 (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Select Target 1</name>
					<script>raiseEvent("onSelectTarget")</script>
					<command></command>
					<packageName></packageName>
					<regex>^\/1$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Select Target 2</name>
					<script>raiseEvent("onSwapTarget")
raiseEvent("onSelectTarget")</script>
					<command></command>
					<packageName></packageName>
					<regex>^\/2$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Kill Trigger On</name>
					<script>enableTrigger("falls")
cecho("&lt;red&gt;Falls to the ground - kill trigger engaged\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^killon$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Kill Trigger Off</name>
					<script>disableTrigger("falls")
cecho("&lt;red&gt;Falls to the ground - kill trigger disengaged\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^killoff$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Find System</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Add Find Access</name>
					<script>local user = tostring(matches[2])
user = string.lower(user) or user
findSys.addUser(user)
</script>
					<command></command>
					<packageName></packageName>
					<regex>^add user (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Remove Find Access</name>
					<script>local user = tostring(matches[2])
user = string.lower(user) or user
findSys.removeUser(user)

</script>
					<command></command>
					<packageName></packageName>
					<regex>^rem user (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>List Authorized users</name>
					<script>findSys.listUsers()</script>
					<command></command>
					<packageName></packageName>
					<regex>^list users$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Manual Send Find Info</name>
					<script>local sender = matches[2]
local target = matches[3]
sender = string.lower(sender)
target = string.lower(target)
raiseEvent("onManualSend",sender,target)</script>
					<command></command>
					<packageName></packageName>
					<regex>^sendfind (\w+) (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>FindSys Help</name>
					<script>findSys.show_help(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^findsys help(?: (.*))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Inform User they have been granted access</name>
					<script>local user = matches[2]
send(f"tell {user} $HIR${string.title(user)}, $HIC$you have been added to the list of authorized users of my find/sense system.  To use the system, please use the syntax: $HIG$tell (myname) find name")
</script>
					<command></command>
					<packageName></packageName>
					<regex>^inform (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Send find results to guild</name>
					<script>local sender = "guild"
local target = matches[2]
sender = string.lower(sender)
target = string.lower(target)
raiseEvent("onManualSend",sender,target)</script>
					<command></command>
					<packageName></packageName>
					<regex>^gf (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Automatic Reply Mode</name>
					<script>raiseEvent("onAutoToggle")</script>
					<command></command>
					<packageName></packageName>
					<regex>^autofind$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Run request when not in automatic mode</name>
					<script>findSys.find()</script>
					<command></command>
					<packageName></packageName>
					<regex>^runit$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Test Aliases</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
		</AliasGroup>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Thief</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>MT Orbs</name>
				<script>if orbsRummage then killTrigger(orbsRummage) end
orbsRummage = tempRegexTrigger("^    You manage to dip your hand into the strongbox several", function() send("rummage through strongbox") end,10)

if orbsHalt then killTrigger(orbsHalt) end
orbsHalt = tempRegexTrigger("^The old man gets the last of the orbs into a jar and puts it under the counter", function()
    send("halt")
    send("do e,3s")
    killTrigger(orbsRummage)
end,1)

send("do 3n,w,request to see orbs,push counter,rummage through strongbox")</script>
				<command></command>
				<packageName></packageName>
				<regex>^mtorbs$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Pelennor trolls trigger</name>
				<script>send("trigger mountain-troll todo steal all gold from troll")</script>
				<command></command>
				<packageName></packageName>
				<regex>^troll$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Equip Amulets</name>
				<script>send("do put all bracelet in pack,wear all amulet from cloak,get all bracelet from pack into cloak")</script>
				<command></command>
				<packageName></packageName>
				<regex>^amulets$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Equip Bracelets</name>
				<script>send("do put all amulet in pack,wear all bracelet from cloak,get all amulet from pack into cloak")</script>
				<command></command>
				<packageName></packageName>
				<regex>^bracelets$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Theft Potion</name>
				<script>send("mix 0 3 2 3;get potion")</script>
				<command></command>
				<packageName></packageName>
				<regex>^theftpot$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>mtvnorth</name>
				<script>send("do sneak n,e,unlock south door with ornate key,drop key,s,unbuckle chest,open chest,get gold from chest,n,out,s")</script>
				<command></command>
				<packageName></packageName>
				<regex>^mtvnorth$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>mtvsouth</name>
				<script>send("do sneak s,e,unlock south door with ornate key,drop key,n,unbuckle chest,open chest,get gold from chest,s,out,n")</script>
				<command></command>
				<packageName></packageName>
				<regex>^mtvsouth$</regex>
			</Alias>
		</AliasGroup>
		<Alias isActive="yes" isFolder="no">
			<name>show water status</name>
			<script>cecho(f"Water exits are {t2tvars.WaterExits}\n")</script>
			<command></command>
			<packageName></packageName>
			<regex>^showwater$</regex>
		</Alias>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>generic_mapper</name>
			<script></script>
			<command></command>
			<packageName>generic_mapper</packageName>
			<regex></regex>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Setup Aliases</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Map Show Alias</name>
					<script>map.showMap()</script>
					<command></command>
					<packageName></packageName>
					<regex>^map show$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Find Map Prompt Alias</name>
					<script>map.find_prompt()</script>
					<command></command>
					<packageName></packageName>
					<regex>^find prompt$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Map Prompt Alias</name>
					<script>-- USE PATTERNS FOR STRING.GSUB
if matches[2] then
  map.make_prompt_pattern(matches[2])
else
  display(map.save.prompt_pattern)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^map prompt(?: (.*))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Map Ignore Alias</name>
					<script>-- USE PATTERNS FOR STRING.GSUB
if matches[2] then
  map.make_ignore_pattern(matches[2])
else
  display(map.save.ignore_patterns)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^map ignore(?: (.*))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Move Method Alias</name>
					<script>
if matches[2] then
  map.make_move_method(matches[2])
else
  display(map.save.move_methods)
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^map movemethod(?: (.*))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Map Debug Alias</name>
					<script>map.configs.debug = not map.configs.debug
map.echo("Map debug set to: " .. (map.configs.debug and "on" or "off"))</script>
					<command></command>
					<packageName></packageName>
					<regex>^map debug$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Map Update Alias</name>
					<script>map.silentUpdate = false
map.updateVersion()</script>
					<command></command>
					<packageName></packageName>
					<regex>^map update$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Map Config Alias</name>
					<script>-- adjust pattern to allow no argument, if no argument show general help about configs
if not matches[2] then
	cecho(map.help.config)
else
  local startStr, endStr = string.match(matches[2],"(.*) ([%w%.]+)")
  local vals = {'on', 'off', 'true', 'false'}
  local modes = {'lazy','simple','normal','complex'}
  if (table.contains(vals, endStr) or tonumber(endStr)) or (startStr == "mode" and table.contains(modes, endStr)) then
  	map.setConfigs(startStr, endStr)
  else
  	map.setConfigs(matches[2])
  end
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^map config(?: ([\w\s\.]+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Map Window Config Alias</name>
					<script>map.setConfigs("map_window",matches[3],matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^map window (x|y|w|h|origin|shown)(?: ([\w%]+))?</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Map Translate Config Alias</name>
					<script>map.setConfigs("lang_dirs", {matches[3], matches[4]}, matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^map translate (\w+) (\w+) (\w+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Information Aliases</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Map Quick Start Alias</name>
					<script>map.show_help("quick_start")</script>
					<command></command>
					<packageName></packageName>
					<regex>^map basics$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Map Help Alias</name>
					<script>map.show_help(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^map help(?: (.*))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Map Rooms Alias</name>
					<script>-- map rooms &lt;area&gt; - shows the list of rooms in an area
map.echoRoomList(matches[2] or getRoomArea(map.currentRoom))</script>
					<command></command>
					<packageName></packageName>
					<regex>^map rooms(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Map Areas Alias</name>
					<script>-- area list - shows the known area list
-- functionality already exists in generic_mapper alias 'map areas'

map.echoAreaList()</script>
					<command></command>
					<packageName></packageName>
					<regex>^map areas$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Room Find Alias</name>
					<script>-- rf &lt;name&gt;, room find &lt;name&gt; - searches for a room of a given name

map.roomFind(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:rf|room find) (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Room Look Alias</name>
					<script>-- rl or room look - displays information about the room you're in
-- rl roomID - displays information on a given room ID (ie, rl 34)
-- rl room name  - displays information on a given room, by it's 
--    name (ie, rl tavern of blah)
map.roomLook(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:rl|room look)(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Show Path Alias</name>
					<script>-- showpath roomID - shows you a path from where you are to another room (by it's ID)
-- showpath fromID toID - shows you a path from a given room to another given to 
--                        another room
if not matches[2] and not matches[3] then
  map.echo("Where do you want to showpath to?")
elseif matches[2] and not matches[3] then
  map.echoPath(map.currentRoom, matches[2])
else
  map.echoPath(matches[2], matches[3])
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^showpath(?: (\d+))?(?: (\d+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>List Special Exits Alias</name>
					<script>-- spe list - shows you the list of all known special exists
-- spe list filter - shows you a list of all known special exits, 
--                   filtered by a command (ie. spe list worm warp)
map.listSpecialExits(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^spe list(?: (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>List Map Features Alias</name>
					<script>-- feature list - lists all map features created via feature create and the
-- associated room characters

map.listMapFeatures()</script>
					<command></command>
					<packageName></packageName>
					<regex>^feature list$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Regular Use Aliases</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Map Me Alias</name>
					<script>map.find_me(nil, nil, nil, true)</script>
					<command></command>
					<packageName></packageName>
					<regex>^map me$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Map Path Alias</name>
					<script>map.find_path(matches[2],matches[3])</script>
					<command></command>
					<packageName></packageName>
					<regex>^map path ([^;]+)(?:\s*;\s*(.+))?</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Recall Alias</name>
					<script>map.set_recall()</script>
					<command></command>
					<packageName></packageName>
					<regex>^map recall$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Character Alias</name>
					<script>map.character = matches[2]</script>
					<command></command>
					<packageName></packageName>
					<regex>^map character (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Map Stop Alias</name>
					<script>raiseEvent("mapStop")
raiseEvent("sysSpeedwalkStopped")</script>
					<command></command>
					<packageName></packageName>
					<regex>^map stop$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Toggle Speedwalk Alias</name>
					<script>map.toggleSpeedwalk(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^mpp(?:\s?(on|off))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Area Lock Alias</name>
					<script>-- arealock, arealock &lt;area&gt; - displays a list of areas you can
-- lock/unlock, can also give it an area name to filter by. If
-- an area is locked the mapper will not attempt to walk through
-- or go through any of the rooms in the area
map.doLockArea(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^arealock(?: (.*))?$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Map Creation Aliases</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Set Room Area Alias</name>
					<script>map.set_area(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^set area (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Start Mapping Alias</name>
					<script>map.start_mapping(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^start mapping(?: (.*))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Stop Mapping Alias</name>
					<script>map.stop_mapping()</script>
					<command></command>
					<packageName></packageName>
					<regex>^stop mapping$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Shift Room Alias</name>
					<script>map.shift_room(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^shift (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add Portal Alias</name>
					<script>map.set_portal(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^add portal (.*)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Show Moves Alias</name>
					<script>map.show_moves()</script>
					<command></command>
					<packageName></packageName>
					<regex>^show moves$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Clear Moves Alias</name>
					<script>map.clear_moves()</script>
					<command></command>
					<packageName></packageName>
					<regex>^clear moves$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add Door Alias</name>
					<script>map.set_door(matches[2],matches[3],matches[4])</script>
					<command></command>
					<packageName></packageName>
					<regex>^add door (\w+)(?: (none|open|closed|locked))?(?: (yes|no))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Merge Rooms Alias</name>
					<script>map.merge_rooms()</script>
					<command></command>
					<packageName></packageName>
					<regex>^merge rooms$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Map Mode Alias</name>
					<script>map.set_mode(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^map mode (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Room Exit Alias</name>
					<script>map.set_exit(matches[2],matches[3])</script>
					<command></command>
					<packageName></packageName>
					<regex>^set exit (.+) (\d+)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Move A Room Alias</name>
					<script>-- rc or room coords [v&lt;id&gt;] &lt;option&gt;, where option will specify the new
-- location of the room. The room ID is optional, it'll move the current
-- room if you don't provide one.


-- want the current room, but we're lost
if matches[2] == '' and (not map.currentRoom or not map.roomexists(map.currentRoom)) then map.echo("Don't know where we are at the moment.") return end

-- want another room, but it doesn't actually exist
if matches[2] ~= '' and not map.roomexists(matches[2]) then map.echo("v"..matches[2].." doesn't exist.") return end

local m = matches[3]
local rid, rname = (matches[2] ~= "" and matches[2] or map.currentRoom),
  (matches[2] ~= "" and getRoomName(matches[2]) or getRoomName(map.currentRoom))
local x,y,z

local function set() -- small func to set things
  setRoomCoordinates(rid, x, y, z)
  map.echo(string.format("%s (%d) is now at %dx, %dy, %dz.\n", rname, rid, x,y,z))
  centerview(rid)
end

-- let's be flexible and allow several ways if giving an arg
-- rc x y z
x,y,z = string.match(m, "(%-?%d+) (%-?%d+) (%-?%d+)")
if x then
  set(); return
end

-- rc xx? yy? zz?
x,y,z = string.match(m, "(%-?%d+)x"), string.match(m, "(%-?%d+)y"), string.match(m, "(%-?%d+)z")
if x or y or z then
  -- merge w/ old coords if any are missing
  local ox, oy, oz = getRoomCoordinates(rid)
  x = x or ox; y = y or oy; z = z or oz
  set(); return
end

-- rc left/west, right/east, ...
local ox, oy, oz = getRoomCoordinates(rid)
local has = table.contains
for w in string.gmatch(m, "%a+") do
  if has({"west", "left", "w", "l"}, w) then
    x = (x or ox) - 1; y = (y or oy); z = (z or oz)
  elseif has({"east", "right", "e", "r"}, w) then
    x = (x or ox) + 1; y = (y or oy); z = (z or oz)
  elseif has({"north", "top", "n", "t"}, w) then
    x = (x or ox); y = (y or oy) + 1; z = (z or oz)
  elseif has({"south", "bottom", "s", "b"}, w) then
    x = (x or ox); y = (y or oy) - 1; z = (z or oz)
  elseif has({"northwest", "topleft", "nw", "tl"}, w) then
    x = (x or ox) - 1; y = (y or oy) + 1; z = (z or oz)
  elseif has({"northeast", "topright", "ne", "tr"}, w) then
    x = (x or ox) + 1; y = (y or oy) + 1; z = (z or oz)
  elseif has({"southeast", "bottomright", "se", "br"}, w) then
    x = (x or ox) + 1; y = (y or oy) - 1; z = (z or oz)
  elseif has({"southwest", "bottomleft", "sw", "bl"}, w) then
    x = (x or ox) - 1; y = (y or oy) - 1; z = (z or oz)
  elseif has({"up", "u"}, w) then
    x = (x or ox); y = (y or oy); z = (z or oz) + 1
  elseif has({"down", "d"}, w) then
    x = (x or ox); y = (y or oy); z = (z or oz) - 1
  end

end
if x then set(); return end

map.echo([[Where do you want to move the room to?
  You can use direct coordinates or relative directions.]])</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:rc|room coords) (?:v(\d+) )?(.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Delete A Room Alias</name>
					<script>-- rld or room delete &lt;option&gt; - where option is the location or ID of the room
-- you'd like to delete

-- want the current room, but we're lost
if not matches[2] and (not map.currentRoom or not map.roomexists(map.currentRoom)) then map.echo("Don't know where we are at the moment.") return end

-- want another room, but it doesn't exist
if matches[2] and tonumber(matches[2]) and not map.roomexists(matches[2]) then map.echo("v"..matches[2].." doesn't exist.") return end

-- or a relative one
if matches[2] and not tonumber(matches[2]) and not map.relativeroom(map.currentRoom, matches[2]) then map.echo("There is no room "..matches[2].. " of us.") return end

local rid = (not matches[2] and map.currentRoom or (tonumber(matches[2]) or map.relativeroom(map.currentRoom, matches[2])))

local n = getRoomName(rid)
deleteRoom(rid)
map.echo(string.format("Deleted the %s (%d) room.\n", (n ~= "" and n or "''"), rid))
centerview(map.currentRoom)</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:rld|room delete) ?(\w+)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Room Weight Alias</name>
					<script>-- rw &lt;optional room ID or direction&gt; &lt;weight&gt;, where option is the location
-- or ID of the room whose weight you'd like to change.

local weight = tonumber(matches[3]), room
if matches[2] == '' then room = map.currentRoom
else
  room = tonumber(matches[2]) or map.relativeroom(map.currentRoom, matches[2])
end

if not room or not map.roomexists(room) then
  map.echo("Sorry - which room do you want to set the weight on? I don't know where you are at the moment, if you want to do the current room.")
  return
end

if not weight then
  map.echo("What weight do you want to set on #"..room.."?")
end

local oldweight = getRoomWeight(room)
setRoomWeight(room, weight)

if weight &gt; oldweight then
  map.echo("Increased the room weight on #"..room.." ("..getRoomName(room)..") by "..(weight-oldweight).." to "..weight.." - making it less desirable to travel through.")
elseif weight &lt; oldweight then
  map.echo("Decreased the room weight on #"..room.." ("..getRoomName(room)..") by "..(oldweight-weight).." to "..weight.." - making it more desirable to travel through.")
else
  map.echo("The room weight on #"..room.." ("..getRoomName(room)..") is already "..weight..".")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^rw(?: (\w+))? (\d+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set Exit Weight Alias</name>
					<script>-- rwe &lt;optional room ID, otherwise current&gt; &lt;weight&gt; &lt;exit&gt;, where the weight
-- is a positive number (default for exits is 0). Setting a higher weight will
-- make the exit be less likely to be used.

local room = (matches[2] ~= "" and tonumber(matches[2]) or map.currentRoom)

local weight, exit = tonumber(matches[3]), matches[4]

if not roomExists(room) then map.echo("Room "..room.." doesn't exist. It has to before we can set weights on exits.") return end

setExitWeight(room, exit, weight)

map.echo(string.format("Set the weight on the %d room going %s to %s. If it's a two-way exit, please set the reverse exit as well.", room, exit, weight))</script>
					<command></command>
					<packageName></packageName>
					<regex>^rwe(?: (\d+))? (\d+) (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Create a Link Between Two Rooms Alias</name>
					<script>-- rlk or room link &lt;option&gt; [one] - where option will specify the room and exit
-- to link with. You can also tack on 'one' at the end to make it be a one-way link


-- need the current room, but we're lost
if not map.currentRoom or not map.roomexists(map.currentRoom) then map.echo("Don't know where we are at the moment.") return end

-- make sure the dir is valid
local dir = map.anytolong(matches[3])
if not dir then map.echo(matches[3].." isn't a valid normal exit.") return end

-- if we don't give a room number, then we want to auto-locate an appropriate room nearby.
local otherroom
if matches[2] == "" then
  local w = matches[3]
  local ox, oy, oz, x,y,z = getRoomCoordinates(map.currentRoom)
  local has = table.contains
  if has({"west", "left", "w", "l"}, w) then
    x = (x or ox) - 1; y = (y or oy); z = (z or oz)
  elseif has({"east", "right", "e", "r"}, w) then
    x = (x or ox) + 1; y = (y or oy); z = (z or oz)
  elseif has({"north", "top", "n", "t"}, w) then
    x = (x or ox); y = (y or oy) + 1; z = (z or oz)
  elseif has({"south", "bottom", "s", "b"}, w) then
    x = (x or ox); y = (y or oy) - 1; z = (z or oz)
  elseif has({"northwest", "topleft", "nw", "tl"}, w) then
    x = (x or ox) - 1; y = (y or oy) + 1; z = (z or oz)
  elseif has({"northeast", "topright", "ne", "tr"}, w) then
    x = (x or ox) + 1; y = (y or oy) + 1; z = (z or oz)
  elseif has({"southeast", "bottomright", "se", "br"}, w) then
    x = (x or ox) + 1; y = (y or oy) - 1; z = (z or oz)
  elseif has({"southwest", "bottomleft", "sw", "bl"}, w) then
    x = (x or ox) - 1; y = (y or oy) - 1; z = (z or oz)
  elseif has({"up", "u"}, w) then
    x = (x or ox); y = (y or oy); z = (z or oz) + 1
  elseif has({"down", "d"}, w) then
    x = (x or ox); y = (y or oy); z = (z or oz) - 1
  end

  local carea = getRoomArea(map.currentRoom)
  if not carea then map.echo("Don't know what area are we in.") return end

  otherroom = select(2, next(getRoomsByPosition(carea,x,y,z)))

  if not otherroom then
    map.echo("There isn't a room to the "..w.." that I see - try with an exact room id.") return
  end

else
  if not map.roomexists(matches[2]) then -- check that an explicit other room ID is valid
    map.echo("A room with id "..matches[2].. " doesn't exist.") return
  else
    otherroom = tonumber(matches[2])
  end
end

if map.setExit(map.currentRoom, otherroom, matches[3]) then
  if not matches[4] then map.setExit(otherroom, map.currentRoom, map.ranytolong(matches[3])) end

  map.echo(string.format("Linked %s (%d) to %s (%d) via a %s%s exit.",
    (getRoomName(map.currentRoom) ~= "" and getRoomName(map.currentRoom) or "''"), map.currentRoom, (getRoomName(otherroom) ~= "" and getRoomName(otherroom) or "''"), otherroom, (matches[4] and "one-way " or ''), matches[3]))
else
  map.echo("Couldn't create an exit.")
end
centerview(map.currentRoom)</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:rlk|room link) ?(\d+)? (\w+)( one)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Delete a Link Alias</name>
					<script>-- urlk or room unlink &lt;direction&gt; - where direction will specify the direction
-- of the exit to unlink. This function will unlink exits both ways, or one way
-- if there is no incoming exit. 


-- need the current room, but we're lost
if not map.currentRoom or not map.roomexists(map.currentRoom) then map.echo("Don't know where we are at the moment.") return end

-- make sure the dir is valid
local dir = map.anytolong(matches[2])
if not dir then map.echo(matches[2].." isn't a valid normal exit.") return end

-- gone already?
if not getRoomExits(map.currentRoom)[dir] then map.echo(dir.." link doesn't exist already.") end

-- locate the room on the other end, so we can unlink it from there as well if necessary
local otherroom
if getRoomExits(getRoomExits(map.currentRoom)[dir])[map.ranytolong(dir)] then
  otherroom = getRoomExits(map.currentRoom)[dir]
end

if map.setExit(map.currentRoom, -1, dir) then
  if otherroom then
    if map.setExit(otherroom, -1, map.ranytolong(dir)) then
      map.echo(string.format("Deleted the %s exit from %s (%d).",
        dir, getRoomName(map.currentRoom), map.currentRoom))
     else map.echo("Couldn't delete the incoming exit.") end
  else
    map.echo(string.format("Deleted the one-way %s exit from %s (%d).",
      dir, getRoomName(map.currentRoom), map.currentRoom))
  end
else
  map.echo("Couldn't delete the outgoing exit.")
end
centerview(map.currentRoom)</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:urlk|room unlink) (\w+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add/delete Doors Alias</name>
					<script>-- rd &lt;optional room ID, or current if none&gt; &lt;direction&gt; &lt;door status&gt;
-- Direction can be one of the following: e,s,w,n,ne,se,sw,ne. 
-- Door status can be open or o, closed or c, locked or l, clear or gone.
-- To delete a room, use clear or gone. Setting doors is one-way - to set
-- two-way doors, use the alias from the opposite direction.

local room = (matches[2] ~= "" and tonumber(matches[2]) or map.currentRoom)

local direction, status = matches[3], matches[4]

if not roomExists(room) then map.echo("Room "..room.." doesn't exist. It has to before we can make doors in it.") return end

local validdirs = {'e', 's', 'w', 'n', 'ne', 'se', 'sw', 'nw', 'in', 'out', 'up', 'down'}

if not table.contains(validdirs, direction) then
  map.echo("Can't make a door in the '"..direction.."' direction - available choices are:\n  "..table.concat(validdirs, ', '))
  return
end

local statusnum

if status == "" or status == "open" or status == "o" then
  statusnum = 1
elseif status == "closed" or status ==  "c" then
  statusnum = 2
elseif status == "locked" or status ==  "l" then
  statusnum = 3
elseif status == "clear" or status == "gone" then
  statusnum = 0
end

if not statusnum then map.echo("Unrecognized option - a door can be open, closed, locked or gone.") return end

setDoor(room, direction, statusnum)

if statusnum == 0 then
  map.echo("OK, door removed.")
else
  map.echo("OK, door added/adjusted.")
end</script>
					<command></command>
					<packageName></packageName>
					<regex>^rd(?: (\d+))? (\w+)(?: (\w+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Set a Room Character Alias</name>
					<script>-- rcc &lt;character&gt; or rcc &lt;character&gt; &lt;room ID&gt; - where the character is one 
-- letter/number/symbol.

local room = matches[3] or map.currentRoom
room = tonumber(room) or map.relativeroom(map.currentRoom, room)
if not room or not map.roomexists(room) then
  map.echo("Sorry - which room do you want to put this character in? I don't know where you are at the moment, if you want to do the current room.")
  return
end

local char = matches[2]

if char == "clear" then
  setRoomChar(room, ' ')
  map.echo("Cleared the character from "..room.." ("..getRoomName(room)..")")
else
  setRoomChar(room, char)
  map.echo("Set the "..char:sub(1,1).." character on "..room.." ("..getRoomName(room)..")")
end
centerview(map.currentRoom)</script>
					<command></command>
					<packageName></packageName>
					<regex>^rcc ([^ ]+)(?: (\w+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add a Special Exit Alias</name>
					<script>-- spe &lt;other room&gt; &lt;command&gt; or exit special &lt;other room&gt; &lt;command&gt;, where other
-- room will specify the room to link with, and command the command to us to get
-- to that room.

-- spe clear and spe list match on this
if matches[2] == "clear" or matches[2] == "list" then return end

-- need the current room, but we're lost
if not map.currentRoom or not map.roomexists(map.currentRoom) then map.echo("Don't know where we are at the moment.") return end

local otherroom = tonumber(matches[2]) or map.relativeroom(map.currentRoom, matches[2])

-- need the another room, but it doesn't actually exist
if not otherroom or not map.roomexists(otherroom) then map.echo(matches[2].." doesn't exist.") return end

addSpecialExit(map.currentRoom, tonumber(otherroom), matches[3])
addSpecialExit(map.currentRoom, tonumber(otherroom), matches[3])
map.echo(string.format("Added special exit with command '%s' to %s (%d).", matches[3], getRoomName(otherroom), otherroom))
centerview(map.currentRoom)</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:spe|exit special) (\w+) (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add a Special Exit From One Remote Room To Another Alias</name>
					<script>-- spev &lt;from room&gt; &lt;to room&gt; &lt;command&gt; - This different than spe, which allows
-- you to link only the current room to another room - this command doesn't
-- require you to be in the starting room. 

local room1, room2 = tonumber(matches[2]), tonumber(matches[3])

if not room1 or not map.roomexists(room1) then
  map.echo("Room #"..matches[2].." doesn't exist - create it first, or make sure you got the room ID right?")
  return
end

if not room2 or not map.roomexists(room2) then
  map.echo("Room #"..matches[3].." doesn't exist - create it first, or make sure you got the room ID right?")
  return
end

addSpecialExit(room1, room2, matches[4])
map.echo(string.format("Added special exit with command '%s' to from %s (%d) to %s (%d).", matches[4], getRoomName(room1), room1, getRoomName(room2), room2))</script>
					<command></command>
					<packageName></packageName>
					<regex>^spev (\d+) (\d+) (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Clear All Special Exits Alias</name>
					<script>-- spe clear &lt;option&gt; or exit special clear &lt;option&gt; - where option is the
-- location or the ID of the room you'd like to clear all special exits in. 

-- want the current room, but we're lost
if not matches[2] and (not map.currentRoom or not map.roomexists(map.currentRoom)) then map.echo("Don't know where we are at the moment.") return end

-- want another room, but it doesn't exist
if matches[2] and tonumber(matches[2]) and not map.roomexists(matches[2]) then map.echo("v"..matches[2].." doesn't exist.") return end

-- or a relative one
if matches[2] and not tonumber(matches[2]) and not map.relativeroom(map.currentRoom, matches[2]) then map.echo("There is no room "..matches[2].. " of us.") return end

local rid = (not matches[2] and map.currentRoom or (tonumber(matches[2]) or map.relativeroom(map.currentRoom, matches[2])))

clearSpecialExits(rid)
map.echo(string.format("Cleared all special exits in %s (%d).\n", getRoomName(rid), rid))</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:spe clear|exit special clear) ?(\w+)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Move Room To Another Area Alias</name>
					<script>-- room area &lt;different area&gt; - will move the current room to another area you're in

map.roomArea(matches[2], matches[3])</script>
					<command></command>
					<packageName></packageName>
					<regex>^room area (?:v(\d+) )?(.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add a Room Label Alias</name>
					<script>-- room label &lt;optional another room ID&gt; &lt;optional foreground color&gt; &lt;optional background color&gt; my message

map.roomLabel(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^room label (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>View/delete Area Labels Alias</name>
					<script>-- area labels &lt;area name&gt; - will show the labels in the given area
map.areaLabels(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^area labels ?(.+)?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Create An Area Alias</name>
					<script>-- area add &lt;area name&gt; - will create a new area and automatically give it an ID.

local t = getAreaTable(); local tr = {}; for k,v in pairs(t) do tr[v] = k end
local newid = table.maxn(tr) + 1

setAreaName( newid, matches[2] )
map.echo(string.format("Created new area %s (%d)", matches[2], newid))
centerview(map.currentRoom)</script>
					<command></command>
					<packageName></packageName>
					<regex>^area add (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Delete An Area Alias</name>
					<script>-- area delete &lt;area name&gt; - will delete the given area

map.deleteArea(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^area delete (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Cancel Area Deletion Alias</name>
					<script>-- cancel area deletion - stop area deletion. This will not restore deleted rooms,
-- merely pauses the process.

if not map.deletingarea then map.echo("I wasn't deleting any areas already.") return end

local areaname = map.deletingarea.areaname
map.deletingarea = nil

map.echo("Stopped deleting rooms in the '"..areaname.."'. The area is partially missing its rooms now, you'll want to restart the process to finish it.")</script>
					<command></command>
					<packageName></packageName>
					<regex>^cancel area deletion$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Rename An Area Alias</name>
					<script>-- area rename &lt;new area name&gt; - will rename the current area you're in to the new name
map.renameArea(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^area rename (.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Create Map Feature Alias</name>
					<script>-- feature create &lt;feature&gt; [char &lt;room character&gt;] - will create a new map
-- feature for use on rooms. You can also optionally add a character mark to
-- the feature, which will be set when a map feature is added to a room. 
-- Note: Map feature names are not allowed to contain numbers. 

map.createMapFeature(matches[2]:trim(), (matches[3] and matches[3]:trim()))</script>
					<command></command>
					<packageName></packageName>
					<regex>^feature create (.+?)(?: char (.+))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Add Map Feature To Room Alias</name>
					<script>-- room create feature [v&lt;room id&gt;] &lt;feature&gt;* or *rcf [v&lt;room id&gt;] &lt;feature&gt;
-- adds a created map feature to the room. If the map feature is associated with
-- a character mark, it will be set on the room and existing marks get overwritten.
-- The room number to add the feature to can be given with the optional argument
-- (note that there is no space between the v and the ID). 

map.roomCreateMapFeature(matches[3], matches[2] == "" and map.currentRoom or tonumber(matches[2]))</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:room create feature|rcf) (?:v(\d+) )?(.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Delete Map Feature From Room Alias</name>
					<script>-- room delete feature [v&lt;room id&gt;] &lt;feature&gt;* or *rdf [v&lt;room id&gt;] &lt;feature&gt;
-- removes a map feature from the room. If the map feature is associated with
-- a character mark and its set on the room, a random character mark from the
-- other map features on the room is chosen to replace it. The room number to
-- delete the feature from can be given with the optional argument (note that
-- there is no space between the v and the ID). 

map.roomDeleteMapFeature(matches[3], matches[2] == "" and map.currentRoom or tonumber(matches[2]))</script>
					<command></command>
					<packageName></packageName>
					<regex>^(?:room delete feature|rdf) (?:v(\d+) )?(.+)$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Delete Map Feature Alias</name>
					<script>-- feature delete &lt;feature&gt;* deletes a map feature and removes it from all rooms

map.deleteMapFeature(matches[2]:trim())</script>
					<command></command>
					<packageName></packageName>
					<regex>^feature delete (.+)$</regex>
				</Alias>
			</AliasGroup>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Map Sharing Aliases</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Save Map Alias</name>
					<script>if saveMap(getMudletHomeDir() .. "/map.dat") then
  map.echo("Map saved.\n")
else
  map.echo("Error.  Map NOT saved.\n")
end
				</script>
					<command></command>
					<packageName></packageName>
					<regex>^map save$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Load Map Alias</name>
					<script>map.load_map(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^map load(?: (.*))?$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Import Map Area Alias</name>
					<script>map.import_area(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^map import (.*)</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Export Map Area Alias</name>
					<script>map.export_area(matches[2])</script>
					<command></command>
					<packageName></packageName>
					<regex>^map export (.*)</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
	<ActionPackage />
	<ScriptPackage>
		<Script isActive="yes" isFolder="no">
			<name>Style</name>
			<packageName></packageName>
			<script>local teststyle = [[
  QWidget#panel,
  QWidget { font-family: "monospace"; font-size: 13px },
]]

setAppStyleSheet(teststyle)</script>
			<eventHandlerList />
		</Script>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>t2t mapper</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>t2tMapper</name>
				<packageName></packageName>
				<script>--------------------------------------------------------------------------------
-------Used to perform automatic updates, if I can figure that one out----------
local version = "1.0.1"  -------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
t2tMapper = t2tMapper or {}
local profilePath = getMudletHomeDir()
profilePath = profilePath:gsub("\\", "/")
problemRooms = problemRooms or {}
if io.exists(profilePath .. "/TheTwoTowers/problemRooms.lua") then
  table.load(profilePath .. "/TheTwoTowers/problemRooms.lua", problemRooms)
end
lockedRooms = lockedRooms or {}
if io.exists(profilePath .. "/TheTwoTowers/lockedRooms.lua") then
  table.load(profilePath .. "/TheTwoTowers/lockedRooms.lua", lockedRooms)
end
t2tvars = t2tvars or {}
t2tvars.pairs = t2tvars.pairs or {}
t2tvars.lists = t2tvars.lists or {}
t2tvars.tables = t2tvars.tables or {}
if io.exists(profilePath .. "/TheTwoTowers/t2tvars.lua") then
  table.load(profilePath .. "/TheTwoTowers/t2tvars.lua", t2tvars)
end
--------------------------------------------------------------------------------
--Persistent Variable Functions
--------------------------------------------------------------------------------

function t2tvars.save()
  table.save(profilePath .. "/TheTwoTowers/t2tvars.lua", t2tvars)
end

function t2tvars.addPair(key, value)
  local newPair = {}
  newPair[key] = value
  table.insert(t2tvars.pairs, newPair)
  cecho(f"&lt;cyan&gt;Key/Value pair added to t2tvars: &lt;green&gt;Key: &lt;red&gt;{key}&lt;green&gt;, Value: &lt;red&gt;{value}&lt;green&gt;.\n")
  t2tvars.save()
end

function t2tvars.addList(name)
  local tempList = {}
  for index, list in ipairs(t2tvars.lists) do
    local listname = table.keys(list)[1]
    table.insert(tempList, listname)
  end
  if table.contains(tempList, name) then
    cecho(f"&lt;cyan&gt;t2tvars list &lt;red&gt;{name}&lt;cyan&gt; already exists.\n")
  else
    local newList = {}
    newList[name] = {}
    table.insert(t2tvars.lists, newList)
    cecho(f"&lt;cyan&gt;t2tvars list created - &lt;green&gt;Name: &lt;red&gt;{name}&lt;green&gt;.\n")
    t2tvars.save()
  end
end

function t2tvars.addListItem(name, item)
  local tempList = {}
  local listIndexNumber
  for index, list in ipairs(t2tvars.lists) do
    local listname = table.keys(list)[1]
    table.insert(tempList, listname)
  end
  if not table.contains(tempList, name) then
    cecho(f"&lt;cyan&gt;t2tvars list &lt;red&gt;{name} &lt;cyan&gt;does not exist.  Please create it first using the command &lt;yellow&gt;add list listname&lt;cyan&gt;.\n")
  else
    local listIndexes = {}
    for index, list in ipairs(t2tvars.lists) do
      listIndexes[table.keys(list)[1]] = index
    end
    listIndexNumber = listIndexes[name]
    if table.contains(t2tvars.lists[listIndexNumber][name], item) then
      cecho(f"&lt;red&gt;{item} is already in list {name}.")
    else
      table.insert(t2tvars.lists[listIndexNumber][name], item)
      cecho(f"&lt;cyan&gt;t2tvars list &lt;red&gt;{name} &lt;cyan&gt;updated with the following item: &lt;red&gt;{item}&lt;cyan&gt;.\n")
      t2tvars.save()
    end
  end
end

function t2tvars.addTable(name)
  local tempList = {}
  for index, tables in ipairs(t2tvars.tables) do
    local tableName = table.keys(tables)[1]
    table.insert(tempList, tableName)
  end
  if table.contains(tempList, name) then
    cecho(f"&lt;cyan&gt;t2tvars table &lt;red&gt;{name}&lt;cyan&gt; already exists.\n")
  else
    local newTable = {}
    newTable[name] = {}
    table.insert(t2tvars.tables, newTable)
    cecho(f"&lt;cyan&gt;t2tvars table created - &lt;green&gt;Name: &lt;red&gt;{name}&lt;green&gt;.\n")
    t2tvars.save()
  end
end

function t2tvars.addTableSet(name, setkey, setvalue)
  local tempList = {}
  local tableIndexNumber
  for index, tables in ipairs(t2tvars.tables) do
    local tableName = table.keys(tables)[1]
    table.insert(tempList, tableName)
  end
  if not table.contains(tempList, name) then
    cecho(f"&lt;cyan&gt;t2tvars table &lt;red&gt;{name} &lt;cyan&gt;does not exist.  Please create it first using the command &lt;yellow&gt;add table tablename&lt;cyan&gt;.\n")
  else
    local tableIndexes = {}
    for index, tables in ipairs(t2tvars.tables) do
      tableIndexes[table.keys(tables)[1]] = index
    end
    tableIndexNumber = tableIndexes[name]
    if table.contains(t2tvars.tables[tableIndexNumber][name], setkey) then
      cecho(f"&lt;red&gt;{setkey} is already in table {name}.")
    else
      local setPair = {}
      setPair[setkey] = setvalue
      table.insert(t2tvars.tables[tableIndexNumber][name], setPair)
      cecho(f"&lt;cyan&gt;t2tvars table &lt;red&gt;{name} &lt;cyan&gt;updated with the following set: &lt;green&gt;Key: &lt;red&gt;{setkey}&lt;green&gt;, Value: &lt;red&gt;{setvalue}&lt;green&gt;.\n")
      t2tvars.save()
    end
  end
end

function t2tvars.remPair(key)
  local keyIndex
  for index, kvpair in ipairs(t2tvars.pairs) do
    local pairKey = table.keys(kvpair)[1]
    if pairKey == key then
      keyIndex = index
    end
  end
  if keyIndex then
    table.remove(t2tvars.pairs, keyIndex)
    cecho(f"&lt;red&gt;Pair removed from t2tvars.\n")
    t2tvars.save()
  else
    cecho(f"&lt;red&gt;Pair not found in t2tvars.\n")
  end
end

function t2tvars.remList(name)
  local listIndex
  for index, list in ipairs(t2tvars.lists) do
    local listName = table.keys(list)[1]
    if listName == name then
      listIndex = index
    end
  end
  if listIndex then
    table.remove(t2tvars.lists, listIndex)
    cecho(f"&lt;red&gt;List removed from t2tvars.\n")
    t2tvars.save()
  else
    cecho(f"&lt;red&gt;List not found in t2tvars.\n")
  end
end

function t2tvars.remListItem(name, item)
  local listIndex
  for index, list in ipairs(t2tvars.lists) do
    local listName = table.keys(list)[1]
    if listName == name then
      listIndex = index
    end
  end
  if not listIndex then
    cecho(f"&lt;red&gt;List not found in t2tvars.\n")
  else
    local itemIndex
    for index, items in ipairs(t2tvars.lists[listIndex][name]) do
      local itemName = items
      if itemName == item then
        itemIndex = index
      end
    end
    if not itemIndex then
      cecho(f"&lt;red&gt;Item not found in list.\n")
    else
      table.remove(t2tvars.lists[listIndex][name], itemIndex)
      cecho(f"&lt;red&gt;Item {item} removed from list.\n")
      t2tvars.save()
    end
  end
end

function t2tvars.remTable(name)
  local tableIndex
  for index, tables in ipairs(t2tvars.tables) do
    local tableName = table.keys(tables)[1]
    if tableName == name then
      tableIndex = index
    end
  end
  if tableIndex then
    table.remove(t2tvars.tables, tableIndex)
    cecho(f"&lt;red&gt;Table removed from t2tvars.\n")
    t2tvars.save()
  else
    cecho(f"&lt;red&gt;Table not found in t2tvars.\n")
  end
end

function t2tvars.remTableSet(name, set)
  local tableIndex
  for index, tables in ipairs(t2tvars.tables) do
    local tableName = table.keys(tables)[1]
    if tableName == name then
      tableIndex = index
    end
  end
  if not tableIndex then
    cecho(f"&lt;red&gt;Table not found in t2tvars.\n")
  else
    local setIndex
    for index, sets in ipairs(t2tvars.tables[tableIndex][name]) do
      local setName = table.keys(sets)[1]
      if setName == set then
        setIndex = index
      end
    end
    if not setIndex then
      cecho(f"&lt;red&gt;Item not found in list.\n")
    else
      table.remove(t2tvars.tables[tableIndex][name], setIndex)
      cecho(f"&lt;red&gt;Set {set} removed from list.\n")
      t2tvars.save()
    end
  end
end

function t2tvars.showPairs()
  if table.is_empty(t2tvars.pairs) then
    cecho("&lt;cyan&gt;No pairs currently saved to t2tvars.\n")
  else
    cecho("&lt;cyan&gt;The following key/value pairs are saved to t2tvars.\n")
    for index, pair in ipairs(t2tvars.pairs) do
      local pairKey = table.keys(pair)[1]
      local pairValue = pair[pairKey]
      cecho(f"&lt;green&gt; {index}: &lt;red&gt;{pairKey} = {pairValue}\n")
    end
  end
end

function t2tvars.showPair(key)
  local pairValue = t2tvars.getValueFromKey(key)
  if pairValue then
    cecho(f"&lt;cyan&gt;Key: &lt;red&gt;{key} &lt;cyan&gt;Value: &lt;red&gt;{pairValue}\n")
  else
    cecho(f"&lt;cyan&gt;No pair exists with key &lt;red&gt;{key}&lt;cyan&gt;.\n")
  end
end

function t2tvars.showLists()
  if table.is_empty(t2tvars.lists) then
    cecho("&lt;cyan&gt;No lists currently saved to t2tvars.\n")
  else
    cecho("&lt;cyan&gt;The following lists are saved to t2tvars.\n")
    for index, lists in ipairs(t2tvars.lists) do
      local listName = table.keys(lists)[1]
      cecho(f"&lt;green&gt; {index}: &lt;red&gt;{listName}\n")
    end
  end
end

function t2tvars.showList(name)
  local showMe = t2tvars.getList(name)
  if showMe then
    cecho(f"&lt;cyan&gt;List &lt;red&gt;{name} &lt;cyan&gt;contains the following items:\n")
    for index, item in ipairs(showMe) do
      cecho(f" &lt;green&gt;{index}: &lt;red&gt;{item}\n")
    end
  end
end

function t2tvars.showTables()
  if table.is_empty(t2tvars.tables) then
    cecho("&lt;cyan&gt;No tables currently saved to t2tvars.\n")
  else
    cecho("&lt;cyan&gt;The following tables are saved to t2tvars.\n")
    for index, tableNames in ipairs(t2tvars.tables) do
      local tableName = table.keys(tableNames)[1]
      cecho(f"&lt;green&gt;{index}: &lt;red&gt;{tableName}\n")
    end
  end
end

function t2tvars.showTable(name)
  local showMe = t2tvars.getTable(name)
  if showMe then
    cecho(f"&lt;cyan&gt;Table &lt;red&gt;{name} &lt;cyan&gt;contains the following items:\n")
    for index, set in ipairs(showMe) do
      local setKey = table.keys(set)[1]
      local setValue = set[setKey]
      cecho(f"&lt;green&gt;Set {index}: &lt;cyan&gt;Key - &lt;red&gt;{setKey}&lt;cyan&gt;, Value - &lt;red&gt;{setValue}\n")
    end
  end
end

function t2tvars.getValueFromKey(key)
  local pairValue
  for index, kvpair in ipairs(t2tvars.pairs) do
    local pairKey = table.keys(kvpair)[1]
    if pairKey == key then
      pairValue = kvpair[pairKey]
    end
  end
  return pairValue
end

function t2tvars.getList(name)
  local returnList = {}
  local tableIndex
  for index, list in ipairs(t2tvars.lists) do
    if table.keys(list)[1] == name then
      tableIndex = index
    end
  end
  returnList = t2tvars.lists[tableIndex][name]
  return returnList
end

function t2tvars.getTable(name)
  local returnTable = {}
  local tableIndex
  for index, tables in ipairs(t2tvars.tables) do
    if table.keys(tables)[1] == name then
      tableIndex = index
    end
  end
  returnTable = t2tvars.tables[tableIndex][name]
  return returnTable
end

--------------------------------------------------------------------------------
---Common useful data sets
--------------------------------------------------------------------------------
t2tvars.avgStats = {
    [1] = 20,
    [2] = 20,
    [3] = 25,
    [4] = 30,
    [5] = 35,
    [6] = 40,
    [7] = 45,
    [8] = 50,
    [9] = 55,
    [10] = 60,
    [11] = 65,
    [12] = 70,
    [13] = 75,
    [14] = 80,
    [15] = 85,
    [16] = 90,
    [17] = 95,
    [18] = 97,
    [19] = 99,
    [20] = 100,
    [21] = 101,
    [22] = 102,
    [23] = 103,
    [24] = 104,
    [25] = 105,
}
t2tvars.expLevels = {
    [1] = [[0]],
    [2] = 500,
    [3] = 1522,
    [4] = 2283,
    [5] = 3425,
    [6] = 5138,
    [7] = 7707,
    [8] = 11561,
    [9] = 17341,
    [10] = 26012,
    [11] = 39018,
    [12] = 58527,
    [13] = 87791,
    [14] = 131687,
    [15] = 197530,
    [16] = 296296,
    [17] = 444444,
    [18] = 666666,
    [19] = 1000000,
    [20] = 1500000,
    [21] = 2250000,
    [22] = 3375000,
    [23] = 5062500,
    [24] = 7593750,
    [25] = 11390625,
}
t2tvars.alignmentTable = {
    Evilrace = 1,
    Servant = 2,
    ["Shadowspawn of Mordor"] = 3,
    Shadowspawn = 4,
    Demonic = 5,
    Villainous = 6,
    Immoral = 7,
    Impartial = 8,
    Moral = 9,
    Heroic = 10,
    Angelic = 11,
    ["Hand of Eru"] = 12,
    [1] = 'Evilrace',
    [2] = 'Servant',
    [3] = 'Shadowspawn of Mordor',
    [4] = 'Shadowspawn',
    [5] = 'Demonic',
    [6] = 'Villainous',
    [7] = 'Immoral',
    [8] = 'Impartial',
    [9] = 'Moral',
    [10] = 'Heroic',
    [11] = 'Angelic',
    [12] = 'Hand of Eru',
}
t2tvars.stubmap = {
    north = 1,
    northeast = 2,
    northwest = 3,
    east = 4,
    west = 5,
    south = 6,
    southeast = 7,
    southwest = 8,
    up = 9,
    down = 10,
    ["in"] = 11,
    out = 12,
    northup = 13,
    southdown = 14,
    southup = 15,
    northdown = 16,
    eastup = 17,
    westdown = 18,
    westup = 19,
    eastdown = 20,
    [1] = "north",
    [2] = "northeast",
    [3] = "northwest",
    [4] = "east",
    [5] = "west",
    [6] = "south",
    [7] = "southeast",
    [8] = "southwest",
    [9] = "up",
    [10] = "down",
    [11] = "in",
    [12] = "out",
    [13] = "northup",
    [14] = "southdown",
    [15] = "southup",
    [16] = "northdown",
    [17] = "eastup",
    [18] = "westdown",
    [19] = "westup",
    [20] = "eastdown",
}
t2tvars.exitmap = {
    n = 'north',
    ne = 'northeast',
    nw = 'northwest',
    e = 'east',
    w = 'west',
    s = 'south',
    se = 'southeast',
    sw = 'southwest',
    u = 'up',
    d = 'down',
    ["in"] = 'in',
    out = 'out',
    ed = 'eastdown',
    eu = 'eastup',
    nd = 'northdown',
    nu = 'northup',
    sd = 'southdown',
    su = 'southup',
    wd = 'westdown',
    wu = 'westup',
}
t2tvars.coordmap = {
    [1] = {0, 1, 0},
    [2] = {1, 1, 0},
    [3] = {-1, 1, 0},
    [4] = {1, 0, 0},
    [5] = {-1, 0, 0},
    [6] = {0, -1, 0},
    [7] = {1, -1, 0},
    [8] = {-1, -1, 0},
    [9] = {0, 0, 1},
    [10] = {0, 0, -1},
    [11] = {0, 0, 0},
    [12] = {0, 0, 0},
    [13] = {0, 1, 1},
    [14] = {0, -1, -1},
    [15] = {0, -1, 1},
    [16] = {0, 1, -1},
    [17] = {1, 0, 1},
    [18] = {-1, 0, -1},
    [19] = {-1, 0, 1},
    [20] = {1, 0, -1},
}
t2tvars.ansiTranslationTable = {
    [0] = "$0$",
    [1] = "$HIK$",
    [2] = "$BLK$",
    [3] = "$HIR$",
    [4] = "$RED$",
    [5] = "$HIG$",
    [6] = "$GRN$",
    [7] = "$HIY$",
    [8] = "$YEL$",
    [9] = "$HIB$",
    [10] = "$BLU$",
    [11] = "$HIM$",
    [12] = "$MAG$",
    [13] = "$HIC$",
    [14] = "$CYN$",
    [15] = "$HIW$",
    [16] = "$WHT$",
    ["$0$"] = 0,
    ["$HIK$"] = 1,
    ["$BLK$"] = 2,
    ["$HIR$"] = 3,
    ["$RED$"] = 4,
    ["$HIG$"] = 5,
    ["$GRN$"] = 6,
    ["$HIY$"] = 7,
    ["$YEL$"] = 8,
    ["$HIB$"] = 9,
    ["$BLU$"] = 10,
    ["$HIM$"] = 11,
    ["$MAG$"] = 12,
    ["$HIC$"] = 13,
    ["$CYN$"] = 14,
    ["$HIW$"] = 15,
    ["$WHT$"] = 16,
}
t2tvars["WaterExits"] = t2tvars["WaterExits"] or "off"
t2tvars["DeadMode"] = "off"
--------------------------------------------------------------------------------
--Variable tables used for later mapper functions
--------------------------------------------------------------------------------
local alignmentTable = t2tvars.alignmentTable
local stubmap = t2tvars.stubmap
local exitmap = t2tvars.exitmap
local coordmap = t2tvars.coordmap
--------------------------------------------------------------------------------
--Map Setup Functions
--------------------------------------------------------------------------------

function t2tMapper.setup()
  send("brief on")
  send("charset UTF-8")
  map.setConfigs("speedwalk_wait", "true")
  map.setConfigs("speedwalk delay", "0")
  map.setConfigs("search on look", "false")
  map.setConfigs("stretch_map", "false")
  disableTrigger("English Trigger Group")
  disableTrigger("Russian Trigger Group")
  disableTrigger("Chinese Trigger Group")
end

function t2tMapper.addPrompt(pattern)
  if not table.contains(map.configs.prompt_test_patterns, pattern) then
    table.insert(map.configs.prompt_test_patterns, pattern)
    map.echo("Prompt pattern added to list: " .. pattern)
  else
    table.remove(map.configs.prompt_test_patterns, table.index_of(map.configs.prompt_test_patterns, val))
    map.echo("Prompt pattern removed from list: " .. pattern)
  end
  table.save(profilePath .. "/map downloads/configs.lua", map.configs)
end

function t2tMapper.returnPromptPattern(prompt)
  local replacement = utf8.gsub(prompt, '[%(%)%.%%%+%-%*%?%[%]%\\%/%|%^%$%"%{%}]', '%%%1')
  local replacement = utf8.gsub(replacement, '%d+', '%%d+')
  local replacement = utf8.gsub(replacement, 'WA', '%%w+')
  local replacement = utf8.gsub(replacement, 'ROV', '%%w+')
  local replacement = utf8.gsub(replacement, 'LOT', '%%w+')
  local replacement = utf8.gsub(replacement, 'NER', '%%w+')
  local replacement = utf8.gsub(replacement, 'RHU', '%%w+')
  local replacement = utf8.gsub(replacement, 'SOR', '%%w+')
  local replacement = utf8.gsub(replacement, 'ROH', '%%w+')
  local replacement = utf8.gsub(replacement, 'GON', '%%w+')
  local replacement = utf8.gsub(replacement, 'SG', '%%w+')
  local replacement = utf8.gsub(replacement, 'MOR', '%%w+')
  local replacement = utf8.gsub(replacement, 'HAR', '%%w+')
  local replacement = utf8.gsub(replacement, 'UMB', '%%w+')
  local replacement = utf8.gsub(replacement, 'NH', '%%w+')
  local replacement = utf8.gsub(replacement, 'FH', '%%w+')
  local replacement = utf8.gsub(replacement, 'KD', '%%w+')
  return replacement
end

function t2tMapper.updateGenericMapper()
  t2tMapper.updateGenericMapperForRoomScripts()
  t2tMapper.removeLookFromGenericMapper()
  t2tMapper.updateGenericMapperForSpecialExits()
end

function t2tMapper.updateGenericMapperForRoomScripts()
  local map_script = getScript("Map Script")
  local matchCount = 0
  for match in string.gmatch(map_script, "onCheckRoomScript") do
    matchCount = matchCount + 1
  end
  if matchCount == 0 then
    local map_script_update = string.gsub(map_script,"        move_map%(%)","        move_map()\n\t\t\t\traiseEvent('onCheckRoomScript')")
    setScript("Map Script", map_script_update)
  end
end

function t2tMapper.removeLookFromGenericMapper()
  local map_script = getScript("Map Script")
  local matchCount = 0
  for match in string.gmatch(map_script, "l = 'look',") do
    matchCount = matchCount + 1
  end
  if matchCount == 1 then
    local map_script_update = string.gsub(map_script, "l = 'look',", "")
    setScript("Map Script", map_script_update)
  end
end

function t2tMapper.updateGenericMapperForSpecialExits()
  local map_script = getScript("Map Script")
  local matchCount = 0
  local updatedCount = 0
  for match in string.gmatch(map_script, "local special = getSpecialExitsSwap%(map.currentRoom%) or %{%}") do
    matchCount = matchCount + 1
  end
  for match in string.gmatch(map_script, "if not configs.speedwalk_wait") do
    updatedCount = updatedCount + 1
  end
  if matchCount == 1 and updatedCount == 0 then
    local map_script_update = string.gsub(map_script,"local special = getSpecialExitsSwap%(map.currentRoom%) or %{%}","%1\n\t\t\t\tif not configs.speedwalk_wait and speedWalkPath then\n\t\t\t\t\t\tfor index, room in ipairs(speedWalkPath) do\n\t\t\t\t\t\t\tspecial = table.union(special,getSpecialExitsSwap(room))\n\t\t\t\t\t\tend\n\t\t\t\tend")
    setScript("Map Script", map_script_update)
  end
end

--------------------------------------------------------------------------------
--Helper functions used later to assist in speedwalking and room teleportation
--------------------------------------------------------------------------------

function t2tMapper.returnPath(start, finish)
  local startRoom = t2tMapper.parseRoomAsShortOrID(start)
  local finishRoom = t2tMapper.parseRoomAsShortOrID(finish)
  local path, pathString
  if getPath(startRoom, finishRoom) then
    path = translateTable(speedWalkDir)
  end
  path = table.collapse(path)
  path = table.concat(path, ",")
  pathString = f"{path}"
  return pathString
end

function t2tMapper.returnRoomFromShort(short)
  local shortNames = shortsTable
  if shortNames[short] then
    return shortNames[short]
  end
  --local roomTable = searchRoomUserData('short', short)
  --local roomID
  --if table.size(roomTable) == 1 then
  --  roomID = tonumber(table.concat(roomTable))
  --  return roomID
  --end
end

function t2tMapper.parseRoomAsShortOrID(room)
  local roomValue
  if tonumber(room) then
    roomValue = tonumber(room)
  elseif tostring(room) and t2tMapper.returnRoomFromShort(room) then
    roomValue = t2tMapper.returnRoomFromShort(room)
  end
  if roomValue then
    if roomExists(roomValue) then
      return roomValue
    end
  end
end

function t2tMapper.returnRoomUserDataValue(room, key)
  if getRoomUserData(room, key) and getRoomUserData(room, key) ~= "" then
    local value = getRoomUserData(room, key)
    return value
  end
end

function t2tMapper.getAllExits(roomID)
  local standardExits = getRoomExits(roomID)
  local specialExits = getSpecialExitsSwap(roomID)
  local stubExits = t2tMapper.getStubExits(roomID)
  local allExits = table.union(standardExits, specialExits, stubExits)
  return allExits
end

function t2tMapper.getStubExits(roomID)
  local stubExitTable = {}
  if getExitStubs1(roomID) then
    for index, stub in ipairs(getExitStubs1(roomID)) do
      stubExitTable[stubmap[stub]] = ""
    end
  end
  return stubExitTable
end

function t2tMapper.getRoomID(name)
  local searchname = name
  local roomResults = searchRoom(searchname, true, true)
  if not table.is_empty(roomResults) then
    cecho(f"\n&lt;cyan&gt;Rooms matching the name {name}:\n")
    for k, v in pairs(roomResults) do
      cecho(f"\n&lt;red&gt;{k}")
    end
  else
    cecho(f"\n&lt;cyan&gt;No rooms found with name {name}")
  end
end

function t2tMapper.returnAreaId(areaname)
  local area = getRoomAreaName(areaname)
  return area
end

function table.collapse(tbl)
  local result = {}
  local last = ""
  local count = 0
  for _, item in ipairs(tbl) do
    if #result == 0 or last ~= item then
      count = 1
      last = item
      result[#result+1] = item
    else
      if count &lt; 40 then
        count = count + 1
        result[#result] = count .. item
      else
        count = 1
        last = item
        result[#result+1] = item
      end
    end
  end
  return result
end

--------------------------------------------------------------------------------
--Room Shorts (short names for speedwalking and teleportation
--------------------------------------------------------------------------------

shortsTable = shortsTable or {}

function t2tMapper.pullShorts()
  shortsTable = {}
  local roomTable = getRooms()
  for id, name in pairs(roomTable) do
    if getRoomUserData(id, "short") ~= "" then
      local shortName = getRoomUserData(id, "short")
      shortsTable[shortName] = id
    end
  end
end

function t2tMapper.returnShort(room)
  local short = t2tMapper.returnRoomUserDataValue(room, 'short')
  return short
end

function t2tMapper.setRoomShort(room, short)
  if t2tMapper.parseRoomAsShortOrID(short) then
    cecho(f"&lt;cyan&gt;Cannot add short &lt;red&gt;{short} &lt;cyan&gt;to room: &lt;red&gt;{room} &lt;cyan&gt;- Short: &lt;red&gt;{short} &lt;cyan&gt;already assigned to room: &lt;red&gt;{t2tMapper.parseRoomAsShortOrID(short)}\n")
  else
    setRoomUserData(room, 'short', short)
    cecho(f"&lt;cyan&gt;Shortname &lt;green&gt;{short} &lt;cyan&gt;added for room: &lt;green&gt;{room}&lt;reset&gt;.\n")
  end
  t2tMapper.pullShorts()
end

function t2tMapper.clearRoomShort(room)
  clearRoomUserDataItem(room, 'short')
  t2tMapper.pullShorts()
end

--This function checks to see if a 'short' is set to the current room and
--displays it if it exists.

function t2tMapper.checkRoom()
  if map.currentRoom then
    local shortString = ""
    if t2tMapper.returnShort(map.currentRoom) then
      local short = t2tMapper.returnShort(map.currentRoom)
      shortString = f"&lt;ansi_light_white&gt;-(&lt;cyan&gt;{short}&lt;ansi_light_white&gt;)-&lt;reset&gt;"
    end
    if shortString:len() ~= 0 then
      --if isWalking then
      --  cecho(f"{shortString}")
      --else
      --  cecho(f"\n{shortString}")
      --end
      cecho(f"\n{shortString}")
    end
  end
end

--------------------------------------------------------------------------------
--Speedwalking and Teleportation Functions
--------------------------------------------------------------------------------

function t2tMapper.go(dest)
  local roomDestination = nil
  local roomDestination = t2tMapper.parseRoomAsShortOrID(dest)
  if roomDestination ~= nil then
    map.speedwalk(roomDestination)
    raiseEvent("sysSpeedwalkStarted")
  else
    cecho("&lt;red&gt;Room not found")
  end
end

function t2tMapper.tele(dest, verbose)
  local quietMode
  if verbose then
    quietMode = verbose
  else
    quietMode = false
  end
  local roomDestination = nil
  local roomDestination = t2tMapper.parseRoomAsShortOrID(dest)
  if roomDestination == map.currentRoom then
    if not quietMode then
      cecho("&lt;cyan&gt;You're already there!")
    end
  elseif roomDestination ~= nil then
    map.set("currentRoom", roomDestination)
    map.set("currentArea", getRoomArea(roomDestination))
    centerview(map.currentRoom)
    raiseEvent("onMoveMap", map.currentRoom)
    if not quietMode then
      cecho(f"&lt;cyan&gt;\nMoving map to {getRoomName(map.currentRoom)}.")
    end
    map.clear_moves()
  else
    cecho("&lt;red&gt;Room not found.")
  end
end

--------------------------------------------------------------------------------
--Problem Rooms Functions
--------------------------------------------------------------------------------

function t2tMapper.addProb(trueName, replaceName, trueExits, replaceExits)
  if trueExits and trueExits ~= "" then
    local trueExits = string.lower(trueExits)
    trueExits = string.gsub(trueExits, "%a+", exitmap)
    trueExits = string.gsub(trueExits, ",", "")
    trueExits = string.gsub(trueExits, "and ", "")
    trueExits = string.split(trueExits)
    table.sort(trueExits)
    trueExits = table.concat(trueExits, " ")
    cecho(f"\n&lt;cyan&gt;Problem Room ({trueName})/({replaceName}) added, with exits ({trueExits})/({replaceExits}).\n")
  else
    cecho(f"\n&lt;cyan&gt;Problem Room ({trueName})/({replaceName}) added.\n")
  end
  local roomData =  {
    roomName = trueName, 
    newName = replaceName, 
    exits = trueExits, 
    newExits = replaceExits
  }
  table.insert(problemRooms, roomData)
  t2tMapper.saveProbs()
end

function t2tMapper.saveProbs()
  table.save(profilePath .. "/TheTwoTowers/problemRooms.lua", problemRooms)
end

function t2tMapper.remProb(roomEntry)
  table.remove(problemRooms, roomEntry)
end

function t2tMapper.showProbs()
  local problemRooms = problemRooms
  cecho("&lt;cyan&gt;Problem Rooms/Exits:\n")
  if table.is_empty(problemRooms) then
    cecho("&lt;red&gt;No rooms added.\n")
  else
    for i, k in ipairs(problemRooms) do
      cecho(f"\n&lt;green&gt;{i} &lt;cyan&gt;Old name: &lt;red&gt;{k.roomName}&lt;reset&gt;, &lt;cyan&gt;New name: &lt;red&gt;{k.newName}\n&lt;ansi_green&gt;    Old Exits: &lt;ansi_red&gt;{k.exits}&lt;reset&gt;, &lt;ansi_green&gt;New Exits: &lt;ansi_red&gt;{k.newExits}\n&lt;reset&gt;--------------------------------------------------------------------------------")
    end
  end
end

function t2tMapper.checkProbRoom(room)
  local problemRooms = problemRooms
  for i, k in ipairs(problemRooms) do
    if k.roomName == room then
      return true
    end
  end
end

function t2tMapper.checkProbExits(room, exits)
  local problemRooms = problemRooms
  exits = string.lower(exits)
  exits = string.gsub(exits, "%a+", exitmap)
  exits = string.gsub(exits, ",", "")
  exits = string.gsub(exits, "and ", "")
  exits = string.split(exits)
  table.sort(exits)
  exits = table.concat(exits, " ")
  for i, k in ipairs(problemRooms) do
    exitList = string.split(k.exits)
    table.sort(exitList)
    exitList = table.concat(exitList, " ")
    if k.roomName == room and exitList == exits then
      return true
    end
  end
end

function t2tMapper.getNewRoom(room, exits)
  local problemRooms = problemRooms
  exits = string.lower(exits)
  exits = string.gsub(exits, "%a+", exitmap)
  exits = string.gsub(exits, ",", "")
  exits = string.gsub(exits, "and ", "")
  exits = string.split(exits)
  table.sort(exits)
  exits = table.concat(exits, " ")
  for i, k in ipairs(problemRooms) do
    local exitList = string.split(k.exits)
    table.sort(exitList)
    exitList = table.concat(exitList, " ")
    if k.roomName == room and exitList == exits then
      return k.newName, k.newExits
    elseif k.roomName == room and exits == "" then
      return k.newName
    end
  end
end

function t2tMapper.checkPR(roomName)
  if t2tMapper.checkProbRoom(roomName) then
    if t2tMapper.checkProbExits(roomName, map.prompt.exits) then
      map.prompt.room, map.prompt.exits = t2tMapper.getNewRoom(roomName, map.prompt.exits)
    elseif t2tMapper.checkProbExits(roomName, "") then
      map.prompt.room = t2tMapper.getNewRoom(roomName, "")
    else
      map.prompt.room = roomName
    end
  else
    map.prompt.room = roomName
  end
  raiseEvent("onNewRoom")
  raiseEvent("onCheckRoom")
end

--------------------------------------------------------------------------------
--Locked Rooms Functions
--------------------------------------------------------------------------------

function t2tMapper.saveLocked()
  table.save(profilePath .. "/TheTwoTowers/lockedRooms.lua", lockedRooms)
end

function t2tMapper.clearAlign()
  trueAlign = nil
  disguisedAlign = nil
  evilRace = nil
  servant = nil
end

function t2tMapper.setTrue(align)
  for k, v in pairs(alignmentTable) do
    if v == align then
      trueAlign = k
    end
  end
end

function t2tMapper.setDisguised(align)
  for k, v in pairs(alignmentTable) do
    if v == align then
      disguisedAlign = k
    end
  end
end

function t2tMapper.addLocked(roomID, exitDir, alignMin, alignMax)
  roomID = tostring(roomID)
  local roomTable = {room = roomID, exit = exitDir, minAlign = alignMin, maxAlign = alignMax}
  if not table.contains(lockedRooms, roomID) then
    table.insert(lockedRooms, roomTable)
    cecho(f"&lt;cyan&gt;Room ID: &lt;red&gt;{roomID}&lt;cyan&gt;, Exit: &lt;red&gt;{exitDir} &lt;cyan&gt;added, with unlocked range of &lt;red&gt;{alignMin} &lt;cyan&gt;to &lt;red&gt;{alignMax}.\n")
  end
  t2tMapper.saveLocked()
end

function t2tMapper.removeLocked(room)
  local roomID = tostring(room)
  if table.contains(lockedRooms, roomID) then
    for key, group in ipairs(lockedRooms) do
      if group.room == roomID then
        table.remove(lockedRooms, key)
        cecho(f"&lt;cyan&gt;Room ID: &lt;red&gt;{roomID}&lt;cyan&gt; removed from list of locked rooms.\n")
      end
    end
    t2tMapper.saveLocked()
  else
    cecho(f"&lt;cyan&gt;Room ID: &lt;red&gt;{roomID}&lt;cyan&gt; not found on list.\n")
  end
end

function t2tMapper.isLocked(room)
  local roomID = t2tMapper.parseRoomAsShortOrID(room)
  local exitLocks = {}
  local allExits = t2tMapper.getAllExits(roomID)
  for exit, toRoom in pairs(allExits) do
    if stubmap[exit] then
      if hasExitLock(roomID, exit) then
        exitLocks[exit] = true
      end
    else
      if hasSpecialExitLock(roomID, getSpecialExitsSwap(room)[exit], exit) then
        exitLocks[exit] = true
      end
    end
  end
  if roomLocked(roomID) then
    exitLocks["self"] = true
  end
  return exitLocks
end

function t2tMapper.getAllLocks()
  local roomList = getRooms()
  local lockList = {}
  for id, name in pairs(roomList) do
    if not table.is_empty(t2tMapper.isLocked(id)) then
      lockList[id] = table.keys(t2tMapper.isLocked(id))
    end
  end
  return lockList
end

function t2tMapper.displayRoomLocks(room)
  local roomID = t2tMapper.parseRoomAsShortOrID(room)
  local locked = t2tMapper.isLocked(roomID)
  if table.is_empty(locked) then
    cecho(f"&lt;cyan&gt;Room: &lt;red&gt;{roomID}&lt;cyan&gt;, &lt;red&gt;'{getRoomName(roomID)}'&lt;cyan&gt;, has no locks.\n")
  else
    cecho(f"&lt;cyan&gt;Room: &lt;red&gt;{roomID}&lt;cyan&gt;, &lt;red&gt;'{getRoomName(roomID)}'&lt;cyan&gt;, has the following locks:\n")
    for exit in pairs(locked) do
      if exit == "self" then
        cecho("&lt;red&gt;Room itself locked.\n")
      else
        cecho(f"&lt;red&gt;Exit: {exit} - is locked.\n")
      end
    end
  end
end

function t2tMapper.displayAllLocks()
  local allRoomLocks = t2tMapper.getAllLocks()
  if table.is_empty(allRoomLocks) then
    cecho(f"&lt;cyan&gt;There are currently no rooms or exits locked.\n")
  else
    cecho(f"&lt;cyan&gt;The following locks are in place:\n")
    for room, exits in pairs(allRoomLocks) do
      for exitNames, exitList in pairs(exits) do
        if exitList == "self" then
          cecho(f"&lt;cyan&gt;RoomID: &lt;red&gt;{room}, &lt;cyan&gt;Name: &lt;red&gt;{getRoomName(room)}, &lt;cyan&gt;is &lt;red&gt;itself &lt;cyan&gt;locked.\n")
        else
          cecho(f"&lt;cyan&gt;RoomID: &lt;red&gt;{room}, &lt;cyan&gt;Name: &lt;red&gt;{getRoomName(room)}, &lt;cyan&gt;Exit: &lt;red&gt;{exitList} &lt;cyan&gt;is locked.\n")
        end
      end
    end
  end
end

function t2tMapper.showLocked()
  cecho("&lt;cyan&gt;Rooms Locked by Alignment:\n")
  if table.is_empty(lockedRooms) then
    cecho("&lt;red&gt;No rooms locked.\n")
  else
    for number, group in ipairs(lockedRooms) do
      cecho(f"&lt;green&gt;{number}) &lt;cyan&gt;Room ID: &lt;red&gt;{group.room}&lt;reset&gt;, &lt;cyan&gt;Name: &lt;red&gt;{getRoomName(tostring(group.room))}&lt;reset&gt;, &lt;cyan&gt;Exit: &lt;red&gt;{group.exit}&lt;reset&gt;, &lt;cyan&gt;Min Align: &lt;red&gt;{group.minAlign}&lt;reset&gt;, &lt;cyan&gt;Max Align: &lt;red&gt;{group.maxAlign}&lt;reset&gt;\n")
    end
  end
end

function t2tMapper.setMapAlign()
  local exitName
  if evilRace then
    trueAlign = 1
  end
  if servant then
    trueAlign = 2
  end
  for key, group in ipairs(lockedRooms) do
    roomValue = tonumber(group.room)
    local minAlignValue = alignmentTable[group.minAlign]
    local maxAlignValue = alignmentTable[group.maxAlign]
    if disguisedAlign then
      if (disguisedAlign &gt;= minAlignValue) and (disguisedAlign &lt;= maxAlignValue) then
        if stubmap[group.exit] then
          lockExit(roomValue, stubmap[group.exit], false)
        else
          lockSpecialExit(roomValue, getSpecialExitsSwap(roomValue)[group.exit], group.exit, false)
        end
      else
        if stubmap[group.exit] then
          lockExit(roomValue, stubmap[group.exit], true)
        else
          lockSpecialExit(roomValue, getSpecialExitsSwap(roomValue)[group.exit], group.exit, true)
        end
      end
    else
      if (trueAlign &gt;= minAlignValue) and (trueAlign &lt;= maxAlignValue) then
        if stubmap[group.exit] then
          lockExit(roomValue, stubmap[group.exit], false)
        else
          lockSpecialExit(roomValue, getSpecialExitsSwap(roomValue)[group.exit], group.exit, false)
        end
      else
        if stubmap[group.exit] then
          lockExit(roomValue, stubmap[group.exit], true)
        else
          lockSpecialExit(roomValue, getSpecialExitsSwap(roomValue)[group.exit], group.exit, true)
        end
      end
    end
  end
  disableTrigger("Align Results")
end

--------------------------------------------------------------------------------
--Water Exit Compatibility
--------------------------------------------------------------------------------



--------------------------------------------------------------------------------
--Room Scripts - Abuse and it's on you.
--Required for rooms that are technically rooms but have no exits and your
--movement through them is controlled by the game, rather than through your
--actions
--Example: You actually pass through 3 rooms between digging at DDM and reaching
--the top in front of the bridge
--------------------------------------------------------------------------------

function t2tMapper.setRoomScript(room, script)
  setRoomUserData(room, 'script', script)
end

function t2tMapper.returnScript(room)
  local script = t2tMapper.returnRoomUserDataValue(room, 'script')
  return script
end

function t2tMapper.clearRoomScript(room)
  clearRoomUserDataItem(room, 'script')
end

function t2tMapper.runStringAsScript(roomScript)
  local f, e = loadstring("return " .. roomScript)
  if not f then
    f, e = assert(loadstring(roomScript))
  end
  f()
end

function t2tMapper.runRoomScript()
  if map.currentRoom then
    if t2tMapper.returnScript(map.currentRoom) then
      local script = t2tMapper.returnScript(map.currentRoom)
      t2tMapper.runStringAsScript(script)
    end
  end
end

function t2tMapper.addEnc(room, regex)
  local roomID = t2tMapper.parseRoomAsShortOrID(room)
  local triggerName = "room" .. tostring(roomID) .. "trig"
  local killLine = f"if {triggerName} then killTrigger({triggerName}) end"
  local triggerLine = f"{triggerName} = tempRegexTrigger('{regex}',function() send('enc') end,1)"
  local encScript = f"{killLine}" .. f"{triggerLine}"
  t2tMapper.setRoomScript(room, encScript)
end

function t2tMapper.returnAllScripts()
  local roomList = getRooms()
  local roomsWithScripts = {}
  for id, name in pairs(roomList) do
    if t2tMapper.returnScript(id) then
      roomsWithScripts[id] = t2tMapper.returnScript(id)
    end
  end
  return roomsWithScripts
end

--------------------------------------------------------------------------------
--Room Attributes
--------------------------------------------------------------------------------

function t2tMapper.massColor(roomgroup, ansicolor)
  local roomList = getRooms()
  for id, name in pairs(roomList) do
    if name == roomgroup then
      setRoomEnv(id, ansicolor)
    end
  end
end

function t2tMapper.massWeight(roomgroup, newWeight)
  local roomList = getRooms()
  for id, name in pairs(roomList) do
    if name == roomgroup then
      setRoomWeight(id, newWeight)
    end
  end
end

--------------------------------------------------------------------------------
--Interaction with built in Mudlet Generic Gapper
--------------------------------------------------------------------------------
lastMove = nil

function t2tMapper.capture_move_cmd(input)
  if map.currentRoom then
    if string.starts(input,"launch") and input ~= command then
      --cecho("&lt;cyan&gt;launch triggered\n")
      local launchDir = string.gsub(input,"launch ","")
      t2tMapper.speedWalkLaunch(launchDir)
    end
    if string.starts(input,"land") and input ~= command then
      --cecho("&lt;cyan&gt;land triggered\n")
      local landDir = string.gsub(input,"land ","")
      t2tMapper.speedWalkLand(landDir)
    end
    local allExits = t2tMapper.getAllExits(map.currentRoom)
    local dir = string.lower(input)
    if exitmap[dir] then
      dir = exitmap[dir]
    end
    if allExits[dir] then
      lastMove = dir
      hasMoved = true
    else
      hasMoved = false
    end
  end
end

function t2tMapper.manualMoveMap(dir)
  local longDir
  if exitmap[dir] then
    longDir = exitmap[dir]
  else
    longDir = dir
  end
  local currentExits = t2tMapper.getAllExits(map.currentRoom)
  if currentExits[longDir] then
    local nextRoom = tonumber(currentExits[longDir])
    local nextExits = t2tMapper.getAllExits(nextRoom)
    map.prompt.room = getRoomName(nextRoom)
    map.prompt.exits = table.concat(table.keys(nextExits), " ")
    raiseEvent("sysDataSendRequest", dir)
    raiseEvent("onNewRoom")
  else
    cecho(f"&lt;ansi_light_cyan&gt;Exit: &lt;ansi_light_red&gt;{longDir} &lt;ansi_light_cyan&gt;not found.\n.")
  end
end

function t2tMapper.centerMapView(dest)
  local cvRoom = t2tMapper.parseRoomAsShortOrID(dest)
  if cvRoom then
    centerview(cvRoom)
  else
    cecho("&lt;red&gt;Room not found\n")
  end
end

--------------------------------------------------------------------------------
--Map Window
--------------------------------------------------------------------------------
local EMCO = require("TheTwoTowers.emco")
mapCon = mapCon or Adjustable.Container:new({
  name = "MapCon", 
  consoleContainerCSS = stylesheet
})
local stylesheet = [[background-color: rgb(0,180,0,255); border-width: 1px; border-style: solid; border-color: gold; border-radius: 8px;]]
local istylesheet = [[background-color: rgb(60,60,60,255); border-width: 1px; border-style: solid; border-color: gold; border-radius: 8px;]]
registerMapInfo("Custom", function(roomId) return string.format(" %s - %d (%s)", getRoomName(roomId), roomId, getRoomAreaName(getRoomArea(roomId))),true,false,0,255,0 end)
disableMapInfo("Short")
mapwindow = Geyser.Mapper:new({
  name = "MapWindow", 
  x = "0%", 
  y = "0%", 
  width = "100%", 
  height = "100%"
}, mapCon)
addMapEvent("Copy Room IDs", "onCopyRooms")
addMapEvent("Safe Delete", "onSafeDelete")

local function safeDelete(ids)
  local ids = getMapSelection()["rooms"]
  for _, id in ipairs(ids) do
    id = tonumber(id)
    local rooms = {}
    for _, room in ipairs(getAllRoomEntrances(id)) do
      for dir, exit in pairs(getRoomExits(room)) do
        if exit == id then
          if rooms[room] then
            if type(rooms[room]) == "table" then
              table.insert(rooms[room], dir)
            else
              rooms[room] = {rooms[room], dir}
            end
          else
            rooms[room] = dir
          end
        end
      end
    end
    deleteRoom(id)
    for rid, dirs in pairs(rooms) do
      if type(dirs) == "table" then
        for _, dir in ipairs(dirs) do
          setExitStub(rid, dir, true)
        end
      else
        setExitStub(rid, dirs, true)
      end
    end
  end
  updateMap()
end

t2tMapper.roomIds = t2tMapper.roomIds or {}

local function copyRoomIDs()
  t2tMapper.roomIDs = getMapSelection()["rooms"]
end

--function resizeEvent( event, x, y, windowname )
--  echo("RESIZE EVENT: event="..event.." x="..x.." y="..y.." windowname="..windowname.."\n")
--end
--------------------------------------------------------------------------------
--Event Handler
--------------------------------------------------------------------------------

function t2tMapper.eventHandler(event, ...)
  if event == "onClearAlign" then
    t2tMapper.clearAlign()
  elseif event == "onDisguisedAlign" then
    t2tMapper.setDisguised(arg[1])
  elseif event == "onTrueAlign" then
    t2tMapper.setTrue(arg[1])
  elseif event == "onMapAlign" then
    t2tMapper.setMapAlign()
  elseif event == "onCheckRoom" then
    t2tMapper.checkRoom()
  elseif event == "onCheckRoomScript" then
    t2tMapper.runRoomScript()
  elseif event == "onManualMove" then
    t2tMapper.manualMoveMap(arg[1])
  elseif event == "sysLoadEvent" then
    t2tMapper.pullShorts()
    tempTimer(4,function() hecho("#E0FFFFMap System for The Two Towers Mud loaded. Please use #EED202t2t help #E0FFFFto get started.|r\n") end)
  elseif event == "sysDataSendRequest" then
    t2tMapper.capture_move_cmd(arg[1])
  elseif event == "onSafeDelete" then
    safeDelete(arg)
  elseif event == "sysSpeedwalkStarted" then
    isWalking = true
  elseif event == "sysSpeedwalkResumed" then
    isWalking = true
  elseif event == "sysSpeedwalkPaused" then
    isWalking = false
  elseif event == "sysSpeedwalkStopped" then
    isWalking = false
  elseif event == "sysSpeedwalkFinished" then
    isWalking = false
  elseif event == "onCopyRooms" then
    copyRoomIDs()
  end
end

t2tMapper.registeredEvents =
  {
    registerAnonymousEventHandler("onClearAlign", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("onDisguisedAlign", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("onTrueAlign", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("onMapAlign", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("onCheckRoom", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("onCheckRoomScript", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("sysLoadEvent", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("sysDataSendRequest", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("onManualMove", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("onCopyRooms", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("onSafeDelete", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("sysSpeedwalkStarted", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("sysSpeedwalkStopped", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("sysSpeedwalkPaused", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("sysSpeedwalkResumed", "t2tMapper.eventHandler"),
    registerAnonymousEventHandler("sysSpeedwalkFinished", "t2tMapper.eventHandler"),
  }

function t2tMapper.convertAliasesToShorts()
  local roomTable = getRooms()
  for id, name in pairs(roomTable) do
    if getRoomUserData(id, 'alias') then
      setRoomUserData(id, 'short', getRoomUserData(id, 'alias'))
    end
  end
end

function t2tMapper.getAdjacentAreas(areaID)
  local roomTable = getAreaExits(areaID, true)
  local adjacentAreas = {}
  for room, exits in pairs(roomTable) do
    for exitDir, exitRoom in pairs(exits) do
      adjacentAreas[#adjacentAreas + 1] = getRoomArea(exitRoom)
    end
  end
  table.sort(adjacentAreas)
  local tempTbl = {}
  local noDupes = {}
  for _, area in ipairs(adjacentAreas) do
    if not tempTbl[area] then
      noDupes[#noDupes + 1] = area
      tempTbl[area] = true
    end
  end
  return noDupes
end

function t2tMapper.getLandLaunchRoom(dir)
  local currentRoom = map.currentRoom
  local xCurrent, yCurrent, zCurrent = getRoomCoordinates(currentRoom)
  local adjAreas = t2tMapper.getAdjacentAreas(map.currentArea)
  local toRoom
  local xDir, yDir, zDir
  local matchingRooms = {}
  local special = getSpecialExitsSwap(map.currentRoom)
  if exitmap[dir] then dir = exitmap[dir] end
  if stubmap[dir] then
    local dirID = stubmap[dir]
    local xCoord = coordmap[dirID][1]
    local yCoord = coordmap[dirID][2]
    local zCoord = coordmap[dirID][3]
    xDir = xCurrent + xCoord
    yDir = yCurrent + yCoord
    zDir = zCurrent + zCoord
  end
  if special[dir] then return special[dir]
  elseif stubmap[dir] then
    if not table.is_empty(getRoomsByPosition(map.currentArea, xDir, yDir, zDir)) then
      matchingRooms[#matchingRooms + 1] = getRoomsByPosition(map.currentArea, xDir, yDir, zDir)[0]
    else
      for index, area in ipairs(adjAreas) do
        if getRoomsByPosition(area, xDir, yDir, zDir) then
          matchingRooms[#matchingRooms + 1] = getRoomsByPosition(area, xDir, yDir, zDir)[0]
        end
      end
    end
  end
  if #matchingRooms == 1 then
    return matchingRooms[1]
  end
end

function t2tMapper.launch(dir)
  local toRoom = t2tMapper.getLandLaunchRoom(dir)
  if toRoom and getRoomUserData(toRoom, "water") == "true" then
    if launchSuccess then killTrigger(launchSuccess) end
    if launchFailure then killTrigger(launchFailure) end
    if notBoarded then killTrigger(notBoarded) end
    if noBoat then killTrigger(noBoat) end
    launchSuccess = tempRegexTrigger("^You shove .+ into the water.", function()
      t2tvars["WaterExits"] = "on"
      cecho(f"\n&lt;cyan&gt;Water exits are {t2tvars.WaterExits}\n")
      t2tMapper.tele(toRoom)
      killTrigger(launchFailure)
      killTrigger(notBoarded)
      killTrigger(noBoat)
    end,1)
    launchFailure = tempRegexTrigger("^You cannot launch in that direction.", function()
      killTrigger(launchSuccess)
      killTrigger(notBoarded)
      killTrigger(noBoat)
    end,1)
    notBoarded = tempRegexTrigger("^You'll have to board", function()
      killTrigger(launchSuccess)
      killTrigger(launchFailure)
      killTrigger(noBoat)
    end,1)
    noBoat = tempRegexTrigger("^What\?", function()
      killTrigger(launchSuccess)
      killTrigger(launchFailure)
      killTrigger(notBoarded)
    end,1)
    send(f"launch {dir}")
  else
    cecho(f"&lt;cyan&gt;Land/Launch with the mapper failed for one of the following reasons:\n")
    cecho(f"&lt;red&gt;  This is not a valid water exit.\n")
    cecho(f"&lt;red&gt;  The room has not been mapped.\n")
    cecho(f"&lt;red&gt;  The room leads to an adjacent area and there are too many possibilities to match.\n")
    cecho(f"&lt;red&gt;  If you used a special exit(anything other than n,ne,e,se,s,sw,w,nw,in,out), it has not been mapped or the exit is incorrect.\n")
    cecho(f"&lt;green&gt;To correct this, try the following:\n")
    cecho(f"&lt;green&gt;  Double check that you entered the correct direction.\n")
    cecho(f"&lt;green&gt;  Add the room to the map.\n")
    cecho(f"&lt;green&gt;  If neither of these are appropriate, disable the land/launch script intercepts with &lt;yellow&gt;landlaunch off&lt;green&gt; and make sure you are in the correct mapper mode by using &lt;yellow&gt;water on&lt;green&gt; to use water exits or &lt;yellow&gt;water off&lt;green&gt; to use land exits.\n")
  end
end

function t2tMapper.land(dir)
  local toRoom = t2tMapper.getLandLaunchRoom(dir)
  if toRoom then
    if landSuccess then killTrigger(landSuccess) end
    if landFailure then killTrigger(landFailure) end
    if noDir then killTrigger(noDir) end
    if notInWater then killTrigger(notInWater) end
    landSuccess = tempRegexTrigger("^You pull .+ onto shore.", function()
      t2tvars["WaterExits"] = "off"
      cecho(f"\n&lt;cyan&gt;Water exits are {t2tvars.WaterExits}\n")
      t2tMapper.tele(toRoom)
      killTrigger(landFailure)
      killTrigger(noDir)
      killTrigger(notInWater)
    end,1)
    landFailure = tempRegexTrigger("^You cannot land in water, look for dry ground.", function()
      killTrigger(landSuccess)
      killTrigger(noDir)
      killTrigger(notInWater)
    end,1)
    noDir = tempRegexTrigger("^Land in what direction\?", function()
      killTrigger(landSuccess)
      killTrigger(landFailure)
      killTrigger(notInWater)
    end,1)
    notInWater = tempRegexTrigger("^You are not even in the water.", function()
      killTrigger(landSuccess)
      killTrigger(landFailure)
      killTrigger(noDir)
    end,1)
    send(f"land {dir}")
  else
    cecho(f"&lt;cyan&gt;Land/Launch with the mapper failed for one of the following reasons:\n")
    cecho(f"&lt;red&gt;  The room has not been mapped.\n")
    cecho(f"&lt;red&gt;  The room leads to an adjacent area and there are too many possibilities to match.\n")
    cecho(f"&lt;red&gt;  If you used a special exit(anything other than n,ne,e,se,s,sw,w,nw,in,out), it has not been mapped or the exit is incorrect.\n")
    cecho(f"&lt;green&gt;To correct this, try the following:\n")
    cecho(f"&lt;cyan&gt;  Double check that you entered the correct direction.\n")
    cecho(f"&lt;cyan&gt;  Add the room to the map.\n")
    cecho(f"&lt;green&gt;If neither of these are appropriate, disable the land/launch script intercepts with &lt;yellow&gt;landlaunch off&lt;green&gt; and make sure you are in the correct mapper mode by using &lt;yellow&gt;water on&lt;green&gt; to use water exits or &lt;yellow&gt;water off&lt;green&gt; to use land exits.\n")
  end
end

function t2tMapper.setRoomWaterFlag(room)
  setRoomUserData(room, 'water', 'true')
end

function t2tMapper.returnRoomWaterFlag(room)
  local waterFlag = t2tMapper.returnRoomUserDataValue(room, 'water')
  return waterFlag
end

function t2tMapper.clearRoomWaterFlag(room)
  clearRoomUserDataItem(room, 'water')
end

function t2tMapper.setAllWaterColoredRoomsWithWaterFlags()
  local allRooms = getRooms()
  local coloredRooms = {}
  for id, name in pairs(allRooms) do
    if getRoomEnv(id) == 268 then
      coloredRooms[id] = true
    end
  end
  for id, _ in pairs(coloredRooms) do
    t2tMapper.setRoomWaterFlag(id)
  end
end

function t2tMapper.markFake()
  local roomList = getRooms()
  for id, name in pairs(roomList) do
    if name == "" then
      setRoomEnv(id, 264)
      setRoomChar(id,"X")
      setRoomCharColor(id,255,255,255)
    end
  end
end

function t2tMapper.getSwimRoom(dir)
  local currentRoom = map.currentRoom
  local exitRooms = mapSim.getAllExits(currentRoom)
  local newRoom
  if exitmap[dir] then dir = exitmap[dir] end
  if exitRooms[dir] then 
    newRoom = exitRooms[dir]
    return newRoom
  else
    local xCurrent, yCurrent, zCurrent = getRoomCoordinates(currentRoom)
    local xDir, yDir, zDir
    if stubmap[dir] then
      local dirID = stubmap[dir]
      local xCoord = coordmap[dirID][1]
      local yCoord = coordmap[dirID][2]
      local zCoord = coordmap[dirID][3]
      xDir = xCurrent + xCoord
      yDir = yCurrent + yCoord
      zDir = zCurrent + zCoord
    end
    newRoom = getRoomsByPosition(map.currentArea, xDir, yDir, zDir)[0]
    return newRoom
  end
end

function t2tMapper.swim(dir)
  local toRoom = t2tMapper.getSwimRoom(dir)
  if toRoom then
    if swimSuccess then killTrigger(swimSuccess) end
    if swimFailure then killTrigger(swimFailure) end
    swimSuccess = tempRegexTrigger("^You swim .+\.|^You stop swimming\.", function()
      t2tMapper.tele(toRoom)
      killTrigger(swimFailure)
      if getRoomUserData(toRoom, "water") == "true" then
        t2tvars["WaterExits"] = "on"
      else
        t2tvars["WaterExits"] = "off"
      end
    end,1)
    swimFailure = tempRegexTrigger("^You cannot swim that way\!|^You can just", function()
      killTrigger(swimSuccess)
    end,1)
    
    send(f"swim {dir}")
  else
    cecho(f"&lt;cyan&gt;Swim with the mapper failed for one of the following reasons:\n")
    cecho(f"&lt;red&gt;  This is not a valid water exit.\n")
    cecho(f"&lt;red&gt;  The room has not been mapped.\n")
    cecho(f"&lt;red&gt;  The room leads to an adjacent area and there are too many possibilities to match.\n")
    cecho(f"&lt;red&gt;  If you used a special exit(anything other than n,ne,e,se,s,sw,w,nw,in,out), it has not been mapped or the exit is incorrect.\n")
    cecho(f"&lt;green&gt;To correct this, try the following:\n")
    cecho(f"&lt;green&gt;  Double check that you entered the correct direction.\n")
    cecho(f"&lt;green&gt;  Add the room to the map.\n")
    cecho(f"&lt;green&gt;If neither of these are appropriate, disable the swim script intercepts with &lt;yellow&gt;mapswim off&lt;green&gt; and make sure you are in the correct mapper mode by using &lt;yellow&gt;water on&lt;green&gt; to use water exits or &lt;yellow&gt;water off&lt;green&gt; to use land exits.\n")
  end
end

</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>t2t help</name>
				<packageName></packageName>
				<script>
----------------------------------------------------------------------- 
-------------------------T2T Mapper Script Help------------------------ 
---------Functions Copied/Tweeked from Generic Mapper Script----------- 
t2t = t2t or {}

t2t.help = {[[
        &lt;cyan&gt;T2T Mapper Script&lt;reset&gt;
This script works in conjunction with Mudlet's included Generic Mapping Script. The goal is to increase interoperability between Mudlet's Mapper and T2T and provide quality of life improvements.

        &lt;cyan&gt;T2T Help Usage&lt;reset&gt;
Tutorials for setup and usage are provided, along with help on each command. You can access further help pages by clicking on the help section or typing 't2t help &lt;topic&gt;' in the command line.

        &lt;link: client_setup&gt;&lt;cyan&gt;Mudlet Client Setup&lt;reset&gt;&lt;/link&gt;
            &lt;link: client_setup&gt;&lt;yellow&gt;Client Setup Guide&lt;reset&gt;&lt;/link&gt;

        &lt;link: script_setup&gt;&lt;cyan&gt;T2T Mapper Script Setup&lt;reset&gt;&lt;/link&gt;
            &lt;link: script_setup&gt;&lt;yellow&gt;Script Setup Guide&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_setup&gt;&lt;yellow&gt;t2t setup&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_get_prompt&gt;&lt;yellow&gt;t2t get prompt&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_add_prompt&gt;&lt;yellow&gt;t2t add prompt&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_modify_mapper&gt;&lt;yellow&gt;t2t modify mapper&lt;reset&gt;&lt;/link&gt;

        &lt;link: shorts_speedwalking&gt;&lt;cyan&gt;Shorts and Speedwalking&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_add_short&gt;&lt;yellow&gt;t2t add short&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_remove_short&gt;&lt;yellow&gt;t2t remove short&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_get_short&gt;&lt;yellow&gt;t2t get short&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_go&gt;&lt;yellow&gt;t2t go&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_save_room&gt;&lt;yellow&gt;t2t save room&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_return&gt;&lt;yellow&gt;t2t return&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_horse&gt;&lt;yellow&gt;t2t horse&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_tele&gt;&lt;yellow&gt;t2t tele&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_dead&gt;&lt;yellow&gt;t2t dead&lt;reset&gt;&lt;/link&gt;

        &lt;link: problem_rooms&gt;&lt;cyan&gt;Problem Rooms&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_add_prob&gt;&lt;yellow&gt;t2t add prob&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_remove_prob&gt;&lt;yellow&gt;t2t remove prob&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_show_probs&gt;&lt;yellow&gt;t2t show probs&lt;reset&gt;&lt;/link&gt;

        &lt;link: room_attributes&gt;&lt;cyan&gt;Room Attributes&lt;reset&gt;&lt;/link&gt;
            &lt;link: set_room_name&gt;&lt;yellow&gt;set room name&lt;reset&gt;&lt;/link&gt;
            &lt;link: set_room_weight&gt;&lt;yellow&gt;set room weight&lt;reset&gt;&lt;/link&gt;
            &lt;link: set_room_color&gt;&lt;yellow&gt;set room color&lt;reset&gt;&lt;/link&gt;
            &lt;link: set_room_locks&gt;&lt;yellow&gt;set room locks&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_alignments&gt;&lt;yellow&gt;show alignments&lt;reset&gt;&lt;/link&gt;
            &lt;link: set_group_weight&gt;&lt;yellow&gt;set group weight&lt;reset&gt;&lt;/link&gt;
            &lt;link: set_group_color&gt;&lt;yellow&gt;set group color&lt;reset&gt;&lt;/link&gt;
            &lt;link: get_room_weight&gt;&lt;yellow&gt;get room weight&lt;reset&gt;&lt;/link&gt;
            &lt;link: get_room_color&gt;&lt;yellow&gt;get room color&lt;reset&gt;&lt;/link&gt;
            &lt;link: get_room_locks&gt;&lt;yellow&gt;get room locks&lt;reset&gt;&lt;/link&gt;
            &lt;link: remove_room_locks&gt;&lt;yellow&gt;remove room locks&lt;reset&gt;&lt;/link&gt;
            &lt;link: list_room_colors&gt;&lt;yellow&gt;list room colors&lt;reset&gt;&lt;/link&gt;

        &lt;link: room_scripts&gt;&lt;cyan&gt;Room Scripts&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_add_script&gt;&lt;yellow&gt;t2t add script&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_remove_script&gt;&lt;yellow&gt;t2t remove script&lt;reset&gt;&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_get_script&gt;&lt;yellow&gt;t2t get script&lt;reset&gt;&lt;/link&gt;

        &lt;link: water_exits&gt;&lt;cyan&gt;Water Exits&lt;reset&gt;&lt;/link&gt;
            &lt;link: launch&gt;&lt;yellow&gt;launch&lt;reset&gt;&lt;/link&gt;
            &lt;link: land&gt;&lt;yellow&gt;land&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_landlaunch&gt;&lt;yellow&gt;t2t landlaunch&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_water&gt;&lt;yellow&gt;t2t water&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_waterflag&gt;&lt;yellow&gt;t2t waterflag&lt;reset&gt;&lt;/link&gt;

        &lt;link: mapper_window&gt;&lt;cyan&gt;Mapper Window&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_zoom&gt;&lt;yellow&gt;t2t zoom&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_center&gt;&lt;yellow&gt;t2t center&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_add_label&gt;&lt;yellow&gt;t2t add label&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_show_map&gt;&lt;yellow&gt;t2t show map&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_unlock_map&gt;&lt;yellow&gt;t2t unlock map&lt;reset&gt;&lt;/link&gt;

        &lt;link: generic_mapper_script&gt;&lt;cyan&gt;Generic Mapper Script Interaction&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_fail&gt;&lt;yellow&gt;t2t fail&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_move&gt;&lt;yellow&gt;t2t move&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_get_path&gt;&lt;yellow&gt;t2t get path&lt;reset&gt;&lt;/link&gt;

        &lt;link: t2tvars&gt;&lt;cyan&gt;T2Tvars&lt;reset&gt;&lt;/link&gt;
            &lt;link: add_pair&gt;&lt;yellow&gt;add pair&lt;reset&gt;&lt;/link&gt;
            &lt;link: remove_pair&gt;&lt;yellow&gt;remove pair&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_pairs&gt;&lt;yellow&gt;show pairs&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_pair&gt;&lt;yellow&gt;show pair&lt;reset&gt;&lt;/link&gt;
            &lt;link: add_list&gt;&lt;yellow&gt;add list&lt;reset&gt;&lt;/link&gt;
            &lt;link: add_list_item&gt;&lt;yellow&gt;add list item&lt;reset&gt;&lt;/link&gt;
            &lt;link: remove_list&gt;&lt;yellow&gt;remove list&lt;reset&gt;&lt;/link&gt;
            &lt;link: remove_list_item&gt;&lt;yellow&gt;remove list item&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_lists&gt;&lt;yellow&gt;show lists&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_list&gt;&lt;yellow&gt;show list&lt;reset&gt;&lt;/link&gt;
            &lt;link: add_table&gt;&lt;yellow&gt;add table&lt;reset&gt;&lt;/link&gt;
            &lt;link: add_table_set&gt;&lt;yellow&gt;add table set&lt;reset&gt;&lt;/link&gt;
            &lt;link: remove_table&gt;&lt;yellow&gt;remove table&lt;reset&gt;&lt;/link&gt;
            &lt;link: remove_table_set&gt;&lt;yellow&gt;remove table set&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_tables&gt;&lt;yellow&gt;show tables&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_table&gt;&lt;yellow&gt;show table&lt;reset&gt;&lt;/link&gt;

        &lt;link: notes&gt;&lt;cyan&gt;Final Notes&lt;reset&gt;&lt;/link&gt;

    For all else, please see &lt;yellow&gt;map help&lt;reset&gt; and the Mudlet Wiki.
]]}

t2t.help.client_setup = [[
    &lt;cyan&gt;Client Setup Guide&lt;reset&gt;

    &lt;cyan&gt;1)&lt;reset&gt; Click settings on the Mudlet toolbar.

    &lt;cyan&gt;2)&lt;reset&gt; On the General tab, find Server Data Encoding and set it to UTF-8 (Recommended)

    &lt;cyan&gt;3)&lt;reset&gt; On the Input line tab, set the Command seperator to a single ;

    &lt;cyan&gt;4)&lt;reset&gt; On the Mapper tab, click 'Press to choose file and load" beside 'Load another map file in:' - Navigate to your Mudlet profile directory, which will be named the same as whatever you named your T2T profile when you created it. Inside that folder, you should see 'TheTwoTowers'. Enter that folder and find the map.dat file and select that and click open.

    &lt;cyan&gt;5)&lt;reset&gt; Hit save at the bottom right of the Mudlet Settings window.

    &lt;cyan&gt;6)&lt;reset&gt; Restart Mudlet.

    &lt;cyan&gt;7)&lt;reset&gt; Once Mudlet has reloaded and you're back in your T2T profile, type the command &lt;yellow&gt;t2t setup&lt;reset&gt;. This will adjust a few things to verify interoperability between the mud and mudlet's mapper.
]]

t2t.help.script_setup = [[
    &lt;cyan&gt;Script Setup Guide&lt;reset&gt;

    &lt;cyan&gt;1)&lt;reset&gt; Due to the nonstandardization of rooms, to aid in discrimination/qualification, a color must be used for room_short in the mud's 'color' command. Any color can be used, aside from Default. When you set your room_short color with the 'color' command, this script has triggers to catch what it is and setup the room/exit trigger to match it.

    &lt;cyan&gt;2)&lt;reset&gt; Mudlet needs to be able to recognize your prompt. When you use the mudlet command &lt;yellow&gt;find prompt&lt;reset&gt;, hopefully it will be able to grab it. If you see 'Prompt not auto-detected, use &lt;yellow&gt;map prompt&lt;reset&gt; to set a prompt pattern.', it was not successful. That response tells you to use &lt;yellow&gt;map prompt&lt;reset&gt;, a mudlet command, but I'm going to tell you to bypass it because it doesn't always work. Instead, use my command &lt;yellow&gt;add prompt&lt;reset&gt; to do it, with the following conditions:

        &lt;cyan&gt;A)&lt;reset&gt; Any character in your prompt characterized as a magic character in the Lua programming language must be escaped with the character '%'. This includes: ( ) . % + - * ? [ ^ $ If in doubt, escape it with a %.

        &lt;cyan&gt;B)&lt;reset&gt; The prompt should have a ^ at the beginning, to denote the prompt starting at the beginning of the line, and a $ at the end, denoting the end of line with the prompt on it.

        &lt;cyan&gt;C)&lt;reset&gt; T2T adds a space to the end of prompts, so a space must be included in the prompt you add, before the $.

        &lt;cyan&gt;D)&lt;reset&gt; Numbers that change, like HP and EP, will be substituted with %d. If it can be more than one digit in a row, you'll add the +, so the value for the HP digits would be %d+

        &lt;cyan&gt;E)&lt;reset&gt; Letters that change, like the region, if you have that shown in your prompt, will be substituted with a %w, or %w+ if it will be more than one character grouped.

        &lt;cyan&gt;Examples:&lt;reset&gt; 
    |- HP:151 EP:230 -| 
    &lt;yellow&gt;add prompt ^%|- HP:%d+ EP:%d+ -%| $&lt;reset&gt;

    HAR HP:230 EP:230&gt;  
    &lt;yellow&gt;add prompt ^%w+ HP:%d+ EP:%d+&gt; $&lt;reset&gt;

    /////// HP: 235 EP: 235 \\\\\\\ SOR 7304 
    &lt;yellow&gt;add prompt ^%/%/%/%/%/%/%/ HP: %d+ EP: %d+ %\%\%\%\%\%\%\ %w+ %d+ $&lt;reset&gt;

        &lt;cyan&gt;F)&lt;reset&gt; Use &lt;yellow&gt;t2t get prompt &lt;copy/paste your prompt&gt;&lt;reset&gt; if you're having difficulty. I can't account for everything, but this should work for *most* prompts. After adding your prompt pattern, type &lt;yellow&gt;find prompt&lt;reset&gt; again to see if it's working.

    &lt;cyan&gt;3)&lt;reset&gt; Once mudlet recognizes your rooms and prompt, you should be able to type the Mudlet command &lt;yellow&gt;map basics&lt;reset&gt; and it will show you a checklist of whether or not it was able to recognize rooms and exits. If it doesn't, use the 'color' command and verify that you have a color set for your room_short and that &lt;yellow&gt;find prompt&lt;reset&gt; recognizes your prompt. If it still doesn't work, contact me.

    &lt;cyan&gt;4)&lt;reset&gt; Once everything else is complete, run &lt;yellow&gt;t2t modify mapper&lt;reset&gt;. This hotfixes a few bugs and adds additional room script functionality.

        &lt;cyan&gt;Commands in Script Setup&lt;reset&gt;
            &lt;link: t2t_setup&gt;&lt;yellow&gt;t2t setup&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_get_prompt&gt;&lt;yellow&gt;t2t get prompt&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_add_prompt&gt;&lt;yellow&gt;t2t add prompt&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_modify_mapper&gt;&lt;yellow&gt;t2t modify mapper&lt;reset&gt;&lt;/link&gt;
]]

t2t.help.t2t_setup = [[
    &lt;cyan&gt;T2T Setup&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t setup&lt;reset&gt;

This command sends the following commands to the mud and mapper: &lt;yellow&gt;brief on&lt;reset&gt; - Room Descriptions do not contain a room name and will not work for location identification.

    &lt;yellow&gt;charset UTF-8&lt;reset&gt; - UTF-8 or ISO-8859-1 is required to correctly show characters like the ó in Lothlórien and É in Éowyn's Bedroom. If you set it to ASCII, you will have to remap the rooms I've already mapped with special characters.

    &lt;yellow&gt;map.setConfigs("speedwalk_wait", "true")&lt;reset&gt; - tells the mapper to verify each room before moving onto the next speedwalkstep

    &lt;yellow&gt;map.setConfigs("speedwalk delay", "0")&lt;reset&gt; - sets the delay before moving onto the next speedwalk step, after room verification, to 0.

    &lt;yellow&gt;map.setConfigs("search on look", "false")&lt;reset&gt; - Tells the mapper to not try to identify locations based on 'look' results, as look results on T2T do not include room names.

    &lt;yellow&gt;map.setConfigs("stretch_map", "false")&lt;reset&gt; - Tells the mapper to not stretch rooms while matching (autoexpand to create room for room names/exits that don't match, instead of using sub areas or using "shift" to move rooms).

    &lt;yellow&gt;disableTrigger("English Trigger Group")&lt;reset&gt; - Disables the stock room and exit trigger included with Mudlet.

    &lt;yellow&gt;disableTrigger("Russian Trigger Group")&lt;reset&gt; - Same, for Russian

    &lt;yellow&gt;disableTrigger("Chinese Trigger Group")&lt;reset&gt; - Same, for Chinese
]]

t2t.help.t2t_get_prompt = [[
    &lt;cyan&gt;T2T Get Prompt&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t get prompt &lt;your displayed prompt&gt;&lt;reset&gt;

This command will attempt to generate a prompt pattern for Mudlet recognition, used in conjunction with the &lt;yellow&gt;t2t add prompt&lt;reset&gt; command.
]]

t2t.help.t2t_add_prompt = [[
    &lt;cyan&gt;T2T Add Prompt&lt;reset&gt;
    syntax: &lt;yellow&gt;add prompt &lt;prompt pattern&gt;&lt;reset&gt;

This command adds a prompt pattern to the prompt recognition list in Mudlet to assist the &lt;yellow&gt;find prompt&lt;reset&gt; command.
]]

t2t.help.t2t_modify_mapper = [[
    &lt;cyan&gt;T2T Modify Mapper&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t modify mapper&lt;reset&gt;

This command makes makes three changes to the Generic Mapper Script itself. Two of them are temporary bug fixes I've implemented until the Mudlet team corrects them upstream. Since the Generic Mapper Script autoupdates, if the corrections are not applied in the next update, this command will have to be run again afterwards.

The third change allows the injection of room scripts while speedwalking to do things like open doors/push gates/etc for entry into rooms without it stopping you and the mapper.
]]

t2t.help.shorts_speedwalking = [[
    &lt;cyan&gt;Shorts and Speedwalking&lt;reset&gt;

Room shorts, or room abbreviations, save time and keep you from having to remember specific room numbers or having to click on map rooms to move.

Combined with the t2t go and t2t tele commands, this makes speedwalking a considerably less PITA.

I've added a room display to show you the room shortcut for the room you are currently in, if one is set. This lets you know that you have indeed set one for this room and helps you to remember what it is for future use.

        &lt;cyan&gt;Shorts/Speedwalking Commands&lt;reset&gt;
            &lt;link: t2t_add_short&gt;&lt;yellow&gt;t2t add short&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_remove_short&gt;&lt;yellow&gt;t2t remove short&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_get_short&gt;&lt;yellow&gt;t2t get short&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_go&gt;&lt;yellow&gt;t2t go&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_save_room&gt;&lt;yellow&gt;t2t save room&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_return&gt;&lt;yellow&gt;t2t return&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_horse&gt;&lt;yellow&gt;t2t horse&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_tele&gt;&lt;yellow&gt;t2t tele&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_dead&gt;&lt;yellow&gt;t2t dead&lt;reset&gt;&lt;/link&gt;

]]

t2t.help.t2t_add_short = [[
    &lt;cyan&gt;T2T Add Short&lt;reset&gt;
    syntax: &lt;yellow&gt;add short &lt;optional room number&gt; &lt;short name&gt;&lt;reset&gt;

This command creates a room shortcut name for rooms, ie: you can use it to speedwalk to The Great Gates of Minas Tirith by typing &lt;yellow&gt;t2t go mt&lt;reset&gt;, should that be your chosen short for the room.

If you do not include the optional room number, this sets the room short for the room you're currently in.
]]

t2t.help.t2t_remove_short = [[
    &lt;cyan&gt;T2T Remove Short&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t remove short &lt;optional room number&gt;&lt;reset&gt;

This command removes a room shortcut name for the given room. If you do not include a room number, it uses your current room.
]]

t2t.help.t2t_get_short = [[
    &lt;cyan&gt;T2T Get Short&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t get short &lt;optional room number&gt;&lt;reset&gt;

This command returns the shortcut name for the given room number. If you do not supply a room number, it returns the shortcut name for the room you are currently in.
]]

t2t.help.t2t_go = [[
    &lt;cyan&gt;T2T Go&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t go &lt;room number/room short&gt;&lt;reset&gt;

This command is the bread and butter for speedwalking. Use it to speedwalk to a room with a short name or with a room number if you have not set a short name for that particular room yet.
]]

t2t.help.t2t_save_room = [[
    &lt;cyan&gt;T2T Save Room&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t save room&lt;reset&gt;

This command saves your current location on the map, in case you need to leave, do something else, and then come back to it. Handy for when you forget to empty your pack/cart before attacking the next mob and realize you need to sell before you can loot your current kill.
]]

t2t.help.t2t_return = [[
    &lt;cyan&gt;T2T Return&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t return&lt;reset&gt;

This command speedwalks you back to your saved room.
]]

t2t.help.t2t_horse = [[
    &lt;cyan&gt;T2T Horse&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t horse&lt;reset&gt;

This command allows you to return to your mount if you've left it somewhere that didn't allow you to take your mount with you, or if you've stabled it and forgot you stabled it.
]]

t2t.help.t2t_tele = [[
    &lt;cyan&gt;T2T Tele&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t tele &lt;room number/room short&gt;&lt;reset&gt;

This command teleports your location on the map to the given room number or room short, in case something happened and the mapper failed to keep up while moving.
]]

t2t.help.t2t_dead = [[
    &lt;cyan&gt;T2T Dead mode&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t dead on/off&lt;reset&gt;

This command manually enables/disables dead mode. Dead mode is a secondary mode that allows the mapper to process room names and exits while a ghost. As your social and environmental interactions are limited while dead, it does not need the extra help of room colors to locate you. Note that this is automatically enabled when you die and disabled when you return to life. You should not need to use this command unless something else fails.
]]

t2t.help.problem_rooms = [[
    &lt;cyan&gt;Problem Rooms&lt;reset&gt;

Due to nonstandard room name/exit patterns and the fact that some rooms change names and/or visible exits based on various factors, such as time of day or whether you've engaged certain add_actions or not.  The problemRooms database allows you to account for changes in room names/exits by intercepting them and sending the Mudlet Mapper what it expects to see, so that it will not get lost.

        &lt;cyan&gt;Problem Rooms Commands&lt;reset&gt;
            &lt;link: t2t_add_prob&gt;&lt;yellow&gt;t2t add prob&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_remove_prob&gt;&lt;yellow&gt;t2t remove prob&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_show_probs&gt;&lt;yellow&gt;t2t show probs&lt;reset&gt;&lt;/link&gt;

]]

t2t.help.t2t_add_prob = [[
    &lt;cyan&gt;T2T Add Prob&lt;reset&gt;
    syntax: 
    &lt;yellow&gt;t2t add prob "&lt;old name&gt;" "&lt;new name&gt;" "&lt;old exits&gt;" "&lt;new exits&gt;"&lt;reset&gt;

This command adds a problem room to the problemRooms database. Typically, the new room name and new exits are what you're changing the values for before sending to the mapper for location verification, where as any old name and old exits you add are what you might see as soon as you enter a room, before any additional commands cause the room name or exits to change.

Examples: A random group of rooms in Lothlórien changes to "Near a guard flet", at what interval I don't know. When I added these to the problemRooms database, I used the command: 

&lt;yellow&gt;add prob "Near a guard flet" "Lothlórien" "" ""&lt;reset&gt; 

so that the mapper always thinks those room are "Lothlórien". If exits do not change, you do not have to enter values for the exits in the "", but the "'s themselves must be present when entering the command for it to function.

There's another room called "A spiked pit". When you enter it, there are no exits shown in the exit group and you have to interact with an add_action to make an exit appear. The room name does not change, but the shown exits do. Adding this was done to the database like so: 

&lt;yellow&gt;add prob "A spiked pit" "A spiked pit" "" "west"&lt;reset&gt;

I have not cataloged everything. You may come across something that you will have to add for the mapper to retain full functionality.
]]

t2t.help.t2t_remove_prob = [[
    &lt;cyan&gt;T2T Remove Prob&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t remove prob &lt;index number&gt;&lt;reset&gt;

This command removes a problem room from the database, in the case of a typo or mistake in the setup.  Use the index number from &lt;yellow&gt;t2t show probs&lt;reset&gt; to remove it.
]]

t2t.help.t2t_show_probs = [[
    &lt;cyan&gt;T2T Show Probs&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t show probs&lt;reset&gt;

This command shows the full list of entries in the problemRooms database, either to check if something is already added or to pull and index number for removal.
]]

t2t.help.room_attributes = [[
    &lt;cyan&gt;Room Attributes&lt;reset&gt;

        &lt;cyan&gt;Room Attribute Commands - Just the ones I used most when mapping.&lt;reset&gt;

            &lt;link: set_room_name&gt;&lt;yellow&gt;set room name&lt;reset&gt;&lt;/link&gt;
            &lt;link: set_room_weight&gt;&lt;yellow&gt;set room weight&lt;reset&gt;&lt;/link&gt;
            &lt;link: set_room_color&gt;&lt;yellow&gt;set room color&lt;reset&gt;&lt;/link&gt;
            &lt;link: set_room_locks&gt;&lt;yellow&gt;set room locks&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_alignments&gt;&lt;yellow&gt;show alignments&lt;reset&gt;&lt;/link&gt;
            &lt;link: set_group_weight&gt;&lt;yellow&gt;set group weight&lt;reset&gt;&lt;/link&gt;
            &lt;link: set_group_color&gt;&lt;yellow&gt;set group color&lt;reset&gt;&lt;/link&gt;
            &lt;link: get_room_weight&gt;&lt;yellow&gt;get room weight&lt;reset&gt;&lt;/link&gt;
            &lt;link: get_room_color&gt;&lt;yellow&gt;get room color&lt;reset&gt;&lt;/link&gt;
            &lt;link: get_room_locks&gt;&lt;yellow&gt;get room locks&lt;reset&gt;&lt;/link&gt;
            &lt;link: remove_room_locks&gt;&lt;yellow&gt;remove room locks&lt;reset&gt;&lt;/link&gt;
            &lt;link: list_room_colors&gt;&lt;yellow&gt;list room colors&lt;reset&gt;&lt;/link&gt;

]]

t2t.help.set_room_name = [[
    &lt;cyan&gt;Set Room Name&lt;reset&gt;
    syntax: &lt;yellow&gt;set room name &lt;room number&gt; &lt;new name&gt;&lt;reset&gt;

This command allows you to set or change a room number after the room has been created. This comes in handy if you run across an undocumented problem room or if packets get broken up and you only end up capturing half of your room name while mapping.
]]

t2t.help.set_room_weight = [[
    &lt;cyan&gt;Set Room Weight&lt;reset&gt;
    syntax: &lt;yellow&gt;set room weight &lt;room number&gt; &lt;new weight&gt;&lt;reset&gt;

This command sets the weight, or cost, of a room. The default weight is 1. As the weight gets higher, the mapper will prioritize other rooms to speedwalk through.
]]

t2t.help.set_room_color = [[
    &lt;cyan&gt;Set Room Color&lt;reset&gt;
    syntax: &lt;yellow&gt;set room color &lt;color number&gt;&lt;reset&gt;

This command sets the color of a room on the map. You can use this in conjunction with &lt;yellow&gt;list room colors&lt;reset&gt; to select from the standard set of ansi mud colors or you can right click on a room and define a custom color for it.
]]

t2t.help.set_room_locks = [[
    &lt;cyan&gt;Set Room Locks&lt;reset&gt;
    syntax: 
    &lt;yellow&gt;set room locks &lt;roomID&gt; "&lt;exit&gt;" "&lt;minimum alignment&gt;" "&lt;maximum alignment&gt;"&lt;reset&gt;

This command creates a lock on a room's specific exit. This allows you to speedwalk through a room, just not through one or more exit directions.

An example would be "At the gate" (Mordor gate). You may want to be able to speedwalk to the room, but prevent yourself from knocking on the gates, unless you're an Evil Race or Servant.

The minimum alignment and maximum alignment are the ranges you set to allow free travel. Valid alignments for these fields are listed in show alignments. They are case sensitive.

Please note that this command only makes changes to the lockedRooms database, which allows you to dynamically set locks on rooms/exits based on alignment/faction all at once.  It does not actually change the lock status of rooms/exits on the current map.  The triggers that verify and run the function to do this are not currently included, as this negates the need for you to make certain decisions, and will not be added back unless approved by the admin.

]]

t2t.help.show_alignments = [[
    &lt;cyan&gt;Show Alignments&lt;reset&gt;
    syntax: &lt;yellow&gt;show alignments&lt;reset&gt;

This command lists the valid set of alignments for use with the &lt;yellow&gt;set room locks&lt;reset&gt; command.
]]

t2t.help.set_group_weight = [[
    &lt;cyan&gt;Set Group Weight&lt;reset&gt;
    syntax: &lt;yellow&gt;set group weight &lt;group of matching room names&gt; &lt;new weight&gt;&lt;reset&gt;

This command allows you to change the weight for an entire set of rooms that all have the same name, such as Mirkwood, in case you want to limit how much you run through them (spiders suck).
]]

t2t.help.set_group_color = [[
    &lt;cyan&gt;Set Group Color&lt;reset&gt;
    syntax: &lt;yellow&gt;set group color &lt;group of matching room names&gt; &lt;color number&gt;&lt;reset&gt;

This command allows you to set the color of an entire set of rooms that all share the same name. IE: if you want all rooms named "The Plains" to be the color of wheat.
]]

t2t.help.get_room_weight = [[
    &lt;cyan&gt;Get Room Weight&lt;reset&gt;
    syntax: &lt;yellow&gt;get room weight &lt;room number&gt;&lt;reset&gt;

This command returns the current weight/cost of a room.

]]

t2t.help.get_room_color = [[
    &lt;cyan&gt;Get Room Color&lt;reset&gt;
    syntax: &lt;yellow&gt;get room color &lt;room number&gt;&lt;reset&gt;

This command returns the current color number for a room, in case you want to use that same color on other rooms and can't easily identify exactly which one it is.
]]

t2t.help.get_room_locks = [[
    &lt;cyan&gt;Get Room Locks&lt;reset&gt;
    syntax: &lt;yellow&gt;get room locks &lt;room number&gt;&lt;reset&gt;

This command shows a list of room locks for the given room number.
]]

t2t.help.remove_room_locks = [[
    &lt;cyan&gt;Remove Room Locks&lt;reset&gt;
    syntax: &lt;yellow&gt;remove room locks &lt;room number&gt;&lt;reset&gt;

This command removes all locks on a given room number.

]]

t2t.help.list_room_colors = [[
    &lt;cyan&gt;List Room Colors&lt;reset&gt;
    syntax: &lt;yellow&gt;list room colors&lt;reset&gt;

This command shows the standard set of ansi colors and their associated color number for use with the &lt;yellow&gt;set room color&lt;reset&gt; and &lt;yellow&gt;set group color&lt;reset&gt; commands.
]]

t2t.help.room_scripts = [[
    &lt;cyan&gt;Room Scripts&lt;reset&gt;

Room scripts allow you to run functions as you move through rooms. The functions are executed before the command is sent to move to the room beyond, so they are useful for things like opening gates or doors, or setting up temporary triggers when entering a room in case something could happen, but doesn't always.

      &lt;cyan&gt;Room Scripts commands&lt;reset&gt;
            &lt;link: t2t_add_script&gt;&lt;yellow&gt;t2t add script&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_remove_script&gt;&lt;yellow&gt;t2t remove script&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_get_script&gt;&lt;yellow&gt;t2t get script&lt;reset&gt;&lt;/link&gt;
]]

t2t.help.t2t_add_script = [[
    &lt;cyan&gt;T2T Add Script&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t add script &lt;optional room number&gt; &lt;lua script&gt;&lt;reset&gt;

This command adds a lua script to the given room. If no room number is supplied, it is added to the current room.
]]

t2t.help.t2t_remove_script = [[
    &lt;cyan&gt;T2T Remove Script&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t remove script &lt;optional room number&gt;&lt;reset&gt;

This command removes a room script from a given room number. If no room number is supplied, it is removed from the current room.
]]

t2t.help.t2t_get_script = [[
    &lt;cyan&gt;T2T Get Script&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t get script &lt;optional room number&gt;&lt;reset&gt;

This command shows you what scripts are already set for a given room. If no room number is given, it defaults to the current room.
]]

t2t.help.water_exits = [[
    &lt;cyan&gt;Water Exits&lt;reset&gt;

Water Exit support is currently in the experimental phase. I have mapped all of the water ways (that I know about), but I did so manually. While support for speedwalking between land and water exits is not present, you should be fine manually going to a room and launching into the water or landing in a land room from a body of water.

        &lt;cyan&gt;Valid Water Exit commands&lt;reset&gt;
            &lt;link: launch&gt;&lt;yellow&gt;launch&lt;reset&gt;&lt;/link&gt;
            &lt;link: land&gt;&lt;yellow&gt;land&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_landlaunch&gt;&lt;yellow&gt;t2t landlaunch&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_water&gt;&lt;yellow&gt;t2t water&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_waterflag&gt;&lt;yellow&gt;t2t waterflag&lt;reset&gt;&lt;/link&gt;

]]

t2t.help.launch = [[
    &lt;cyan&gt;Launch&lt;reset&gt;
    syntax: &lt;yellow&gt;launch &lt;water exit name&gt;&lt;reset&gt;

This command intercepts the mud's launch command (and resends it) so that the mapper can follow you between land rooms and water rooms.
]]

t2t.help.land = [[
    &lt;cyan&gt;Land&lt;reset&gt;
    syntax: &lt;yellow&gt;land &lt;land exit name&gt;&lt;reset&gt;

This command intercepts the mud's land command (and resends it) so that the mapper can follow you between water rooms and land rooms.
]]

t2t.help.t2t_landlaunch = [[
    &lt;cyan&gt;T2T Landlaunch&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t landlaunch on/off&lt;reset&gt;

This command disables the T2T Mapper land and launch commands if something isn't working correctly.
]]

t2t.help.t2t_water = [[
    &lt;cyan&gt;T2T Water&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t water on/off&lt;reset&gt;

This command moves between exit recognition for water and land exits. &lt;yellow&gt;t2t water on&lt;reset&gt; enables water exit capture. &lt;yellow&gt;t2t water off&lt;reset&gt; enables land exit capture. This is done automatically when using the &lt;yellow&gt;land&lt;reset&gt; and &lt;yellow&gt;launch&lt;reset&gt; commands, but if you disable those, you will have to manually enable/disable water exit capture when switching between land and water.
]]

t2t.help.t2t_waterflag = [[
    &lt;cyan&gt;T2T Waterflag&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t waterflag on/off&lt;reset&gt;

This command flags a room as a water room. When using the &lt;yellow&gt;launch&lt;reset&gt; command, it checks to make sure you're not trying to launch into a land room. This just provides a check to keep the mapper working correctly.
]]

t2t.help.mapper_window = [[
    &lt;cyan&gt;Mapper Window&lt;reset&gt;

        &lt;cyan&gt;Mapper Window commands&lt;reset&gt;
            &lt;link: t2t_zoom&gt;&lt;yellow&gt;t2t zoom&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_center&gt;&lt;yellow&gt;t2t center&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_add_label&gt;&lt;yellow&gt;t2t add label&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_show_map&gt;&lt;yellow&gt;t2t show map&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_unlock_map&gt;&lt;yellow&gt;t2t unlock map&lt;reset&gt;&lt;/link&gt;

]]

t2t.help.t2t_zoom = [[
    &lt;cyan&gt;T2T Zoom&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t zoom &lt;magnification #&gt;&lt;reset&gt;

This command changes the zoom magnification of the mapper, in case you don't want to use your scroll wheel. The lower the number, the larger rooms appear.
]]

t2t.help.t2t_center = [[
    &lt;cyan&gt;T2T Center&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t center &lt;room number/room short&gt;&lt;reset&gt;

This command centers your map view on a specific room without moving your location on the map to that room. This is useful for checking out room properties of a given room without having to travel there.
]]

t2t.help.t2t_add_label = [[
    &lt;cyan&gt;T2T Add Label&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t add label &lt;label text&gt;&lt;reset&gt;

This command adds a label to your current position on the map.

]]

t2t.help.t2t_show_map = [[
    &lt;cyan&gt;T2T Show Map&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t show map&lt;reset&gt;

This command reopens your map if you've accidentally closed it. ...some people kept doing this when helping me test so I created the command specifically for them.
]]

t2t.help.t2t_unlock_map = [[
    &lt;cyan&gt;T2T Unlock Map&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t unlock map&lt;reset&gt;

This command unlocks your mapper window to allow you to resize or move it around. If you right click on the border around maps and choose to lock it, sometimes it's hard to find the right spot to click to unlock it again if you need to change something.
]]

t2t.help.generic_mapper_script = [[
    &lt;cyan&gt;Generic Mapper Script Interaction&lt;reset&gt;

        &lt;cyan&gt;Generic Mapper Script Interaction commands&lt;reset&gt;
            &lt;link: t2t_fail&gt;&lt;yellow&gt;t2t fail&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_move&gt;&lt;yellow&gt;t2t move&lt;reset&gt;&lt;/link&gt;
            &lt;link: t2t_get_path&gt;&lt;yellow&gt;t2t get path&lt;reset&gt;&lt;/link&gt;
]]

t2t.help.t2t_fail = [[
    &lt;cyan&gt;T2T Fail&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t fail&lt;reset&gt;

I've included a few hundred triggers that let the mapper know if the movement you've attempted has failed to actually move you into a room. There are many more. If you attempt to move a direction, but fail, Mudlet holds that movement in the move_queue, unless there's a trigger telling it not to. The next time you move, even if it's not in that direction, it tries to locate you and can get lost, thinking you did move in that direction. If one of my triggers has not let Mudlet know that the movement has failed and it still shows up in &lt;yellow&gt;show moves&lt;reset&gt;, this command will remove it from the queue. I suggest then adding a trigger for it in the Failed Movement folder.
]]

t2t.help.t2t_move = [[
    &lt;cyan&gt;T2T Move&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t move &lt;exit name&gt;&lt;reset&gt;

This command moves your location on the map, one room at a time, without having to actually move rooms on the MUD.
]]

t2t.help.t2t_get_path = [[
    &lt;cyan&gt;T2T Get Path&lt;reset&gt;
    syntax: &lt;yellow&gt;t2t get path &lt;starting room&gt; &lt;ending room&gt;&lt;reset&gt;

This command returns a do alias between two locations. It's useful for sharing directions with someone you wish to meet up with. You can use a room number or a room short for the start and end points.
]]

t2t.help.t2tvars = [[
    &lt;cyan&gt;T2TVars&lt;reset&gt;

All variables declared while using Mudlet, unless you specifically tell Mudlet not to, are wiped when you close your Mudlet profile/client. Keeping a set of persistent variables is often useful, which is why I created this and wrote commands/functions to make it easier to use. This allows you to store things like the password for Mordor gates, even after you close your client.

        &lt;cyan&gt;T2Tvars commands (More backend functions available)&lt;reset&gt;
            &lt;link: add_pair&gt;&lt;yellow&gt;add pair&lt;reset&gt;&lt;/link&gt;
            &lt;link: remove_pair&gt;&lt;yellow&gt;remove pair&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_pairs&gt;&lt;yellow&gt;show pairs&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_pair&gt;&lt;yellow&gt;show pair&lt;reset&gt;&lt;/link&gt;
            &lt;link: add_list&gt;&lt;yellow&gt;add list&lt;reset&gt;&lt;/link&gt;
            &lt;link: add_list_item&gt;&lt;yellow&gt;add list item&lt;reset&gt;&lt;/link&gt;
            &lt;link: remove_list&gt;&lt;yellow&gt;remove list&lt;reset&gt;&lt;/link&gt;
            &lt;link: remove_list_item&gt;&lt;yellow&gt;remove list item&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_lists&gt;&lt;yellow&gt;show lists&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_list&gt;&lt;yellow&gt;show list&lt;reset&gt;&lt;/link&gt;
            &lt;link: add_table&gt;&lt;yellow&gt;add table&lt;reset&gt;&lt;/link&gt;
            &lt;link: add_table_set&gt;&lt;yellow&gt;add table set&lt;reset&gt;&lt;/link&gt;
            &lt;link: remove_table&gt;&lt;yellow&gt;remove table&lt;reset&gt;&lt;/link&gt;
            &lt;link: remove_table_set&gt;&lt;yellow&gt;remove table set&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_tables&gt;&lt;yellow&gt;show tables&lt;reset&gt;&lt;/link&gt;
            &lt;link: show_table&gt;&lt;yellow&gt;show table&lt;reset&gt;&lt;/link&gt;

For all individual fields, aside from table sets, please keep your values constrained to single groups of characters (letters, numbers, and hyphens).

]]

t2t.help.add_pair = [[
    &lt;cyan&gt;Add Pair&lt;reset&gt;
    syntax: &lt;yellow&gt;add pair &lt;keyname&gt; &lt;value&gt;&lt;reset&gt;

This command adds a key/value pair that is persistent. An example would be something like "MordorPassword" = "lugburz". You would add this by sending: &lt;yellow&gt;add pair MordorPassword lugburz&lt;reset&gt;
]]

t2t.help.remove_pair = [[
    &lt;cyan&gt;Remove Pair&lt;reset&gt;
    syntax: &lt;yellow&gt;remove pair &lt;keyname&gt;&lt;reset&gt;

This command removes a key/value pair from the table of persistent variables. It uses the key name to identify which pair to remove.
]]

t2t.help.show_pairs = [[
    &lt;cyan&gt;Show Pairs&lt;reset&gt;
    syntax: &lt;yellow&gt;show pairs&lt;reset&gt;

This command shows you a list of all key/value pairs stored.

]]

t2t.help.show_pair = [[
    &lt;cyan&gt;Show Pair&lt;reset&gt;
    syntax: &lt;yellow&gt;show pair &lt;keyname&gt;&lt;reset&gt;

This command shows a specific key/value pair from the database, searchable by key name.
]]

t2t.help.add_list = [[
    &lt;cyan&gt;Add List&lt;reset&gt;
    syntax: &lt;yellow&gt;add list &lt;list name&gt;&lt;reset&gt;

This command creates a persistent list that you can then add items to, such as Frenemies. &lt;yellow&gt;add list Frenemies&lt;reset&gt;
]]

t2t.help.add_list_item = [[
    &lt;cyan&gt;Add List Item&lt;reset&gt;
    syntax: &lt;yellow&gt;add listitem &lt;list name&gt; &lt;new item&gt;&lt;reset&gt;

This command adds items to a list already established in the database, ie: &lt;yellow&gt;add listitem Frenemies Deboraha&lt;reset&gt;
]]

t2t.help.remove_list = [[
    &lt;cyan&gt;Remove List&lt;reset&gt;
    syntax: &lt;yellow&gt;remove list &lt;list name&gt;&lt;reset&gt;

This command removes a list from the database by the list's name.
]]

t2t.help.remove_list_item = [[
    &lt;cyan&gt;Remove List Item&lt;reset&gt;
    syntax: &lt;yellow&gt;remove listitem &lt;list name&gt; &lt;item&gt;&lt;reset&gt;

This command removes an item from the supplied list name.

]]

t2t.help.show_lists = [[
    &lt;cyan&gt;Show Lists&lt;reset&gt;
    syntax: &lt;yellow&gt;show lists&lt;reset&gt;

This command returns a list of all lists in the t2tvars database.

]]

t2t.help.show_list = [[
    &lt;cyan&gt;Show List&lt;reset&gt;
    syntax: &lt;yellow&gt;show list &lt;list name&gt;&lt;reset&gt;

This command returns a specific list and all of its item members.

]]

t2t.help.add_table = [[
    &lt;cyan&gt;Add Table&lt;reset&gt;
    syntax: &lt;yellow&gt;add table &lt;table name&gt;&lt;reset&gt;

This command adds a table to the t2tvars database. In this instance, a table would be multiple sets of related key/value pairs.
]]

t2t.help.add_table_set = [[
    &lt;cyan&gt;Add Table Set&lt;reset&gt;
    syntax: &lt;yellow&gt;add tableset &lt;table name&gt; &lt;tableset key&gt; &lt;tableset value&gt;&lt;reset&gt;

This command adds a key/value pair to the group for a specific table name.
]]

t2t.help.remove_table = [[
    &lt;cyan&gt;Remove Table&lt;reset&gt;
    syntax: &lt;yellow&gt;remove table &lt;table name&gt;&lt;reset&gt;

This command removes a table from t2tvars.

]]

t2t.help.remove_table_set = [[
    &lt;cyan&gt;Remove Table Set&lt;reset&gt;
    syntax: &lt;yellow&gt;remove tableset &lt;table name&gt; &lt;tableset key&gt;&lt;reset&gt;

This command removes a specific table set key/value pair by the name of the table and the specific key from a table set.
]]

t2t.help.show_tables = [[
    &lt;cyan&gt;Show Tables&lt;reset&gt;
    syntax: &lt;yellow&gt;show tables&lt;reset&gt;

This command returns a list of all tables stored in the t2tvars database.
]]

t2t.help.show_table = [[
    &lt;cyan&gt;Show Table&lt;reset&gt;
    syntax: &lt;yellow&gt;show table &lt;table name&gt;&lt;reset&gt;

This command returns a specific table, along with its current components.
]]

t2t.help.notes = [[
    &lt;cyan&gt;Final Notes&lt;reset&gt; 

While speedwalk_wait is currently set to true, this can be set to false with the command &lt;yellow&gt;map config speedwalk_wait false&lt;reset&gt;. This causes your speedwalks to send all commands at once.

This has inherent risks, much like a do command vs travelto. If something stops you mid speedwalk, you won't be able to do anything about it until all commands are processed. This includes things like trying to speedwalk past Mordor gates and forgetting you're not on your ER/Servant character. Speedwalk_wait being false also means some scripts won't send at the appropriate time and you won't be able to pause speedwalks to return to your starting location or change destinations.

Use speedwalk_wait false at your own risk.

]]

textStuff = textStuff or {}

local TextFormatter = require("TheTwoTowers.ftext").TextFormatter
myFormatter = TextFormatter:new({
  width = 75,
  alignment = "left",
  textColor = "",
})

errorText = TextFormatter:new({
  width = 75,
  cap = "&lt;&lt;",
  mirror = true,
  --alignment = 'left',
  textColor = '&lt;firebrick&gt;',
})

local ftext = require("TheTwoTowers.ftext")

function t2t.wrapit(str)
	cecho(ftext.xwrap(str,75,"c"))
end

function textStuff.formatIt(string)
  cecho(myFormatter:format(string))
end

function textStuff.error(string)
  --string = "Error: "..string
  cecho(errorText:format(string))
end


local oldstring = string
local string = utf8
string.format = oldstring.format
string.trim = oldstring.trim
string.starts = oldstring.starts
string.split = oldstring.split
string.ends = oldstring.ends

local wait_echo = {}
local mapper_tag = "&lt;112,229,0&gt;(&lt;73,149,0&gt;mapper&lt;112,229,0&gt;): &lt;255,255,255&gt;"
local debug_tag = "&lt;255,165,0&gt;(&lt;200,120,0&gt;debug&lt;255,165,0&gt;): &lt;255,255,255&gt;"
local err_tag = "&lt;255,0,0&gt;(&lt;178,34,34&gt;error&lt;255,0,0&gt;): &lt;255,255,255&gt;"

local function parse_help_text(text)
  return text
end

function t2t.show_help(cmd)
    if cmd and cmd ~= "" then
        if cmd:starts("t2t ") then cmd = cmd:sub(5) end
        cmd = cmd:lower():gsub(" ","_")
        if not t2t.help[cmd] then
            t2t.echo("No help file on that command.")
        end
    else
        cmd = 1
    end

    for w in parse_help_text(t2t.help[cmd]):gmatch("[^\n]*\n") do
        local url, target = rex.match(w, [[&lt;(url)?link: ([^&gt;]+)&gt;]])
        -- lrexlib returns a non-capture as 'false', so determine which variable the capture went into
        if target == nil then target = url end
        if target then
            local before, linktext, _, link, _, after, ok = rex.match(w,
                          [[(.*)&lt;((url)?link): [^&gt;]+&gt;(.*)&lt;\/(url)?link&gt;(.*)]], 0, 'm')
            -- could not get rex.match to capture the newline - fallback to string.match
            local _, _, after = w:match("(.*)&lt;u?r?l?link: [^&gt;]+&gt;(.*)&lt;/u?r?l?link&gt;(.*)")

            cecho(before)
            --fg("yellow")
            setUnderline(true)
            if linktext == "urllink" then
                --echoLink(link, [[openWebPage("]]..target..[[")]], "Open Mudlet Discord", true)
            elseif target ~= "1" then
                cechoLink(link,[[t2t.show_help("]]..target..[[")]],"View: t2t help " .. target,true)
            else
                cechoLink(link,[[t2t.show_help()]],"View: t2t help",true)
            end
            setUnderline(false)
            resetFormat()
            if after then cecho(after) end
        else
            --cecho(w)
            w = utf8.gsub(w,'%\n','')
            t2t.wrapit(w)
            cecho("\n")
        end
    end
    echo("\n")
end

local function show_err(msg,debug)
    t2t.echo(msg,debug,true)
    error(msg,2)
end

local function print_echoes(what, debug, err)
    moveCursorEnd("main")
    local curline = getCurrentLine()
    if curline ~= "" then echo("\n") end
    decho(mapper_tag)
    if debug then decho(debug_tag) end
    if err then decho(err_tag) end
    cecho(what)
    echo("\n")
end

local function print_wait_echoes()
    for k,v in ipairs(wait_echo) do
        print_echoes(v[1],v[2],v[3])
    end
    wait_echo = {}
end

function t2t.echo(what, debug, err, wait)
    if debug and not map.configs.debug then return end
    what = tostring(what) or ""
    if wait then
        table.insert(wait_echo,{what, debug, err})
        return
    end
    print_wait_echoes()
    print_echoes(what, debug, err)
end

t2t.defaults = {
	debug = false,
	--download_path = "",
}


local t2tmt = getmetatable(t2t) or {}
local downloading

local bool_configs = {'debug'}</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Esgaroth</name>
				<packageName></packageName>
				<script>function esgarothBridge()
    if cantGoTrig then killTrigger(cantGoTrig) end
    cantGoTrig = tempRegexTrigger("^You can\'t go that way!", function()
        if map.currentRoom == 55520 then
            if lastMove == "e" or lastMove== "east" then 
                if underbridgeTrig then killTrigger(underbridgeTrig) end 
                underbridgeTrig = tempRegexTrigger("^You fall from the bridge, and land in the Long Lake,", function() 
                    t2tMapper.tele("underbridge") 
                    tempTimer(0,function() 
                        send("swim ne") 
                        if underbridgeTrig then killTrigger(underbridgeTrig) end 
                        if successClimbTrig then killTrigger(successClimbTrig) end 
                        if successClimbTrigTwo then killTrigger(successClimbTrigTwo) end 
                    end) 
                end, 1) 
                if successClimbTrig then killTrigger(successClimbTrig) end 
                successClimbTrig = tempRegexTrigger("^Gathering all your strength, you climb over the gates.$", function() 
                    t2tMapper.tele("insideesg") 
                    if underbridgeTrig then killTrigger(underbridgeTrig) end 
                    if successClimbTrig then killTrigger(successClimbTrig) end 
                    if successClimbTrigTwo then killTrigger(successClimbTrigTwo) end 
                end, 1) 
                successClimbTrigTwo = tempRegexTrigger("^You made it! You gasp for relief as you manage to climb down the other$", function() 
                    t2tMapper.tele("insideesg") 
                    if underbridgeTrig then killTrigger(underbridgeTrig) end 
                    if successClimbTrig then killTrigger(successClimbTrig) end 
                    if successClimbTrigTwo then killTrigger(successClimbTrigTwo) end 
                end, 1) 
                tempTimer(0, function() 
                    send("climb gates") 
                end) 
            end 
        end 
    end, 1)
end

function insideEsgaroth()
    if cantGoTrig then killTrigger(cantGoTrig) end 
    cantGoTrig = tempRegexTrigger("^You can't go that way!", function() 
        if map.currentRoom == 55556 then 
            if lastMove == "w" or lastMove == "west" then 
                if underbridgeTrig then killTrigger(underbridgeTrig) end 
                underbridgeTrig = tempRegexTrigger("^the cold, cold waters of Long Lake with a splash.", function() 
                    t2tMapper.tele("underbridge") 
                    tempTimer(0,function() 
                        send("swim shore") 
                        if underbridgeTrig then killTrigger(underbridgeTrig) end 
                        if successClimbTrig then killTrigger(successClimbTrig) end 
                    end) 
                end,1) 
                successClimbTrig = tempRegexTrigger("^painfully scramble to your feet.", function() 
                    t2tMapper.tele("greatbridge") 
                    tempTimer(0,function() 
                        if underbridgeTrig then killTrigger(underbridgeTrig) end 
                        if successClimbTrig then killTrigger(successClimbTrig) end 
                    end) 
                end,1) 
                tempTimer(0, function() 
                    send("climb gates") 
                end) 
            end 
        end 
    end, 1)
end</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>t2t addons</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>Alt List</name>
				<packageName></packageName>
				<script>local profilePath = getMudletHomeDir()
profilePath = profilePath:gsub("\\","/")

altList = altList or {}
altListNames = altListNames or {}
if io.exists(profilePath.."/TheTwoTowers/altListNames.lua") then
	table.load(profilePath.."/TheTwoTowers/altListNames.lua", altListNames)
end

function altList.saveAlts()
  table.save(profilePath.."/TheTwoTowers/altListNames.lua", altListNames)
end

function altList.addMain(mainChar)
	if not table.contains(altListNames, mainChar) then
    altListNames[mainChar] = {}
  	cecho(f"&lt;red&gt;{mainChar} &lt;cyan&gt;added to alt list.\n")
	else
  	cecho(f"&lt;red&gt;{mainChar} &lt;cyan&gt;already in alt list.\n")
	end
	altList.saveAlts()
end

function altList.addAlt(mainChar,altChar)
	local mainList = table.keys(altListNames)
	if table.contains(altListNames, altChar) then
		cecho(f"&lt;red&gt;{mainChar} &lt;cyan&gt;already in alt list.\n")
	elseif not table.contains(mainList, mainChar) then
		cecho(f"&lt;cyan&gt;Please add&lt;red&gt; {mainChar} &lt;cyan&gt;to list first using the &lt;green&gt;add main charname&lt;cyan&gt; alias.\n")
	else
		if not table.contains(altListNames.mainChar,altChar) then
				local mainDude = altListNames[mainChar]
				mainDude[#mainDude + 1] = altChar
				cecho(f"&lt;red&gt;{altChar} &lt;cyan&gt;added to list of alts for &lt;red&gt;{mainChar}&lt;cyan&gt;.\n")
    end
  end
	altList.saveAlts()
end

function altList.findAlt(altName)
	local mainList = table.keys(altListNames)
	if table.contains(mainList, altName) then
    if altListNames.altName == {} then
      cecho(f"&lt;red&gt;No alts currently listed for {altName}\n")
    else
		  local alts = table.concat(altListNames[altName],", ")
		  local endList = f"{altName}, {alts}"
		  cecho(f"&lt;cyan&gt;List of alts for character {altName} are as follows: &lt;red&gt;{endList}&lt;cyan&gt;")
    end
	elseif table.contains(altListNames, altName) then
		local altMain
		for main,alts in pairs(altListNames) do
			if table.contains(alts, altName) then
				altMain = main
			end
		end

		local altString = table.concat(altListNames[altMain],", ")
		local endList = f"{altMain}, {altString}"
		cecho(f"&lt;cyan&gt;List of alts for character {altName} are as follows: &lt;red&gt;{endList}&lt;cyan&gt;")
	else
		cecho(f"&lt;red&gt;No alts found for {altName}\n")
	end
end

function altList.remAlt(altName)
	local mainList = table.keys(altListNames)
  local altMain, altIndex
	if not table.contains(altListNames, altName) then
		cecho(f"&lt;red&gt;{altName} &lt;cyan&gt;is not currently listed.\n")
	elseif table.contains(mainList, altName) then
		cecho(f"&lt;red&gt;{altName} &lt;cyan&gt;is listed as a main.  Please use &lt;green&gt;rem main name&lt;cyan&gt; to remove this name from the alt list.\n")
	elseif table.contains(altListNames, altName) then
		for main,alts in pairs(altListNames) do
			if table.contains(alts, altName) then
				altMain = main
			end
    end
		for index, name in ipairs(altListNames[altMain]) do
      if name == altName then
        altIndex = index
			end
    end
		table.remove(altListNames[altMain], altIndex)
		cecho(f"&lt;red&gt;{altName} &lt;cyan&gt;removed from list of alts for &lt;red&gt;{altMain}&lt;cyan&gt;.\n")
	end
  altList.saveAlts()
end

function altList.remMain(altName)
  local mainList = table.keys(altListNames)
  if table.contains(mainList, altName) then
    table.removekey(altListNames, altName)
    cecho(f"&lt;red&gt;{altName} &lt;cyan&gt;removed.\n")
  else
    cecho(f"&lt;red&gt;{altName} &lt;cyan&gt;is not listed as a main in the list.\n")
  end
  altList.saveAlts()
end

function table.removekey(table, key)
   local element = table[key]
   table[key] = nil
   return element
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>CM</name>
				<packageName></packageName>
				<script>function pushBoulder()
  send("push boulder southeast")
  cecho("&lt;cyan&gt;The next send pushes the boulder east.\n")
  coroutine.yield()
  send("push boulder east")
  cecho("&lt;cyan&gt;The next send pushes the boulder east.\n")
  coroutine.yield()
  send("push boulder east")
  cecho("&lt;cyan&gt;The next send pushes the boulder south.\n")
  coroutine.yield()
  send("push boulder south")
  cecho("&lt;cyan&gt;The next send pushes the boulder west.\n")
  coroutine.yield()
  send("push boulder west")
  cecho("&lt;cyan&gt;The next send pushes the boulder north.\n")
  coroutine.yield()
  send("push boulder north")
  cecho("&lt;cyan&gt;The next send pushes the boulder north.\n")
  coroutine.yield()
  send("push boulder north")
  cecho("&lt;cyan&gt;The next send pushes the boulder northeast.\n")
  coroutine.yield()
  send("push boulder northeast")
  cecho("&lt;cyan&gt;The next send pushes the boulder south.\n")
  coroutine.yield()
  send("push boulder south")
  cecho("&lt;cyan&gt;The next send pushes the boulder east.\n")
  coroutine.yield()
  send("push boulder east")
end</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Find Script</name>
				<packageName></packageName>
				<script>findSys = findSys or {}
findUsers = findUsers or {}

if io.exists(getMudletHomeDir().."/FindSys/findUsers.lua") then
    table.load(getMudletHomeDir().."/FindSys/findUsers.lua", findUsers) 
end

local find_success,find_failure,target_offline,in_combat,too_soon,low_ep,on_boat,on_mount,self_find

findSys.requestor = nil
findSys.target = nil
findSys.toggle = nil

function findSys.resetFindVars()
    find_success = false
    find_failure = false
    target_offline = false
    in_combat = false
    too_soon = false
    low_ep = false
    on_boat = false
    on_mount = false
    self_find = false
    findSys.find_failure = nil
    result_zone = nil
    result_subzone = nil
    result_room = nil
    findSys.requestor = nil
    findSys.target = nil
end

---Adds a user to the authorized user list
function findSys.addUser(user)
    if table.contains(findUsers,user) then
        cecho(f"&lt;cyan&gt;{string.title(user)} is already on the list of authorized users.")
    else
        table.insert(findUsers,user)
        table.save(getMudletHomeDir().."/FindSys/findUsers.lua", findUsers)
        cecho(f"\n&lt;cyan&gt;{string.title(user)} added to list of users with access to find/sense.")
    end
end

---Removes a user from the authorized user list
function findSys.removeUser(user)
    if table.contains(findUsers,user) then
        for key,value in pairs(findUsers) do
            if value == user then 
                findUsers[key] = nil
                cecho(f"\n&lt;cyan&gt;{string.title(user)} removed from authorized user list.")
            end
        end
    else
        cecho(f"\n&lt;cyan&gt;{string.title(user)} is not an authorized user.")
    end
    table.save(getMudletHomeDir().."/FindSys/findUsers.lua", findUsers)
end

---Lists all authorized users
function findSys.listUsers()
    cecho("&lt;cyan&gt;Authorized Users:\n")
    if table.is_empty(findUsers) then
        cecho("&lt;red&gt;No users authorized\n")
    else
        for key,value in spairs(findUsers) do
            cecho(f"&lt;red&gt;{string.title(value)}\n")
        end
    end
end

---checks a user against the authorized user list when a request is received
function findSys.verifyUser(user)
    if table.contains(findUsers,user) then
        raiseEvent("onAuthorizedUser")
    else
        disableTrigger("Find Results Group")
    end
end

function findSys.authorized()
    if findSys.toggle == "on" then
        findSys.find()
    elseif findSys.toggle == "off" then
        cecho(f"\n&lt;red&gt;Autofind disabled, use the command &lt;yellow&gt;runit&lt;red&gt; to run find.\n")
    end
end

---performs the find on the requested target
function findSys.find()
    send(f"find {findSys.target}",false)
end

---Creates failure response string if find fails
function findSys.failures()
    if find_failure then
        findSys.find_failure = "Find attempt failed, please try again."
    elseif target_offline then
        findSys.find_failure = "Target not present."
    elseif in_combat then
        findSys.find_failure = "Currently in combat.  Please advise if request is urgent."
    elseif too_soon then
        findSys.find_failure = "I haven't been online long enough to run finds."
    elseif low_ep then
        findSys.find_failure = "I do not currently have enough EP to run a find."
    elseif self_find then
        findSys.find_failure = "I cannot run finds on myself."
    end
    findSys.sendResults()
end

---Sends find results or failure response string
function findSys.sendResults()
    if find_success then
        if findSys.requestor == "guild" then
            if result_room then
                if on_boat then
                    send(f"${string.title(findSys.target)} is on a boat in Zone: {result_zone}, Subzone: {result_subzone}, Room: {string.title(result_room)}.",false)
                elseif on_mount then
                    send(f"${string.title(findSys.target)} is on a mount in Zone: {result_zone}, Subzone: {result_subzone}, Room: {string.title(result_room)}.",false)
                else
                    send(f"${string.title(findSys.target)} is in Zone: {result_zone}, Subzone: {result_subzone}, Room: {string.title(result_room)}.",false)
                end
            else
                if on_boat then
                    send(f"${string.title(findSys.target)} is on a boat in Zone: {result_zone}, Subzone: {result_subzone}, Room: No room was found.",false)
                elseif on_mount then
                    send(f"${string.title(findSys.target)} is on a mount in Zone: {result_zone}, Subzone: {result_subzone}, Room: No room was found.",false)
                else
                    send(f"${string.title(findSys.target)} is in Zone: {result_zone}, Subzone: {result_subzone}, Room: No room was found.",false)
                end
            end
        else
            if result_room then
                if on_boat then
                    send(f"tell {findSys.requestor} {string.title(findSys.target)} is on a boat in Zone: {result_zone}, Subzone: {result_subzone}, Room: {string.title(result_room)}.",false)
                elseif on_mount then
                    send(f"tell {findSys.requestor} {string.title(findSys.target)} is on a mount in Zone: {result_zone}, Subzone: {result_subzone}, Room: {string.title(result_room)}.",false)
                else
                    send(f"tell {findSys.requestor} {string.title(findSys.target)} is in Zone: {result_zone}, Subzone: {result_subzone}, Room: {string.title(result_room)}.",false)
                end
            else
                if on_boat then
                    send(f"tell {findSys.requestor} {string.title(findSys.target)} is on a boat in Zone: {result_zone}, Subzone: {result_subzone}, Room: No room was found.",false)
                elseif on_mount then
                    send(f"tell {findSys.requestor} {string.title(findSys.target)} is on a mount in Zone: {result_zone}, Subzone: {result_subzone}, Room: No room was found.",false)
                else
                    send(f"tell {findSys.requestor} {string.title(findSys.target)} is in Zone: {result_zone}, Subzone: {result_subzone}, Room: No room was found.",false)
                end
            end
        end
    elseif findSys.find_failure then
        if findSys.requestor == "guild" then
            cecho("\nFind failed, try again.\n")
        else
            send(f"tell {findSys.requestor} Find on {string.title(findSys.target)} was unsuccessful due to the following reason: {findSys.find_failure}",false)
        end
    end
    disableTrigger("Find Results Group")
end

---Disables find requests after one minute of no manual mud input
---to prevent people from being able to keep you unidle with requests
function findSys.timer(data)
  local tempCommand = data
    if data == command or string.starts(tempCommand, "sendfind") then
        enableTrigger("Find System")
        if findTimer then killTimer(findTimer) end
        findTimer = tempTimer(60, [[ findSys.disableFinds() ]])
    end
  --if string.starts(tempCommand, "sendfind") then
  --  send(f"{data}")
  --end
end

function findSys.disableFinds()
    disableTrigger("Find System")
end

---Toggles between automatically running find requests from 
---Authorized users and manually having to run each find request
---From an authorized user
function findSys.autoToggle()
    if findSys.toggle and findSys.toggle == "on" then
        findSys.toggle = "off"
        cecho(f"\n&lt;cyan&gt;Automatic replies to authorized users for find requests are now &lt;red&gt;disabled&lt;reset&gt;&lt;cyan&gt;.\nTo respond to find requests, use the command &lt;yellow&gt;runit&lt;reset&gt;.\n")
    elseif findSys.toggle and findSys.toggle == "off" then
        findSys.toggle = "on"
        cecho(f"\n&lt;cyan&gt;Automatic replies to authorized users for find requests are now &lt;red&gt;enabled.\n")
    else
        findSys.toggle = "on"
        cecho(f"\n&lt;cyan&gt;Automatic replies to authorized users for find requests are now &lt;red&gt;enabled.\n")
    end
end

---Event Handler
function findSys.eventHandler(event,...)
    if event == 'onFindRequest' then
        findSys.resetFindVars()
        findSys.requestor = arg[1]
        findSys.target = arg[2]
        findSys.verifyUser(findSys.requestor)
    elseif event == 'onAuthorizedUser' then
        enableTrigger("Find Results Group")
        findSys.authorized()
        --findSys.find()
    elseif event == 'onManualSend' then
        findSys.resetFindVars()
        findSys.requestor = arg[1]
        findSys.target = arg[2]
        enableTrigger("Find Results Group")
        findSys.find()
    elseif event == 'onFindSuccess' then
        find_success = true
        findSys.sendResults()
    elseif event == 'onFindFailure' then
        find_failure = true
        findSys.failures()
    elseif event == 'onTargetOffline' then
        target_offline = true
        findSys.failures()
    elseif event == 'onSelfFind' then
        self_find = true
        findSys.failures()
    elseif event == 'onInCombat' then
        in_combat = true
        findSys.failures()
    elseif event == 'onTooSoon' then
        too_soon = true
        findSys.failures()
    elseif event == 'onLowEP' then
        low_ep = true
        findSys.failures()
    elseif event == 'onBoat' then
        on_boat = true
        raiseEvent("onFindSuccess")
    elseif event == 'onMount' then
        on_mount = true
        raiseEvent("onFindSuccess")
    elseif event == 'onAutoToggle' then
        findSys.autoToggle()
    elseif event == 'sysDataSendRequest' then
        findSys.timer(arg[1])
    elseif event == "sysLoadEvent" then
        tempTimer(4,function () hecho("#E0FFFFFind System for The Two Towers Mud loaded. Please use #EED202findsys help #E0FFFFto get started.|r\n") end)
    end
end

findSys.registeredEvents = {
    registerAnonymousEventHandler("onFindRequest", "findSys.eventHandler"),
    registerAnonymousEventHandler("onAuthorizedUser", "findSys.eventHandler"),
    registerAnonymousEventHandler("onManualSend", "findSys.eventHandler"),
    registerAnonymousEventHandler("onFindSuccess", "findSys.eventHandler"),
    registerAnonymousEventHandler("onFindFailure", "findSys.eventHandler"),
    registerAnonymousEventHandler("onTargetOffline", "findSys.eventHandler"),
    registerAnonymousEventHandler("onInCombat", "findSys.eventHandler"),
    registerAnonymousEventHandler("onTooSoon", "findSys.eventHandler"),
    registerAnonymousEventHandler("onLowEp", "findSys.eventHandler"),
    registerAnonymousEventHandler("onBoat", "findSys.eventHandler"),
    registerAnonymousEventHandler("onMount", "findSys.eventHandler"),
    registerAnonymousEventHandler("sysLoadEvent","findSys.eventHandler"),
    registerAnonymousEventHandler("onSelfFind","findSys.eventHandler"),
    registerAnonymousEventHandler("onAutoToggle","findSys.eventHandler"),
    registerAnonymousEventHandler("sysDataSendRequest", "findSys.eventHandler"),
}

---Help functions
findSys.help = {[[
    &lt;cyan&gt;The Two Towers Find System&lt;reset&gt;
    
    This is intended to automate performing find/sense requests for friends.
    This is purely for convenience, keeping you from having to keep an eye
    out for requests, run finds manually, and copy and paste the results 
    back to the person who requested it.  

    There are a few key features that should keep this running smoothly and 
    not producing unwanted results or leaving yourself open to malicious 
    users.  It is only designed to function correctly if you have 100 6th
    sense and either get a find failure or a full find result.  Partial
    find results, which you will get if you don't have enough 6th sense,
    are not covered.

    One further note:  I've built an "anti anti idle" timer/trigger into
    this.  If you have not sent manual mud commands within the last 60
    seconds, the find triggers disable.  This is to prevent someone from
    keeping you unidle using these triggers.  Note that this _only_ 
    reenables the find triggers on manual input.  Getting a find request,
    running the find and sending the results via trigger does not reset 
    the timer, and therefore you still cannot be kept unidle by someone
    sending a find request within the first 60 seconds and continuing to
    do so every minute.  

    &lt;cyan&gt;Help Sections/Commands&lt;reset&gt;

    &lt;yellow&gt;findsys help&lt;reset&gt; - Brings up this help menu.
    
    &lt;yellow&gt;findsys help security&lt;reset&gt; - Brings up the security portion of the FindSys 
    help system.

    &lt;yellow&gt;findsys help usage&lt;reset&gt; - Brings up information on the day to day usage of 
    this script and it's triggers/aliases.


    Please continue on with &lt;yellow&gt;findsys help security&lt;reset&gt;.

]]}

findSys.help.security = [[
    
    &lt;cyan&gt;FindSys Security&lt;reset&gt;

    &lt;cyan&gt;Authorized User List&lt;reset&gt;
    This script creates and maintains a list of authorized users which
    should keep unwanted persons from accessing your triggers and possibly
    injecting malicious commands (if there are any security holes) or simply
    running you out of EP.

    The list is created when you add your first user.  The table is saved
    in your Mudlet home directory, in the profiles folder and folder for
    your T2T session.  

    &lt;cyan&gt;The following commands are available.&lt;reset&gt;
    &lt;red&gt;Add user&lt;reset&gt;
    Syntax: &lt;yellow&gt;add user username&lt;reset&gt;
    This adds a user to your list of authorized users.

    &lt;red&gt;Remove user&lt;reset&gt;
    Syntax: &lt;yellow&gt;rem user username&lt;reset&gt;
    This removes a user from your list of authorized users.

    &lt;red&gt;List users&lt;reset&gt;
    Syntax: &lt;yellow&gt;list users&lt;reset&gt;
    This gives you a list of users that you have given access to.
    
    &lt;red&gt;sendfind&lt;reset&gt;
    Syntax: &lt;yellow&gt;sendfind user target&lt;reset&gt;
    This manually sends find results to an authorized user with
    a target's location.

    &lt;cyan&gt;Trigger on Color&lt;reset&gt;
    This secondary step provides an added layer of security, if minimal,
    to find requsts sent via tells.

    The first step to setting this up is to use the 'color' command on 
    the mud, setting your preferred color to 'tell' -- currently option 
    32.  

    In the Find System folder in the Triggers window, locate the 'Find 
    Request' trigger.  On the second line of trigger parameters, set the 
    foreground color to the color that you have setup on the mud for tells.
    It should be currently set to &lt;green&gt;$HIG$&lt;reset&gt;, which matches my
    system.

    Please continue with &lt;yellow&gt;findsys help usage&lt;reset&gt;.
]]

findSys.help.usage = [[
    &lt;cyan&gt;Find System Usage&lt;reset&gt;

    Maintaining the list of authorized users is already covered in &lt;yellow&gt;findsys
    &lt;yellow&gt;help security&lt;reset&gt;. Please refer back to that if needed.

    When you add a user to your list, it automatically sends a tell to
    that user letting them know they have been added, along with 
    instructions on how to use it.

    Aside from that, the only thing left to discuss is failure conditions.

    &lt;cyan&gt;Failure Conditions&lt;reset&gt;

    These are the conditions covered by the script.  When one of these 
    conditions is met, it reports that information back to the person
    requesting the find.

    &lt;yellow&gt;Find failure - typically only happens when 6th sense is not maxed.&lt;reset&gt;
    &lt;yellow&gt;User is offline or does not exist&lt;reset&gt;
    &lt;yellow&gt;You're in combat.&lt;reset&gt;
    &lt;yellow&gt;You're out of EP.&lt;reset&gt;
    &lt;yellow&gt;You haven't been online long enough and are restricted by the system.&lt;reset&gt;
    &lt;yellow&gt;Someone thinks they're funny by asking you to run a find on yourself.&lt;reset&gt;
    
    Hopefully I haven't missed any, but if I have, let me know and I'll
    add them in. 
]]</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Forge Status</name>
				<packageName></packageName>
				<script>forgeStatus = forgeStatus or {}

local profilePath = getMudletHomeDir()
profilePath = profilePath:gsub("\\","/")

local timeUp

local function forgeStart()
  t2tvars["forgeCount"] = t2tvars["forgeCount"] + 1
  timeUp = false
  send("do get tongs, grip blank, pump bellows, heat blank,2drink keg")
  t2tvars["forgeStatus"] = f"Current Count: {t2tvars['forgeCount']}"
  t2tvars.save()
end

local function newRound()
  if not timeUp and t2tvars["forgeCount"] &gt; 0 and t2tvars["forgeCount"] &lt;10 then
    t2tvars["forgeCount"] = t2tvars["forgeCount"] + 1       
    send("do get tongs, grip blank, pump bellows, heat blank")
  end
  t2tvars["forgeStatus"] = f"Current Count: {t2tvars['forgeCount']}"
  t2tvars.save()
end

local function forgeTimeUp()
  timeUp = true
  cecho("\n&lt;ansi_light_green&gt;Forge time is up!")
end

local function forgeReset()
  t2tvars["forgeCount"] = 0
  send("wield sword")
  cecho("\n&lt;red&gt;******&lt;cyan&gt;Sword finished&lt;red&gt;******")
  t2tvars["forgeStatus"] = f"Ready to Forge"
  t2tvars.save()
end

function forgeStatus.eventHandler(event,...)
  if event == 'onForgeStart' then
    forgeStart()
  elseif event == 'onNewForgeRound' then
    newRound()
  elseif event == 'onForgeReset' then
    forgeReset()
  elseif event == 'onForgeStop' then
    forgeTimeUp()
  end
end

forgeStatus.registeredEvents = {
  registerAnonymousEventHandler("onForgeStart", "forgeStatus.eventHandler"),
  registerAnonymousEventHandler("onNewForgeRound", "forgeStatus.eventHandler"),
  registerAnonymousEventHandler("onForgeReset", "forgeStatus.eventHandler"),
  registerAnonymousEventHandler("onForgeStop", "forgeStatus.eventHandler"),
}</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Info Container</name>
				<packageName></packageName>
				<script>infoCon = infoCon or Adjustable.Container:new(
  {
  name = "Forge Container",
  adjLabelstyle = "background-color:rgba(0,0,0,0%); border: 3px groove yellow; border-radius: 10px;",
  })

infoLabel = Geyser.Label:new({
  name="forgeLabel",
  x="0%", 
  y="0%", 
  height="100%", 
  width="100%",
  },infoCon)

infoLabel:setFontSize(12)
infoLabel:setStyleSheet([[
  background-color: black;
  color: cyan;
  border: 3px groove yellow; 
  border-radius: 10px;
  padding: 3px;
  qproperty-wordWrap: true;
  ]],infoCon)

infoStatus = infoStatus or {}

local profilePath = getMudletHomeDir()
profilePath = profilePath:gsub("\\","/")

--t2tvars["showForge"] = t2tvars["showInns"] or ""
--t2tvars["showMordor"] = t2tvars["showInns"] or ""
--t2tvars["showPVP"] = t2tvars["showInns"] or ""
--t2tvars["showBank"] = t2tvars["showInns"] or ""
--t2tvars["showInns"] = t2tvars["showInns"] or ""



local function updateInfoDisplay()
  raiseEvent("onGetMordorTime")
  raiseEvent("onUpdateInns")
  raiseEvent("onUpdatePVPDisplay")
  local forgePre = string.format("%-20s", "Forge Status:")
  local morPassPre = string.format("%-20s", "Mordor Password:")
  local morTimePre = string.format("%-20s", "Time:")
  local targOnePre = string.format("%-20s", "Targ1:")
  local targTwoPre = string.format("%-20s", "Targ2:")
  local bankPre = string.format("%-20s", "Current Balance:")
  local rentedPre = string.format("%-20s", "Rented Inns:")
  local forgeStatus = t2tvars['forgeStatus']
  local mordorPass = t2tvars['mordorPass']
  local mordorTimeString = t2tvars['mordorTimeString']
  local targ1 = t2tvars['targ1']
  local targ2 = t2tvars['targ2']
  local balance = currentBalance
  local rentedInns = t2tvars['Rented']
  local statusText = ""
  if t2tvars["showForge"] then
    statusText = statusText .. f"&lt;cyan&gt;{forgePre}&lt;red&gt;{forgeStatus} &lt;reset&gt;\n"
  end

  if t2tvars["showMordor"] then
    statusText = statusText .. f"&lt;cyan&gt;{morPassPre}&lt;red&gt;{mordorPass}&lt;reset&gt; \n&lt;cyan&gt;{morTimePre}&lt;red&gt;{mordorTimeString}&lt;reset&gt;\n"
  end

  if t2tvars["showPVP"] then
    statusText = statusText .. f"&lt;cyan&gt;{targOnePre}&lt;red&gt;{targ1}&lt;reset&gt;\n&lt;cyan&gt;{targTwoPre}&lt;red&gt;{targ2}&lt;reset&gt;\n"
  end

  if t2tvars["showBank"] then
    statusText = statusText .. f"&lt;cyan&gt;{bankPre}&lt;red&gt;{balance}&lt;reset&gt;\n"
  end

  if t2tvars["showInns"] then
    statusText = statusText .. f"&lt;cyan&gt;{rentedPre}&lt;red&gt;{rentedInns}&lt;reset&gt;\n"
  end
  infoLabel:cecho(f"&lt;pre&gt;{statusText}&lt;/pre&gt;")
end


function infoStatus.eventHandler(event,...)
  if event == "onEnableForge" then
    t2tvars["showForge"] = true
    t2tvars.save()

  elseif event == "onDisableForge" then
    t2tvars["showForge"] = false
    t2tvars.save()

  elseif event == "onEnableMordor" then
    t2tvars["showMordor"] = true
    t2tvars.save()

  elseif event == "onDisableMordor" then
    t2tvars["showMordor"] = false
    t2tvars.save()

  elseif event == "onEnablePVP" then
    t2tvars["showPVP"] = true
    t2tvars.save()

  elseif event == "onDisablePVP" then
    t2tvars["showPVP"] = false
    t2tvars.save()

  elseif event == "onEnableBank" then
    t2tvars["showBank"] = true
    t2tvars.save()

  elseif event == "onDisableBank" then
    t2tvars["showBank"] = false
    t2tvars.save()

  elseif event == "onEnableInns" then
    t2tvars["showInns"] = true
    t2tvars.save()

  elseif event == "onDisableInns" then
    t2tvars["showInns"] = false
    t2tvars.save()
  
  elseif event == "onUpdateDisplay" then
    updateInfoDisplay()
  end
end

infoStatus.registeredEvents = {
  registerAnonymousEventHandler("onEnableForge", "infoStatus.eventHandler"),
  registerAnonymousEventHandler("onDisableForge", "infoStatus.eventHandler"),
  registerAnonymousEventHandler("onEnableMordor", "infoStatus.eventHandler"),
  registerAnonymousEventHandler("onDisableMordor", "infoStatus.eventHandler"),
  registerAnonymousEventHandler("onEnablePVP", "infoStatus.eventHandler"),
  registerAnonymousEventHandler("onDisablePVP", "infoStatus.eventHandler"),
  registerAnonymousEventHandler("onEnableBank", "infoStatus.eventHandler"),
  registerAnonymousEventHandler("onDisableBank", "infoStatus.eventHandler"),
  registerAnonymousEventHandler("onEnableInns", "infoStatus.eventHandler"),
  registerAnonymousEventHandler("onDisableInns", "infoStatus.eventHandler"),
  registerAnonymousEventHandler("onUpdateDisplay", "infoStatus.eventHandler"),
}
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Inns</name>
				<packageName></packageName>
				<script>inns = inns or {}

local profilePath = getMudletHomeDir()
profilePath = profilePath:gsub("\\","/")

t2tvars.innTable = t2tvars.innTable or {}

function t2tMapper.addInn(inn)
    if not table.contains(t2tvars.innTable,inn) then
        t2tvars.innTable[inn] = false
    cecho(f"\n&lt;red&gt;{inn} &lt;cyan&gt;added to table.\n")
  else
    cecho(f"\n&lt;red&gt;{inn} &lt;cyan&gt;already in list.\n")
    end
  t2tvars.save()
end

function resetInns()
  for inn, value in pairs(t2tvars.innTable) do
    t2tvars.innTable[inn] = false
  end
  t2tvars.save()
end

function createRentedInnList()
  local rentedRooms = {}
  for inn, status in pairs(t2tvars.innTable) do
    if t2tvars.innTable[inn] == true then
      table.insert(rentedRooms,inn)
    end
  end
  t2tvars["Rented"] = table.concat(rentedRooms, ", ")
  t2tvars.save()
end

function inns.eventHandler(event,...)
  if event == "onInnReset" then
    resetInns()
  elseif event == "onUpdateInns" then
    createRentedInnList()
  end
end

inns.registeredEvents = {
  registerAnonymousEventHandler("onInnReset","inns.eventHandler"),
  registerAnonymousEventHandler("onUpdateInns","inns.eventHandler"),
}
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Inventory</name>
				<packageName></packageName>
				<script>local profilePath = getMudletHomeDir()
profilePath = profilePath:gsub("\\","/")

invMan = invMan or {}

invManVars = invManVars or {}
if io.exists(profilePath.."/Inventory/invManVars.lua") then
    table.load(profilePath.."/Inventory/invManVars.lua", invManVars) 
end

invTables = invTables or {}
if io.exists(profilePath.."/Inventory/invTables.lua") then
    table.load(profilePath.."/Inventory/invTables.lua", invTables) 
end

function invSave()
  table.save(profilePath.."/Inventory/invManVars.lua", invManVars)
  table.save(profilePath.."/Inventory/invTables.lua", invTables)
end

local armourNames = armourNames or {}
local baldricNames = baldricNames or {}
local bonusNames = bonusNames or {}
local containerNames = containerNames or {}
local healingNames = healingNames or {}
local keyNames = keyNames or {}
local lightNames = lightNames or {}
local miscNames = miscNames or {}
local poisonNames = poisonNames or {}
local weaponNames = weaponNames or {}

ww = ww or {}
ww["knife"] = "wield knife"
ww["dagger"] = "wield dagger from cloak"
ww["sword"] = "wield sword from baldric"
ww["bow"] = "wield bow"
ww["axe"] = "draw axe"
ww["spear"] = "draw spear"
ww["mace"] = "draw mace"
ww["flail"] = "wield flail from pack"
ww["polearm"] = "draw polearm, wield polearm from cloak"
ww["staff"] = "draw staff"
ww["whip"] = "wield whip from pack"
ww["hammer"] = "draw hammer"
ww["globe"] = "wield globe from pack, wield globe from cloak"
ww["prod"] = "wield prod from pack, wield prod from cloak"

rw = rw or {}
rw["knife"] = "sheath knife"
rw["dagger"] = "put dagger in cloak"
rw["sword"] = "put sword in baldric"
rw["bow"] = "sling bow"
rw["axe"] = "put axe in belt"
rw["spear"] = "put spear in sheath"
rw["mace"] = "put mace in belt"
rw["flail"] = "put flail in pack"
rw["polearm"] = "put polearm in sling, put polearm in sheath, put polearm in cloak, put polearm in pack"
rw["staff"] = "put staff in sling"
rw["whip"] = "put whip in pack"
rw["hammer"] = "put hammer in belt"
rw["globe"] = "put globe in pack, put globe in cloak"
rw["prod"] = "put prod in pack, put prod in cloak"

local profAbilities = {
  archer = 'kickback', 
  assassin = 'backstab', 
  rider = 'trample', 
  thief = 'steal all gold from', 
  warrior = 'headbutt', 
  civilian = 'twiddle', 
  ranger = 'feint',
  wizard = 'cast fireball',
  minion = 'twiddle',
  necromancer = 'leech',
  sniffer = 'shiv',
  }

local function setProfAbility()
  local tempProf = currentProf
  if table.contains(profAbilities, tempProf) then
    t2tvars["profAbility"] = profAbilities[tempProf]
  end
end



local function allNames()
  local nameKeys = {}
  for cat, items in pairs(invTables) do
    for _, item in ipairs(items) do
      nameKeys[item.name] = true
    end
  end
  return table.keys(nameKeys)
end

local function namesForCat(cat)
  local nameKeys = {}
  for _, item in ipairs(invTables[cat]) do
    nameKeys[item.name] = true
  end
  return table.keys(nameKeys)
end

local function updateNames()
  armourNames = namesForCat("Armour")
  baldricNames = namesForCat("Baldrics")
  bonusNames = namesForCat("Bonus")
  containerNames = namesForCat("Containers")
  healingNames = namesForCat("Healing")
  keyNames = namesForCat("Keys")
  lightNames = namesForCat("Light")
  miscNames = namesForCat("Misc")
  poisonNames = namesForCat("Poisons")
  weaponNames = namesForCat("Weapons")
end

local function resetFlags()
  invNames = allNames()
  invFlags = {}
  weapFlags = {}
  for key, value in ipairs(invNames) do
    invFlags[value] = false
  end
  for key, value in ipairs(weaponNames) do
    weapFlags[value] = false
  end
end

local function findTrue()
  trueFlags = {}
  for key, value in spairs(invFlags) do
    if invFlags[key] == true then
      table.insert(trueFlags, key)
    end
  end
end

local function allNameCommands()
  handheldCommands = {}
  packableCommands = {}
  bonusCommands = {}
  darkCommands = {}
  for cat, items in pairs(invTables) do
    for _, item in ipairs(items) do
        if item.command ~= "" and item.itemType == "packable" and table.contains(trueFlags, item.name) then
          packableCommands[item.name] = item.command
        end
        if item.command ~= "" and item.itemType == "handheld" and table.contains(trueFlags, item.name) then
          handheldCommands[item.name] = item.command
        end
        if item.command ~= "" and item.itemType == "bonus" and table.contains(trueFlags, item.name) then
          bonusCommands[item.name] = item.command
        end
        if item.command ~= "" and item.itemType == "dark" and table.contains(trueFlags, item.name) then
          darkCommands[item.name] = item.command
        end
    end
  end
end

local function updateAliases()
  send("score")
  setProfAbility()
  invManVars["packableString"] = "do "
  invManVars["handheldString"] = "do "
  invManVars["bonusString"] = "do "
  invManVars["darkString"] = "do "

  for key, value in pairs(packableCommands) do
    invManVars["packableString"] = invManVars["packableString"] .. value .. ", "
  end
  for key, value in pairs(handheldCommands) do
    invManVars["handheldString"] = invManVars["handheldString"] .. value .. ", "
  end
  for key, value in pairs(bonusCommands) do
    invManVars["bonusString"] = invManVars["bonusString"] .. value .. ", "
  end
  for key, value in pairs(darkCommands) do
    invManVars["darkString"] = invManVars["darkString"] .. value .. ", "
  end

  send(f"alias hh {invManVars['handheldString']}")
  send(f"alias ph {invManVars['packableString']}")
  send(f"alias bi {invManVars['bonusString']}")
  send(f"alias di {invManVars['darkString']}")
  send(f"alias r {t2tvars['profAbility']}")
end
  
local function setCurrentWeapons()
  invManVars.Weapons = {}
  local equippedWeapons = invManVars.Weapons
  for key, value in spairs(weapFlags) do
    if value == true then
      equippedWeapons[#equippedWeapons + 1] = key
    end
  end
  invSave()
end


local function setWeaponAliases()
  local weap1, weap2 = getTypeByItem(invManVars.Weapons[1])[1], getTypeByItem(invManVars.Weapons[2])[1]
  send(f"alias ww do {ww[weap1]}")
  send(f"alias rw do {rw[weap1]}")
  send(f"alias ww2 do {ww[weap2]}")
  send(f"alias rw2 do {rw[weap2]}")
  
end


function getTypeByItem(itemName)
  local typeKeys = {}
  for cat, items in pairs(invTables) do
    for _, item in ipairs(items) do
      if item.name == itemName then
        typeKeys[item.itemType] = true
      end
    end
  end
  return table.keys(typeKeys)
end


function invMan.eventHandler(event,...)
    if event == "onInventoryReset" then
        updateNames()
        resetFlags()
    elseif event == "onSetCurrentInventory" then
        findTrue()
        allNameCommands()
        updateAliases()
        setCurrentWeapons()
        setWeaponAliases()
    end
end


invMan.registeredEvents = {
    registerAnonymousEventHandler("onInventoryReset", "invMan.eventHandler"),
    registerAnonymousEventHandler("onSetCurrentInventory", "invMan.eventHandler"),
}</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Map Sim</name>
				<packageName></packageName>
				<script>----------------------------------------------------------------------
-----------------------------MAP SIM----------------------------------
----------------------------------------------------------------------
mapSim = mapSim or {}

local stubmap = t2tvars.stubmap
local exitmap = t2tvars.exitmap
local coordmap = t2tvars.coordmap

local short = {}
for k,v in pairs(exitmap) do
    short[v] = k
end

local walking

function mapSim.moveMap(dir)
  local longDir
  if exitmap[dir] then
    longDir = exitmap[dir]
  else
    longDir = dir
  end
  local currentExits = mapSim.getAllExits(map.currentRoom)
  if currentExits[longDir] then
    local nextRoom = tonumber(currentExits[longDir])
    local nextExits = mapSim.getAllExits(nextRoom)
    map.prompt.room = getRoomName(nextRoom)
    map.prompt.exits = table.concat(table.keys(nextExits), " ")
    raiseEvent("sysDataSendRequest",dir)
    raiseEvent("onNewRoom")
    --print(map.prompt.exits)
    cecho(f"&lt;ansi_light_yellow&gt;\&gt;\&gt;{longDir}\n")
    cecho(f"Room: &lt;ansi_cyan&gt;{getRoomName(map.currentRoom)} &lt;reset&gt;- Exits: &lt;gray&gt;{table.concat(table.keys(mapSim.getAllExits(map.currentRoom)),', ')}\n")
  else
    cecho(f"&lt;ansi_light_cyan&gt;Exit: &lt;ansi_light_red&gt;{longDir} &lt;ansi_light_cyan&gt;not found.\n.")
  end
end

function mapSim.getAllExits(roomID)
  local standardExits = getRoomExits(roomID)
  local specialExits = getSpecialExitsSwap(roomID)
  local stubExits = mapSim.getStubExits(roomID)
  local allExits = table.union(standardExits, specialExits, stubExits)
  return allExits
end

function mapSim.getStubExits(roomID)
  local stubExitTable = {}
  if getExitStubs1(roomID) then
    for index, stub in ipairs(getExitStubs1(roomID)) do
      stubExitTable[stubmap[stub]] = ""
    end
  end
  return stubExitTable
end

function mapSim.go(dest)
    local roomDestination = nil
    local roomDestination = t2tMapper.parseRoomAsShortOrID(dest)
    if roomDestination ~= nil then
      mapSim.speedwalk(roomDestination)
    else
      cecho("&lt;red&gt;Room not found")
    end
end

local continue_walk, timerID
continue_walk = function(new_room)
    if not walking then return end
    -- calculate wait time until next command, with randomness
    local wait = map.configs.speedwalk_delay or 0
    if wait &gt; 0 and map.configs.speedwalk_random then
        wait = wait * (1 + math.random(0,100)/100)
    end
    -- if no wait after new room, move immediately
    if new_room and map.configs.speedwalk_wait and wait == 0 then
        new_room = false
    end
    -- send command if we don't need to wait
    if not new_room then
        mapSim.moveMap(table.remove(mapSim.walkDirs,1))
        -- check to see if we are done
        if #mapSim.walkDirs == 0 then
            walking = false
            speedWalkPath, speedWalkWeight = {}, {}
            raiseEvent("sysSpeedwalkFinished")
        end
    end
    -- make tempTimer to send next command if necessary
    if walking and (not map.configs.speedwalk_wait or (map.configs.speedwalk_wait and wait &gt; 0)) then
        if timerID then killTimer(timerID) end
        timerID = tempTimer(wait, function() continue_walk() end)
    end
end

function mapSim.speedwalk(roomID, walkPath, walkDirs)
    roomID = roomID or speedWalkPath[#speedWalkPath]
    getPath(map.currentRoom, roomID)
    walkPath = speedWalkPath
    walkDirs = speedWalkDir
    if #speedWalkPath == 0 then
        map.echo("No path to chosen room found.",false,true)
        return
    end
    table.insert(walkPath, 1, map.currentRoom)
    if map.configs.use_translation then
        for k, v in ipairs(walkDirs) do
            walkDirs[k] = map.configs.lang_dirs[v] or v
        end
    end
    -- perform walk
    walking = true
    if map.configs.speedwalk_wait or map.configs.speedwalk_delay &gt; 0 then
        mapSim.walkDirs = walkDirs
        continue_walk()
    else
        for _,dir in ipairs(walkDirs) do
            mapSim.moveMap(dir)
        end
        walking = false
        raiseEvent("sysSpeedwalkFinished")
    end
end

function mapSim.eventHandler(event,...)
    if event == "onMove" then
        mapSim.moveMap(arg[1])
    elseif event == "onNewRoom" then
      if walking and map.configs.speedwalk_wait then
          tempTimer(0.2,function() continue_walk(true) end)
      end
    end
end

mapSim.registeredEvents = {
    registerAnonymousEventHandler("onMove","mapSim.eventHandler"),
    registerAnonymousEventHandler("onNewRoom","mapSim.eventHandler"),
}
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Mordor</name>
				<packageName></packageName>
				<script>mordor = mordor or {}

local profilePath = getMudletHomeDir()
profilePath = profilePath:gsub("\\","/")


local function setMordorUptime(pass)
  mordorPassStopWatch = mordorPassStopWatch or createStopWatch("mordorPassStopWatch",true)
  resetStopWatch("mordorPassStopWatch")
  startStopWatch("mordorPassStopWatch")
  setStopWatchPersistence("mordorPassStopWatch", true)
  t2tvars["mordorPass"] = pass
  t2tvars.save()
end

local function getMordorTime()
  mordorTimeTable = getStopWatchBrokenDownTime("mordorPassStopWatch")
  local mordorTimeDays = mordorTimeTable["days"]
  local mordorTimeHours = mordorTimeTable["hours"]
  local mordorTimeMins = mordorTimeTable["minutes"]
  local mordorTimeSecs = mordorTimeTable["seconds"]
  t2tvars['mordorTimeString'] = f"{mordorTimeDays}d {mordorTimeHours}h {mordorTimeMins}m {mordorTimeSecs}s"
  t2tvars.save()
end

function mordor.eventHandler(event,...)
  if event == 'onSetMordorUptime' then
    setMordorUptime(arg[1])
  elseif event == 'onGetMordorTime' then
    getMordorTime()
  end
end

mordor.registeredEvents = {
  registerAnonymousEventHandler("onSetMordorUptime", "mordor.eventHandler"),
  registerAnonymousEventHandler("onGetMordorTime", "mordor.eventHandler"),
}</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>PVP Script</name>
				<packageName></packageName>
				<script>local profilePath = getMudletHomeDir()
profilePath = profilePath:gsub("\\","/")

pvpVars = pvpVars or {}
if io.exists(profilePath.."/PVP/pvpVars.lua") then
    table.load(profilePath.."/PVP/pvpVars.lua", pvpVars) 
end
pvpVars["target1"] = pvpVars["target1"] or "Not Set"
pvpVars["target2"] = pvpVars["target2"] or "Not Set"
pvpVars["lastAttacker"] = pvpVars["lastAttacker"] or "Not Set"

function pvpSave()
  table.save(profilePath.."/PVP/pvpVars.lua", pvpVars)
end

pvpScript = pvpScript or {}
pvpScript.whoList = pvpScript.whoList or {}
pvpScript.whoList.userList = pvpScript.whoList.userList or {}
pvpScript.whoList.pvpList = pvpScript.whoList.pvpList or {}

local function whoListCapture()
    pvpScript.whoList.userList = {}
    enableTrigger("Who All Group")
    send("who all")
end

local function pvpCapture()
    pvpScript.whoList.pvpList = {}
    enableTrigger("PVP Check Trigger")
    for k, v in pairs(pvpScript.whoList.userList) do
        send(f"legend {v}")
    end
    local lastUserNumber = table.size(pvpScript.whoList.userList)
    local lastUser = pvpScript.whoList.userList[lastUserNumber]
    local lastUserRegex = f"^{lastUser}.+is set to \\w+\\.$"
    tempRegexTrigger(lastUserRegex, [[showPVPUsers()]],1)    
end

function showPVPUsers()
    local pvpUsers = table.concat(pvpScript.whoList.pvpList,", ")
    cecho(f"\n\n&lt;cyan&gt;PVP On Users: &lt;red&gt;{pvpUsers}\n")
    disableTrigger("PVP Check Trigger")
end
    
local function backstabAlert(attacker)
    pvpVars["lastAttacker"] = attacker
    local room = map.currentName
    local exits = map.currentExits
    local exitString = table.concat(exits, ", ")
    send(f"$I've been backstabbed by $HIR${pvpVars['lastAttacker']}$0$.  Current HP/EP: $HIG${currentHP}/{currentEP}$0$. Current Room: $HIR${room}$0$, Exits: $HIC${exitString}")
end

local function failedBackstabAlert(attacker)
    t2tvars["lastAttacker"] = attacker
    pvpSave()
    local room = map.currentName
    local exits = map.currentExits
    local exitString = table.concat(exits, ", ")
    send(f"$$HIR${pvpVars['lastAttacker']} $0$just failed a backstab on me.  Current HP/EP: $HIG${currentHP}/{currentEP}$0$. Current Room: $HIR${room}$0$, Exits: $HIC${exitString}")
end

local function swapTarget()
    if pvpVars["target1"] and pvpVars["target1"] ~= "" and pvpVars["target2"] and pvpVars["target2"] ~= "" then
        local tempPrimary = pvpVars["target1"]
        local tempSecondary = pvpVars["target2"]
        pvpVars["target1"] = tempSecondary
        pvpVars["target2"] = tempPrimary
        pvpSave()
        cecho(f"&lt;cyan&gt;Primary target is now: &lt;red&gt;{pvpVars['target1']} &lt;cyan&gt;and Secondary target is now &lt;red&gt;{pvpVars['target2']}&lt;cyan&gt;.\n")
    else
        cecho("&lt;red&gt;One or both of your targets has not been set.\n")
    end
end

local function selectTarget()
    cecho(f"&lt;cyan&gt;Primary target &lt;red&gt;{pvpVars['target1']}&lt;cyan&gt; selected for aliases.\n")
    local targ = pvpVars["target1"]
    send(f"alias bs backstab {targ}")
    send(f"alias ht hunt {targ}")
    send(f"alias hr trigger {string.title(targ)} todo hunt {targ}")
    send(f"alias ft find {targ}")
    send(f"alias st shape {targ}")
    send(f"alias hb do headbutt {targ},kill {targ}")
    send(f"alias ff feint {targ}")
    send(f"alias kk kill {targ}")
    send(f"alias xx do charge {targ}, headbutt {targ}, 10feint {targ}, ram {targ}")
    send(f"alias pk do hunt {targ}, drink mixed potion, get horn from pack, blow horn, put horn in pack, wear gloves from pack, 2detach gem, 2wear dark ring from pack, 2wear dark ring from cloak, blow for strategy, ww, backstab {targ}")
    send(f"alias sk do drink mixed potion, wield runed staff from pack, wield runed staff from sling, strike {targ}")
    send(f"alias sv steal vial from {targ}")
end

local function updatePVP() 
  if t2tvars['target1'] then
    t2tvars["targ1"] = string.title(t2tvars['target1'])
  else
    t2tvars["targ1"] = "Not set"
  end
  if t2tvars['target2'] then 
    t2tvars["targ2"] = string.title(t2tvars['target2']) 
  else
    t2tvars["targ2"] = "Not set"
  end
  t2tvars.save()
end

function pvpScript.eventHandler(event,...)
    if event == "onWhoAll" then
        whoListCapture()
    elseif event == "onPVP" then
        pvpCapture()
    elseif event == "onBackstab" then
        backstabAlert(arg[1])
    elseif event == "onFailedBackstab" then
        failedBackstabAlert(arg[1])
    elseif event == "onSetPrimaryTarget" then
        pvpVars["target1"] = arg[1]
      pvpSave()
    elseif event == "onSetSecondaryTarget" then
        pvpVars["target2"] = arg[1]
      pvpSave()
    elseif event == "onSwapTarget" then
        swapTarget()
    elseif event == "onSelectTarget" then
        selectTarget()
    elseif event == "onUpdatePVPDisplay" then
        updatePVP()
    end
end

pvpScript.registeredEvents = {
    registerAnonymousEventHandler("onPVP", "pvpScript.eventHandler"),
    registerAnonymousEventHandler("onWhoAll", "pvpScript.eventHandler"),
    registerAnonymousEventHandler("onBackstab", "pvpScript.eventHandler"),
    registerAnonymousEventHandler("onFailedBackstab", "pvpScript.eventHandler"),
    registerAnonymousEventHandler("onSetPrimaryTarget", "pvpScript.eventHandler"),
    registerAnonymousEventHandler("onSetSecondaryTarget", "pvpScript.eventHandler"),
    registerAnonymousEventHandler("onSwapTarget", "pvpScript.eventHandler"),
    registerAnonymousEventHandler("onSelectTarget", "pvpScript.eventHandler"),
    registerAnonymousEventHandler("onSetPrimaryWeapon", "pvpScript.eventHandler"),
    registerAnonymousEventHandler("onSetSecondaryWeapon", "pvpScript.eventHandler"),
    registerAnonymousEventHandler("onSwapWeapon", "pvpScript.eventHandler"),
    registerAnonymousEventHandler("onUpdatePVPDisplay","pvpScript.eventHandler"),
}
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>t2tMapperAddons</name>
				<packageName></packageName>
				<script>t2tMapperAddons = t2tMapperAddons or {}


local profilePath = getMudletHomeDir()
profilePath = profilePath:gsub("\\","/")

--------------------------------------------------------------------------------
--Set additional Room Attributes
--------------------------------------------------------------------------------

--Breaks are a list of "Huntbreak" aliases for rooms
--This one checks to see if any are already listed and adds to that list,
--instead of just replacing it
function t2tMapperAddons.setRoomBreaks(room,breaks)
    local newBreaks = breaks
    local currentBreaks = t2tMapperAddons.returnBreaks(room)
    local allBreaks
    if currentBreaks then
        currentBreaks = string.trim(string.gsub(currentBreaks,newBreaks,""))
        allBreaks = string.trim(currentBreaks .. " " .. newBreaks)
    else
        allBreaks = newBreaks
    end
    setRoomUserData(room,'breaks',allBreaks)
end

--Inns just mark a specific room as an Inn, used for Status Window display
function t2tMapperAddons.setRoomInn(room,inn)
    setRoomUserData(room,'inn',inn)
end

--------------------------------------------------------------------------------
--Functions to Query Attribute from a Room
--------------------------------------------------------------------------------

function t2tMapperAddons.returnBreaks(room)
    local breaks = t2tMapper.returnRoomUserDataValue(room,'breaks')
    return breaks
end

function t2tMapperAddons.returnInn(room)
    local inn = t2tMapper.returnRoomUserDataValue(room,'inn')
    return inn
end

--------------------------------------------------------------------------------
--Functions to Remove an Attribute from a Room
--------------------------------------------------------------------------------

function t2tMapperAddons.clearRoomBreaks(room)
    clearRoomUserDataItem(room,'breaks')
end

function t2tMapperAddons.clearRoomInn(room)
    clearRoomUserDataItem(room,'inn')
end

--------------------------------------------------------------------------------
--Functions for Running Room Scripts and Displaying Alias/Break information
--------------------------------------------------------------------------------

function t2tMapperAddons.checkRoom()
    if map.currentRoom then
        local breakString = ""
        if t2tMapperAddons.returnBreaks(map.currentRoom) then
            local breaks = t2tMapperAddons.returnBreaks(map.currentRoom)
            breakString = f"&lt;white&gt;-(&lt;red&gt;{breaks}&lt;white&gt;)-&lt;reset&gt;"
        end
        if breakString:len() ~= 0 then
            cecho(f"\n{breakString}")
        end
    end 
end



--------------------------------------------------------------------------------
--Event Handler
--------------------------------------------------------------------------------

function t2tMapperAddons.eventHandler(event,...)
  if event == "onCheckRoom" then
    t2tMapperAddons.checkRoom()
  end
end

t2tMapperAddons.registeredEvents = {
  registerAnonymousEventHandler("onCheckRoom","t2tMapperAddons.eventHandler"),
}

--------------------------------------------------------------------------------
--Experimental
--------------------------------------------------------------------------------


-------addTroll works, move out of experimental section sooner or later

function t2tMapperAddons.addTroll()
  if not trollRooms[map.currentRoom] then
    trollRooms[map.currentRoom] = getRoomEnv(map.currentRoom)
    setRoomEnv(map.currentRoom, 270)
  end
end

function t2tMapperAddons.resetTrollRooms()
  for room, color in pairs(trollRooms) do
    setRoomEnv(room, color)
  end
  trollRooms = {}
end
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Trainers</name>
				<packageName></packageName>
				<script>local profilePath = getMudletHomeDir()
profilePath = profilePath:gsub("\\","/")

trainers = trainers or {}

if io.exists(profilePath.."/trainers/trainers.lua") then
    table.load(profilePath.."/trainers/trainers.lua", trainers) 
end

function saveTrainers()
  table.save(profilePath.."/trainers/trainers.lua", trainers)
end

trainers.archer = trainers.archer or {}
trainers.assassin = trainers.assassin or {}
trainers.civilian = trainers.civilian or {}
trainers.language = trainers.language or {}
trainers.minion = trainers.minion or {}
trainers.necromancer = trainers.necromancer or {}
trainers.ranger = trainers.ranger or {}
trainers.rider = trainers.rider or {}
trainers.sniffer = trainers.sniffer or {}
trainers.thief = trainers.thief or {}
trainers.tradeskill = trainers.tradeskill or {}
trainers.warrior = trainers.warrior or {}
trainers.wizard = trainers.wizard or {}

function findTrainer(query)
  local queryTable
  local skillsMatch = {}
  local skillsMatchList = {}
  local nameMatch = {}
  for search, profs in pairs(trainers) do
    for _,prof in ipairs(profs) do
      local skillList
      skillsMatch[prof.name] = prof.skills
      skillsMatchList[prof.name] = string.split(skillsMatch[prof.name],", ")
    end
  end
  if table.contains(table.keys(trainers),query) then
    local profTrainers = trainers[query]
    for search, trainer in ipairs(profTrainers) do
      cecho(f"&lt;cyan&gt;Trainer: &lt;red&gt;{trainer.name}, &lt;cyan&gt;Location: &lt;red&gt;{trainer.area}\n")
    end
  elseif table.contains(skillsMatchList, query) and not table.contains(table.keys(skillsMatchList),query) then
    for trainer,skills in pairs(skillsMatchList) do
      for _,skill in ipairs(skills) do
        if skill == query then
          nameMatch[trainer] = true
        end
      end
    end
    cecho(f"&lt;cyan&gt;These trainers train {query}:\n")
    for trainer, boo in pairs(nameMatch) do
        for search,profs in pairs(trainers) do
          for _,prof in ipairs(profs) do
            if prof.name == trainer then
              cecho(f"&lt;cyan&gt;Trainer: &lt;red&gt;{prof.name}, &lt;cyan&gt;Location: &lt;red&gt;{prof.area}\n")
            end
          end
        end 
    end
  elseif table.contains(trainers,query) then
    for search,profs in pairs(trainers) do
      for _,prof in ipairs(profs) do
        if prof.name == query then
          cecho(f"&lt;cyan&gt;Trainer: &lt;red&gt;{prof.name}, &lt;cyan&gt;Location: &lt;red&gt;{prof.area}, &lt;cyan&gt;Skills: &lt;red&gt;{prof.skills}, &lt;cyan&gt;Affinity: &lt;red&gt;{prof.affinity}\n")
        elseif prof.area == query then
          cecho(f"&lt;cyan&gt;Trainer: &lt;red&gt;{prof.name}, &lt;cyan&gt;Location: &lt;red&gt;{prof.area}, &lt;cyan&gt;Skills: &lt;red&gt;{prof.skills}, &lt;cyan&gt;Affinity: &lt;red&gt;{prof.affinity}\n")
        end
      end
    end    
  else
    cecho("&lt;red&gt;No results found\n")
  end
end
</script>
				<eventHandlerList />
			</Script>
			<Script isActive="yes" isFolder="no">
				<name>Window</name>
				<packageName></packageName>
				<script>local EMCO = require("TheTwoTowers.emco")
tabCon = tabCon or Adjustable.Container:new({name = "TabCon", consoleContainerCSS = stylesheet})
  
local stylesheet = [[background-color: rgb(0,180,0,255); border-width: 1px; border-style: solid; border-color: gold; border-radius: 8px;]]
local istylesheet = [[background-color: rgb(0,180,0,255); border-width: 1px; border-style: solid; border-color: gold; border-radius: 8px;]]
tabEMCO = EMCO:new({
    x = "0",
    y = "0",
    width = "100%",
    height = "100%",
    gap = 5,
    fontSize = 12,
    consoleColor = "black",
    consoles = {
      "Tells",
      "Guild",
    },
    activeTabCSS = stylesheet,
    inactiveTabCSS = istylesheet,
}, tabCon)
tabEMCO:setTabFontSize(11)
tabEMCO:setTabHeight(20)
</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>Test Stripts</name>
			<packageName></packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>Test Scripts</name>
				<packageName></packageName>
				<script>tabletest = {}
tabletest["one"] = 1
tabletest["two"] = 2
tabletest["three"] = 3
tabletest["four"] = 4</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>deleteOldProfiles</name>
			<packageName>deleteOldProfiles</packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>deleteOldProfiles script</name>
				<packageName></packageName>
				<script>function deleteOldProfiles(keepdays_arg, delete_folder)
  --[[
  Deletes old profiles/maps/modules in the "current"/"map"/"moduleBackups" folders of the Mudlet home directory.
  The following files are NOT deleted:
  - Files newer than the amount of days specified as an argument to deleteOldProfiles(), or 31 days if not specified.
  - One file for every month before that. Specifically: The first available file of every month prior to this.
  Setting the second argument to true will delete maps instead of profiles. (e.g. deleteOldProfiles(10, true))
  --]]

  -- Ensure correct value is passed for second argument
  assert(type(delete_folder) == "string", "Wrong type for delete_folder; expected string, got " .. type(delete_folder))
  assert(table.contains({"profiles", "maps", "modules"}, delete_folder), "delete_folder must be profiles, maps or modules")

  local keepdays = tonumber(keepdays_arg) or 31
  local profile_table = {}
  local used_last_mod_months = {}
  local slash = (string.char(getMudletHomeDir():byte()) == "/") and "/" or "\\"
  local delnum = 0

  local to_folder = {
    profiles = "current",
    maps = "map",
  }

  local dirpath = delete_folder == "modules"
    and getMudletHomeDir()..slash..".."..slash..".."..slash.."moduleBackups"
    or getMudletHomeDir()..slash..to_folder[delete_folder]

  -- Traverse the profiles folder and create a table of files:
  for filename in lfs.dir(dirpath) do
    if filename~="." and filename~=".." then
      profile_table[#profile_table+1] = {
        name = filename,
        last_mod = lfs.attributes(dirpath..slash..filename, "modification")
      }
    end
  end

  -- Sort the table according to last modification date from old to new:
  table.sort(profile_table, function (a,b) return a.last_mod &lt; b.last_mod end)

  echo(string.format(
    "\nDeleting old %s. Files newer than %d days and one for every month before that will be kept.",
    delete_folder,
    keepdays
  ))

  for i, v in ipairs(profile_table) do
    local days = math.floor(os.difftime(os.time(), v.last_mod) / 86400)
    local last_mod_month = os.date("%Y/%m", v.last_mod)
    if days &gt; keepdays then
      -- For profiles older than X days, check if we already kept a table for this month:
      if not table.contains(used_last_mod_months, last_mod_month) then
        -- If not, do nothing and mark this month as "kept".
        used_last_mod_months[#used_last_mod_months+1] = last_mod_month
      else
        -- Otherwise remove the file:
        local success, errorstring = os.remove(dirpath..slash..v.name)
        if success then
          delnum = delnum + 1
        else
          cecho("\n&lt;red&gt;ERROR: "..errorstring)
        end
      end
    end
  end

  echo(string.format("\nDeletion complete. %d/%d files were removed successfully.", delnum, #profile_table))
end
</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
		<Script isActive="no" isFolder="no">
			<name>t2tAddons</name>
			<packageName></packageName>
			<script>t2tAddons = t2tAddons or {}
local profilePath = getMudletHomeDir()
profilePath = profilePath:gsub("\\", "/")
local alignmentTable = t2tvars.alignmentTable
local stubmap = t2tvars.stubmap
local exitmap = t2tvars.exitmap
local coordmap = t2tvars.coordmap</script>
			<eventHandlerList />
		</Script>
		<ScriptGroup isActive="yes" isFolder="yes">
			<name>generic_mapper</name>
			<packageName>generic_mapper</packageName>
			<script></script>
			<eventHandlerList />
			<Script isActive="yes" isFolder="no">
				<name>Map Script</name>
				<packageName></packageName>
				<script>-- Jor'Mox's Generic Map Script
-- the script self-updates, changing this value will bring an update to all installations
-- make sure versions.lua has the latest version in it
local version = "2.1.3"

    -- look into options for non-standard door usage for speedwalk
    -- come up with aliases to set translations and custom exits, add appropriate help info

mudlet = mudlet or {}
mudlet.mapper_script = true
map = map or {}

map.help = {[[
    &lt;cyan&gt;Generic Map Script&lt;reset&gt;

    This script allows for semi-automatic mapping using the included triggers.
    While different games can have dramatically different ways of displaying
    information, some effort has been put into giving the script a wide range of
    potential patterns to look for, so that it can work with minimal effort in
    many cases. The script locates the room name by searching up from the
    detected exits line until a prompt is found or it runs out of text to
    search, clearing saved text each time a prompt is detected or a movement
    command is sent, with the room name being set to the last line of text
    found. An accurate prompt pattern is necessary for this to work well, and
    sometimes other text can end up being shown between the prompt and the room
    name, or on the same line as the room name, which can be handled by
    providing appropriate patterns telling the script to ignore that text. Below
    is an overview of the included commands and important events that this
    script uses to work. Additional information on each command or event is
    available in individual help files.

    &lt;cyan&gt;Fundamental Commands:&lt;reset&gt;
        These are commands used to get the mapper functional on a basic level.

        &lt;link: show&gt;map show&lt;/link&gt; - Displays or hides a map window.
        &lt;link: quick start&gt;map basics&lt;/link&gt; - Shows a quick-start guide with some basic information to
            help get the script working.
        &lt;link: 1&gt;map help [command name]&lt;/link&gt; - Shows either this help file or the help file for the
            command given.
        &lt;link: find prompt&gt;find prompt&lt;/link&gt; - Instructs the script to look for a prompt that matches
            a known pattern.
        &lt;link: prompt&gt;map prompt &lt;pattern&gt;&lt;/link&gt; - Provides a specific pattern to the script that
            matches your prompt, uses &lt;urllink: https://www.lua.org/pil/20.2.html&gt;Lua string-library patterns&lt;/urllink&gt;.
        &lt;link: ignore&gt;map ignore &lt;pattern&gt;&lt;/link&gt; - Provides a specific pattern for the script to
            ignore, uses &lt;urllink: https://www.lua.org/pil/20.2.html&gt;Lua string-library patterns&lt;/urllink&gt;.
        &lt;link: movemethod&gt;map movemethod &lt;word&gt;&lt;/link&gt; - Adds a movement method for the script to
            look for when mapping.
        &lt;link: debug&gt;map debug&lt;/link&gt; - Toggles on debug mode, in which extra messages are shown with
            the intent of assisting in troubleshooting getting the script setup.
        &lt;link: me&gt;map me&lt;/link&gt; - Locates the user on the map, if possible.
        &lt;link: path&gt;map path &lt;room name&gt; [; area name]&lt;/link&gt; - Finds a walking path to the named
            room, in the named area if specified.
        &lt;link: character&gt;map character &lt;name&gt;&lt;/link&gt; - Sets a given name as the current character for
            the purposes of the script, used for different prompt patterns and
            recall locations.
        &lt;link: recall&gt;map recall&lt;/link&gt; - Sets the current room as the recall location of the
            current character
        &lt;link: config&gt;map config &lt;configuration&gt; [value]&lt;/link&gt; - Sets or toggles the given
            configuration either turning it on or off, if no value is given, or sets it to the given
            value.
        &lt;link: window&gt;map window &lt;configuration&gt; [value]&lt;/link&gt; - Sets the given configuration for the
            map window to the given value.
        &lt;link: translate&gt;map translate &lt;english direction&gt; &lt;translated long direction&gt;&lt;/link&gt;
        &lt;link: translate&gt;&lt;translated short direction&gt;&lt;/link&gt; - Sets the provided translations for the
            given english direction word.

    &lt;cyan&gt;Map Information Commands:&lt;reset&gt;
        These commands show detailed information about your current map.

        &lt;link: areas&gt;map areas&lt;/link&gt; - Shows a list of all areas, with links to show a list of
            rooms in the area.
        &lt;link: rooms&gt;map rooms &lt;area name&gt;&lt;/link&gt; - Shows a list of rooms in the named area.
        &lt;link: room_find&gt;room find|rf &lt;room name&gt;&lt;/link&gt; - Searches for a room of a given name.
        &lt;link: room_look&gt;room look|rl [roomID]&lt;/link&gt; - Displays detailed information about a room.
        &lt;link: showpath&gt;showpath &lt;roomID&gt;&lt;/link&gt; - Shows you a path from your current location to the
            roomID.
        &lt;link: showpath&gt;showpath &lt;fromID&gt; &lt;toID&gt;&lt;/link&gt; - Shows you a path from a given location to
            another location.
        &lt;link: spe_list&gt;spe list [filter]&lt;/link&gt; - Display a list of all known special exits.
        &lt;link: feature_list&gt;feature list&lt;/link&gt; - Lists all map features created via feature create and
            the associated room characters.

    &lt;cyan&gt;Map Creation Commands:&lt;reset&gt;
        These are commands used in the process of actually creating a map.

        &lt;link: start mapping&gt;start mapping [area name]&lt;/link&gt; - Starts adding content to the map, using
            either the area of the room the user is currently in or the area
            name provided.
        &lt;link: stop mapping&gt;stop mapping&lt;/link&gt; - Stops adding content to the map.
        &lt;link: area_add&gt;area add &lt;area name&gt;&lt;/link&gt; - Creates a new area.
        &lt;link: area_delete&gt;area delete &lt;area name&gt;&lt;/link&gt; - Deletes a given area and all rooms within.
        &lt;link: area_cancel&gt;cancel area deletion&lt;/link&gt; - Pauses deletion of an area.  This will NOT
            restore delete rooms.
        &lt;link: area_rename&gt;area rename &lt;new area name&gt;&lt;/link&gt; - Renames the current area you're in.
        &lt;link: set area&gt;set area &lt;area name&gt;&lt;/link&gt; - Moves the current room to the named area.
        &lt;link: mode&gt;map mode &lt;lazy, simple, normal or complex&gt;&lt;/link&gt; - Sets the mapping mode, which
            defines how new rooms are added to the map.
        &lt;link: add door&gt;add door &lt;direction&gt; [door status] [one way]&lt;/link&gt; - Creates a door in
            the given direction, with the given status(default closed), in both
            directions, unless a one-direction door is specified.
        &lt;link: add portal&gt;add portal [-f] &lt;entry command&gt;&lt;/link&gt; - Creates a portal in the current room,
            using the given command for entry.
        &lt;link: shift&gt;shift &lt;direction&gt;&lt;/link&gt; - Moves the current room on the map in the given direction.
        &lt;link: merge rooms&gt;merge rooms&lt;/link&gt; - Combines overlapping rooms that have the same name into
            a single room.
        &lt;link: clear moves&gt;clear moves&lt;/link&gt; - Clears the list of movement commands maintained by the
            script.
        &lt;link: set exit&gt;set exit &lt;direction&gt; &lt;roomID&gt;&lt;/link&gt; - Creates a one-way exit in the given
            direction to the room with the specified roomID, can also be used with portals.
        &lt;link: arealock&gt;arealock [area name]&lt;/link&gt; - Displays a list of areas you can lock/unlock.
        &lt;link: room_coords&gt;room coords|rc [v&lt;roomID&gt;] &lt;x&gt; &lt;y&gt; &lt;z&gt;&lt;/link&gt; - Move a room to new map coordinates.
        &lt;link: room_delete&gt;room delete|rld &lt;direction|roomID&gt;&lt;/link&gt; - Delete a room given a direction or roomID.
        &lt;link: room_weight&gt;rw [direction|roomID] &lt;weight&gt;&lt;/link&gt; - Set a room weight given a direction or roomID.
        &lt;link: room_weight_exit&gt;rwe [roomID] &lt;weight&gt; &lt;exit&gt;&lt;/link&gt; - Set the weight of a given exit in
            the current room, or optional roomID.
        &lt;link: room_link&gt;room link|rlk &lt;direction&gt; [one]&lt;/link&gt; - Create a link to a room given a direction.
            Optional 'one' to create a one-way link.
        &lt;link: room_unlink&gt;room unlink|urlk &lt;direction&gt;&lt;/link&gt; - Delete a link in the specified direction.
        &lt;link: room_door&gt;rd [roomID] &lt;direction&gt; &lt;open|closed|locked|clear&gt;&lt;/link&gt; - Create or delete a door
            from the current room, or optional location.
        &lt;link: room_character&gt;rcc &lt;character&gt; [roomID]&lt;/link&gt; - Assign a single character, letter or
            number to the current room, or optional location.
        &lt;link: exit_special&gt;exit special|spe &lt;direction|roomID&gt; &lt;command&gt;&lt;/link&gt; - Add a special exit
            to a room.
        &lt;link: spev&gt;spev &lt;fromID&gt; &lt;toID&gt; &lt;command&gt;&lt;/link&gt; - Add a special exit to two remote rooms.
        &lt;link: spe_clear&gt;exit special clear|spe clear &lt;direction|roomID&gt;&lt;/link&gt; - Delete a special exit.
        &lt;link: room_area&gt;room area [v&lt;roomID&gt;] &lt;area name&gt;&lt;/link&gt; - Moves a room to the given area.
        &lt;link: room_label&gt;room label [roomID] [fgColor] [bgColor] &lt;message&gt;&lt;/link&gt; - Adds a label to a room.
        &lt;link: area_labels&gt;area labels &lt;area name&gt;&lt;/link&gt; - Display all labels in a given area with an
            option to delete.
        &lt;link: feature_create&gt;feature create &lt;feature&gt; [char &lt;room character&gt;]&lt;/link&gt; - Create a new
            global map feature.
        &lt;link: room_feature_create&gt;room create feature|rcf [v&lt;room id&gt;] &lt;feature&gt;&lt;/link&gt; - Adds a map
            feature to the current room, or optional location.
        &lt;link: room_feature_delete&gt;room delete feature|rdf [v&lt;room id&gt;] &lt;feature&gt;&lt;/link&gt; - Removes a
            map feature from the current room or optional location.
        &lt;link: feature_delete&gt;feature delete &lt;feature&gt;&lt;/link&gt; - Deletes a global map feature and
            removes it from all rooms.

    &lt;cyan&gt;Sharing and Backup Commands:&lt;reset&gt;

        &lt;link: save&gt;map save&lt;/link&gt; - Creates a backup of the map.
        &lt;link: load&gt;map load &lt;remote address&gt;&lt;/link&gt; - Loads a map backup, or a map file from a
            remote address.
        &lt;link: export&gt;map export &lt;area name&gt;&lt;/link&gt; - Creates a file from the named area that can
            be shared.
        &lt;link: import&gt;map import &lt;area name&gt;&lt;/link&gt; - Loads an area from a file.

    &lt;cyan&gt;Mapping Events:&lt;reset&gt;
        These events are used by triggers to direct the script's behavior.

        &lt;link: onNewRoom&gt;onNewRoom&lt;/link&gt; - Signals that a room has been detected, optional exits
            argument.
        &lt;link: onMoveFail&gt;onMoveFail&lt;/link&gt; - Signals that an attempted move failed.
        &lt;link: onForcedMove&gt;onForcedMove&lt;/link&gt; - Signals that the character moved without a command
            being entered, required direction argument.
        &lt;link: onRandomMove&gt;onRandomMove&lt;/link&gt; - Signals that the character moved in an unknown
            direction without a command being entered.
        &lt;link: onVisionFail&gt;onVisionFail&lt;/link&gt; - Signals that the character moved but some or all of
            the room information was not able to be gathered.

    &lt;cyan&gt;Key Variables:&lt;reset&gt;
        These variables are used by the script to keep track of important
            information.

        &lt;yellow&gt;map.prompt.room&lt;reset&gt; - Can be set to specify the room name.
        &lt;yellow&gt;map.prompt.exits&lt;reset&gt; - Can be set to specify the room exits.
        &lt;yellow&gt;map.prompt.hash&lt;reset&gt; - Can be set to specify the room hash.
            Notice: if you set this, mapper will only find room by
            getRoomIDbyHash(hash)
        &lt;yellow&gt;map.character&lt;reset&gt; - Contains the current character name.
        &lt;yellow&gt;map.save.recall&lt;reset&gt; - Contains a table of recall roomIDs for all
            characters.
        &lt;yellow&gt;map.save.prompt_pattern&lt;reset&gt; - Contains a table of prompt patterns for all
            characters.
        &lt;yellow&gt;map.save.ignore_patterns&lt;reset&gt; - Contains a table of patterns of text the
            script ignores.
        &lt;yellow&gt;map.configs&lt;reset&gt; - Contains a number of different options that can be set
            to modify script behavior.
        &lt;yellow&gt;map.currentRoom&lt;reset&gt; - Contains the roomID of the room your character is
            in, according to the script.
        &lt;yellow&gt;map.currentName&lt;reset&gt; - Contains the name of the room your character is in,
            according to the script.
        &lt;yellow&gt;map.currentExits&lt;reset&gt; - Contains a table of the exits of the room your
            character is in, according to the script.
        &lt;yellow&gt;map.currentArea&lt;reset&gt; - Contains the areaID of the area your character is
            in, according to the script.
]]}
map.help.save = [[
    &lt;cyan&gt;Map Save&lt;reset&gt;
        syntax: &lt;yellow&gt;map save&lt;reset&gt;

        This command creates a copy of the current map and stores it in the
        profile folder as map.dat. This can be useful for creating a backup
        before adding new content, in case of problems, and as a way to share an
        entire map at once.
]]
map.help.load = [[
    &lt;cyan&gt;Map Load&lt;reset&gt;
        syntax: &lt;yellow&gt;map load &lt;optional download address&gt;&lt;reset&gt;

        This command replaces the current map with the map stored as map.dat in
        the profile folder. Alternatively, if a download address is provided, a
        map is downloaded from that location and loaded to replace the current
        map. If no filename is given with the download address, the script tries
        to download map.dat. If a filename is given it MUST end with .dat.
]]
map.help.show = [[
    &lt;cyan&gt;Map Show&lt;reset&gt;
        syntax: &lt;yellow&gt;map show&lt;reset&gt;

        This command shows a map window, as specified by the window configs set
        via the &lt;link: window&gt;map window command&lt;/link&gt;. It isn't necessary to use this method to
        show a map window to use this script, any map window will work.
]]
map.help.export = [[
    &lt;cyan&gt;Map Export&lt;reset&gt;
        syntax: &lt;yellow&gt;map export &lt;area name&gt;&lt;reset&gt;

        This command creates a file containing all the informatino about the
        named area and stores it in the profile folder, with a file name based
        on the area name. This file can then be imported, allowing for easy
        sharing of single map areas. The file name will be the name of the area
        in all lower case, with spaces replaced with underscores, and a .dat
        file extension.
]]
map.help.import = [[
    &lt;cyan&gt;Map Import&lt;reset&gt;
        syntax: &lt;yellow&gt;map import &lt;area name&gt;&lt;reset&gt;

        This command imports a file from the profile folder with a name matching
        the name of the file, and uses it to create an area on the map. The area
        name used can be capitalized or not, and may have either spaces or
        underscores between words. The actual area name is stored within the
        file, and is not set by the area name used in this command.
]]
map.help.start_mapping = [[
    &lt;cyan&gt;Start Mapping&lt;reset&gt;
        syntax: &lt;yellow&gt;start mapping [area name]&lt;reset&gt;

        This command instructs the script to add new content to the map when it
        is seen. When first used, an area name is mandatory, so that an area is
        created for new rooms to be placed in. If used with an area name while
        the map shows the character within a room on the map, that room will be
        moved to be in the named area, if it is not already in it. If used
        without an area name, the room is not moved, and mapping begins in the
        area the character is currently located in.
]]
map.help.stop_mapping = [[
    &lt;cyan&gt;Stop Mapping&lt;reset&gt;
        syntax: &lt;yellow&gt;stop mapping&lt;reset&gt;

        This command instructs the script to stop adding new content until
        mapping is resumed at a later time. The map will continue to perform
        other functions.
]]
map.help.find_prompt = [[
    &lt;cyan&gt;Find Prompt&lt;reset&gt;
        syntax: &lt;yellow&gt;find prompt&lt;reset&gt;

        This command instructs the script to begin searching newly arriving text
        for something that matches one of its known prompt patterns. If one is
        found, that pattern will be set as the current prompt pattern. This
        should typically be the first command used to set up this script with a
        new profile. If your prompt appears after using this command, but there
        is no message saying that the prompt has been found, it will be
        necessary to use the map prompt command to manually set a pattern.
]]
map.help.prompt = [[
    &lt;cyan&gt;Map Prompt&lt;reset&gt;
        syntax: &lt;yellow&gt;map prompt &lt;prompt pattern&gt;&lt;reset&gt;

        This command manually sets a prompt pattern for the script to use.
        Because of the way this script works, the prompt pattern should match
        the entire prompt, so that if the text matching the pattern were
        removed, the line with the prompt would be blank. The patterns must be
        of the type used by the Lua string library. If you are unsure about what
        pattern to use, seek assistance on the Mudlet Forums or the Mudlet
        Discord channel.
]]
map.help.debug = [[
    &lt;cyan&gt;Map Debug&lt;reset&gt;
        syntax: &lt;yellow&gt;map debug&lt;reset&gt;

        This command toggles the map script's debug mode on or off when it is
        used. Debug mode provides some extra messages to help with setting up
        the script and identifying problems to help with troubleshooting. If you
        are getting assistance with setting up this script, using debug mode may
        make the process faster and easier.
]]
map.help.ignore = [[
    &lt;cyan&gt;Map Ignore&lt;reset&gt;
        syntax: &lt;yellow&gt;map ignore &lt;ignore pattern&gt;&lt;reset&gt;

        This command adds the given pattern to a list the script maintains to
        help it locate the room name. Any text that might appear after a command
        is sent to move and before the room name appears, or after the prompt
        and before the room name if several movement commands are sent at once,
        should have an ignore pattern added for it.

        If the given pattern is already in the list of ignore patterns, that
        pattern will be removed from the list.

        Example: &lt;yellow&gt;map ignore ^You are hungry%.$&lt;reset&gt; - match exactly one line
                 &lt;yellow&gt;map ignore ^The clock strikes %d+%.$&lt;reset&gt; - match a number
                 &lt;yellow&gt;map ignore ^You walk %a+%.$&lt;reset&gt; - match a word, e.g. east
]]
map.help.movemethod = [[
    &lt;cyan&gt;Move Method&lt;reset&gt;
        syntax: &lt;yellow&gt;map movemethod &lt;movement word&gt;&lt;reset&gt;

        This command will add a movement method for the script to look for
        when moving between rooms. If your game has methods such as "walk north",
        "swim south" or similar, add "walk" or "swim" as necessary. For single
        room movement only.

        If the given method is already in the list of movement methods, that
        method will be removed from the list.
]]
map.help.areas = [[
    &lt;cyan&gt;Map Areas&lt;reset&gt;
        syntax: &lt;yellow&gt;map areas&lt;reset&gt;

        This command displays a linked list of all areas in the map. When
        clicked, the rooms in the selected area will be displayed, as if the
        'map rooms' command had been used with that area as an argument.
]]
map.help.rooms = [[
    &lt;cyan&gt;Map Rooms&lt;reset&gt;
        syntax: &lt;yellow&gt;map rooms &lt;area name&gt;&lt;reset&gt;

        This command shows a list of all rooms in the area, with the roomID and
        the room name, as well as a count of how many rooms are in the area
        total. Note that the area name argument is not case sensitive.
]]
map.help.set_area = [[
    &lt;cyan&gt;Set Area&lt;reset&gt;
        syntax: &lt;yellow&gt;set area &lt;area name&gt;&lt;reset&gt;

        This command move the current room into the named area, creating the
        area if needed.
]]
map.help.mode = [[
    &lt;cyan&gt;Map Mode&lt;reset&gt;
        syntax: &lt;yellow&gt;map mode &lt;lazy, simple, normal, or complex&gt;&lt;reset&gt;

        This command changes the current mapping mode, which determines what
        happens when new rooms are added to the map.

        In lazy mode, connecting exits aren't checked and a room is only added if
        there isn't an adjacent room with the same name.

        In simple mode, if an adjacent room has an exit stub pointing toward the
        newly created room, and the new room has an exit in that direction,
        those stubs are connected in both directions.

        In normal mode (default), the newly created room is connected to the room you left
        from, so long as it has an exit leading in that direction.

        In complex mode, none of the exits of the newly connected room are
        connected automatically when it is created.
]]
map.help.add_door = [[
    &lt;cyan&gt;Add Door&lt;reset&gt;
        syntax: &lt;yellow&gt;add door &lt;direction&gt; [none|open|closed|locked] [yes|no]&lt;reset&gt;

        This command places a door on the exit in the given direction, or
        removes it if "none" is given as the second argument. The door status is
        set as given by the second argument, default "closed". The third
        argument determines if the door is a one-way door, default "no".
]]
map.help.add_portal = [[
    &lt;cyan&gt;Add Portal&lt;reset&gt;
        syntax: &lt;yellow&gt;add portal [-f] &lt;entry command&gt;&lt;reset&gt;

        This command creates a special exit in the current room that is entered
        by using the given entry command. The given entry command is then sent,
        moving to the destination room. If the destination room matches an
        existing room, the special exit will link to that room, and if not a new
        room will be created. If the optional "-f" argument is given, a new room
        will be created for the destination regardless of if an existing room
        matches the room seen when arriving at the destination.
]]
map.help.shift = [[
    &lt;cyan&gt;Shift&lt;reset&gt;
        syntax: &lt;yellow&gt;shift &lt;direction&gt;&lt;reset&gt;

        This command moves the current room one step in the direction given, on
        the map.
]]
map.help.merge_rooms = [[
    &lt;cyan&gt;Merge Rooms&lt;reset&gt;
        syntax: &lt;yellow&gt;merge rooms&lt;reset&gt;

        This command combines all rooms that share the same coordinates and the
        same room name into a single room, with all of the exits preserved and
        combined.
]]
map.help.clear_moves = [[
    &lt;cyan&gt;Clear Moves&lt;reset&gt;
        syntax: &lt;yellow&gt;clear moves&lt;reset&gt;

        This command clears the script's queue of movement commands, and is
        intended to be used after you attempt to move while mapping but the
        movement is prevented in some way that is not caught and handled by a
        trigger that raises the onMoveFail event.
]]
map.help.set_exit = [[
    &lt;cyan&gt;Set Exit&lt;reset&gt;
        syntax: &lt;yellow&gt;set exit &lt;direction&gt; &lt;destination roomID&gt;&lt;reset&gt;

        This command sets the exit in the current room in the given direction to
        connect to the target room, as specified by the roomID. This is a
        one-way connection.
]]
map.help.onnewroom = [[
    &lt;cyan&gt;onNewRoom Event&lt;reset&gt;

        This event is raised to inform the script that a room has been detected.
        When raised, a string containing the exits from the detected room should
        be passed as a second argument to the raiseEvent function, unless those
        exits have previously been stored in map.prompt.exits.
]]
map.help.onmovefail = [[
    &lt;cyan&gt;onMoveFail Event&lt;reset&gt;

        This event is raised to inform the script that a move was attempted but
        the character was unable to move in the given direction, causing that
        movement command to be removed from the script's movement queue.
]]
map.help.onforcedmove = [[
    &lt;cyan&gt;onForcedMove Event&lt;reset&gt;

        This event is raised to inform the script that the character moved in a
        specified direction without a command being entered. When raised, a
        string containing the movement direction must be passed as a second
        argument to the raiseEvent function.

        The most common reason for this event to be raised is when a character
        is following someone else.
]]
map.help.onrandommove = [[
    &lt;cyan&gt;onRandomMove Event&lt;reset&gt;

        This event is raised to inform the script that the character has moved
        in an unknown direction. The script will compare the next room seen with
        rooms that are adjacent to the current room to try to determine the best
        match for where the character has gone.

        In some situations, multiple options are equally viable, so mistakes may
        result. The script will automatically keep verifying positioning with
        each step, and automatically correct the shown location on the map when
        possible.
]]
map.help.onvisionfail = [[
    &lt;cyan&gt;onVisionFail Event&lt;reset&gt;

        This event is raised to inform the script that some or all of the room
        information was not able to be gathered, but the character still
        successfully moved between rooms in the intended direction.
]]
map.help.onprompt = [[
    &lt;cyan&gt;onPrompt Event&lt;reset&gt;

        This event can be raised when using a non-conventional setup to trigger
        waiting messages from the script to be displayed. Additionally, if
        map.prompt.exits exists and isn't simply an empty string, raising this
        event will cause the onNewRoom event to be raised as well. This
        functionality is intended to allow people who have used the older
        version of this script to use this script instead, without having to
        modify the triggers they created for it.
]]
map.help.me = [[
    &lt;cyan&gt;Map Me&lt;reset&gt;
        syntax: &lt;yellow&gt;map me&lt;reset&gt;

        This command forces the script to look at the currently captured room
        name and exits, and search for a potentially matching room, moving the
        map if applicable. Note that this command is generally never needed, as
        the script performs a similar search any time the room name and exits
        don't match expectations.
]]
map.help.path = [[
    &lt;cyan&gt;Map Path&lt;reset&gt;
        syntax: &lt;yellow&gt;map path &lt;room name&gt; [; area name]&lt;reset&gt;

        This command tries to find a walking path from the current room to the
        named room. If an area name is given, only rooms within that area that
        is given are checked. Neither the room name nor the area name are case
        sensitive, but otherwise an exact match is required. Note that a
        semicolon is required between the room name and area name, if an area
        name is given, but spaces before or after the semicolon are optional.

        Example: &lt;yellow&gt;map path main street ; newbie town&lt;reset&gt;
]]
map.help.character = [[
    &lt;cyan&gt;Map Character&lt;reset&gt;
        syntax: &lt;yellow&gt;map character &lt;name&gt;&lt;reset&gt;

        This command tells the script what character is currently being used.
        Setting a character is optional, but recall locations and prompt
        patterns are stored by character name, so using this command allows for
        easy switching between different setups. The name given is stored in
        map.character. The name is a case sensitive exact match. The value of
        map.character is not saved between sessions, so this must be set again
        if needed each time the profile is opened.
]]
map.help.recall = [[
    &lt;cyan&gt;Map Recall&lt;reset&gt;
        syntax: &lt;yellow&gt;map recall&lt;reset&gt;

        This command tells the script that the current room is the recall point
        for the current character, as stored in map.character. This information
        is stored in map.save.recall[map.character], and is remembered between
        sessions.
]]
map.help.config = [[
    &lt;cyan&gt;Map Config&lt;reset&gt;
        syntax: &lt;yellow&gt;map config &lt;setting&gt; &lt;optional value&gt;&lt;reset&gt;

        This command changes any of the available configurations listed below.
        If no value is given, and the setting is either 'on' or 'off', then the
        value is switched. When naming a setting, spaces can be used in place of
        underscores. Details of what options are available and what each one
        does are provided.

        &lt;yellow&gt;speedwalk_delay&lt;reset&gt; - When using the speedwalk function of the script,
            this is the amount of time the script waits after either sending
            a command or, if speedwalk_wait is set, after arriving in a new
            room, before the next command is sent. This may be any number 0
            or higher.

        &lt;yellow&gt;speedwalk_wait&lt;reset&gt; - When using the speedwalk function of the script,
            this indicates if the script waits for your character to move
            into a new room before sending the next command. This may be true
            or false.

        &lt;yellow&gt;speedwalk_random&lt;reset&gt; - When using the speedwalk function of the script
            with a speedwalk_delay value, introduces a randomness to the wait
            time by adding some amount up to the speedwalk_delay value. This
            may be true or false.

        &lt;yellow&gt;stretch_map&lt;reset&gt; - When adding a new room that would overlap an existing
            room, if this is set the map will stretch out to prevent the
            overlap, with all rooms further in the direction moved getting
            pushed one further in that direction. This may be true or false.

        &lt;yellow&gt;max_search_distance&lt;reset&gt; - When mapping, this is the maximum number of
            rooms that the script will search in the movement direction for a
            matching room before deciding to create a new room. This may be
            false, or any positive whole number. This can also be set to 0,
            which is the same as setting it to false.

        &lt;yellow&gt;search_on_look&lt;reset&gt; - When this is set, using the "look" command causes
            the map to verify your position using the room name and exits
            seen following using the command. This may be true or false.

        &lt;yellow&gt;clear_lines_on_send&lt;reset&gt; - When this is set, any time a command is sent,
            any lines stored from the game used to search for the room name
            are cleared. This may be true or false.

        &lt;yellow&gt;mode&lt;reset&gt; - This is the default mapping mode on startup, and defines how
            new rooms are added to the map. May be "lazy", "simple",
            "normal" or "complex".

        &lt;yellow&gt;download_path&lt;reset&gt; - This is the path that updates are downloaded from.
            This may be any web address where the versions.lua and
            generic_mapper.xml files can be downloaded from.

        &lt;yellow&gt;prompt_test_patterns&lt;reset&gt; - This is a table of default patterns checked
            when using the "find prompt" command. The patterns in this table
            should start with a '^', and be written to be used with the Lua
            string library. Most importantly, '%' is used as the escape
            character instead of '\' as in trigger regex patterns.

        &lt;yellow&gt;custom_exits&lt;reset&gt; - This is a table of custom exit directions and their
            relevant extra pieces of info. Each entry should have the short
            direction as the keyword for a table containing first the long
            direction, then the long direction of the reverse of this
            direction, and then the x, y, and z change in map position
            corresponding to the movement. As an example: us = {'upsouth',
            'downnorth', 0, -1, 1}

        &lt;yellow&gt;custom_name_search&lt;reset&gt; - When this is set, instead of running the default
            function name_search, a user-defined function called
            'mudlet.custom_name_search' is used instead. This may be true or false.

        &lt;yellow&gt;use_translation&lt;reset&gt; - When this is set, the lang_dirs table is used to
            translate movement and status commands in some other language
            into the English used by the script. This may be true or false.

        &lt;yellow&gt;debug&lt;reset&gt; - When this is set, the script will start in debug mode. This
            may be true or false.
]]
map.help.window = [[
    &lt;yellow&gt;Map Window&lt;reset&gt;
        syntax: &lt;yellow&gt;map window &lt;setting&gt; &lt;value&gt;&lt;reset&gt;

        This command changes any of the available configurations listed below,
        which determine the appearance and positioning of the map window when
        the 'map show' command is used. Details of what options are available
        and what each one does are provided.

        &lt;yellow&gt;x&lt;reset&gt; - This is the x position of the map window, and should be a
            positive number of pixels or a percentage of the screen width.

        &lt;yellow&gt;y&lt;reset&gt; - This is the y position of the map window, and should be a
            positive number of pixels or a percentage of the screen height.

        &lt;yellow&gt;w&lt;reset&gt; - This is the width of the map window, and should be a positive
            number of pixels or a percentage of the screen width.

        &lt;yellow&gt;h&lt;reset&gt; - This is the height of the map window, and should be a positive
            number of pixels or a percentage of the screen height.

        &lt;yellow&gt;origin&lt;reset&gt; - This is the corner from which the window position is
            measured, and may be 'topright', 'topleft', 'bottomright', or
            'bottomleft'.

        &lt;yellow&gt;shown&lt;reset&gt; - This determines if the map window is shown immediately upon
            connecting to the game. This may be true or false. If you intend
            to have some other script control the map window, this should be
            set to false.
]]
map.help.translate = [[
    &lt;yellow&gt;Map Translate&lt;reset&gt;
        syntax: &lt;yellow&gt;map translate &lt;english direction&gt; &lt;translated long direction&gt;
            &lt;translated short direction&gt;&lt;reset&gt;

        This command sets direction translations for the script to use, either
        for commands entered to move around, or listed exits the game shows when
        you enter a room. Available directions: north, south, east, west,
        northwest, northeast, southwest, southeast, up, down, in, and out.
        Also you can customize special commands sent to mud like 'look'.
]]
map.help.quick_start = [[
    &lt;link: quick_start&gt;map basics&lt;/link&gt; (quick start guide)
    ----------------------------------------

    Mudlet Mapper works in tandem with a script, and this generic mapper script needs
    to know 2 things to work:
      - &lt;dim_grey&gt;room name&lt;reset&gt; $ROOM_NAME_STATUS ($ROOM_NAME)
      - &lt;dim_grey&gt;exits&lt;reset&gt;     $ROOM_EXITS_STATUS ($ROOM_EXITS)

    1. &lt;link: start mapping&gt;start mapping &lt;optional area name&gt;&lt;/link&gt;
       If both room name and exits are good, you can start mapping! Give it the
       area name you're currently in, usually optional but required for the first one.
    2. &lt;link: find prompt&gt;find prompt&lt;/link&gt;
       Room name or exits aren't recognised? Try this command then. It will make
       the script start looking for a prompt using several standard prompt
       patterns. If a prompt is found, you will be notified, if not, you will
       need to set a prompt pattern yourself using &lt;link: prompt&gt;map prompt&lt;/link&gt;.
       Reach out to the &lt;urllink: https://discord.gg/kuYvMQ9&gt;Mudlet community&lt;/urllink&gt; for help, we'd be happy to help
       you figure it out!
    3. &lt;link: debug&gt;map debug&lt;/link&gt;
       This toggles debug mode. When on, messages will be displayed showing what
       information is captured and a few additional error messages that can help
       with getting the script fully compatible with your game.
    4. &lt;link: 1&gt;map help&lt;/link&gt;
       This will bring up a more detailed help file, starting with the available
       help topics.
]]
map.help.room_find = [[
    &lt;cyan&gt;Room Find&lt;reset&gt;
        syntax: &lt;yellow&gt;room find &lt;room name&gt;&lt;reset&gt;
                &lt;yellow&gt;rf &lt;room name&gt;&lt;reset&gt;

        This command will search all rooms and return a list of matches.
]]
map.help.room_look = [[
    &lt;cyan&gt;Room Look&lt;reset&gt;
        syntax: &lt;yellow&gt;room look [roomID]&lt;reset&gt;
                &lt;yellow&gt;rl [roomID]&lt;reset&gt;

        This command will display detailed information about the current room.
        Optionally a roomID can be provided.
]]
map.help.showpath = [[
    &lt;cyan&gt;Showpath&lt;reset&gt;
        syntax: &lt;yellow&gt;showpath &lt;roomID&gt;&lt;reset&gt;
                &lt;yellow&gt;showpath &lt;fromID&gt; &lt;toID&gt;&lt;reset&gt;

        This command displays a path from your current room to the roomID specified.
        If two roomID's are specifed it will display a path from a remote room to another room.
]]
map.help.spe_list = [[
    &lt;cyan&gt;Special Exits List&lt;reset&gt;
        syntax: &lt;yellow&gt;spe list [filter]&lt;reset&gt;

        This command displays a list of all known special exits.  You can alternatively provide an
        optional filter to return a list containing those words.

        Example: &lt;yellow&gt;spe list worm warp&lt;reset&gt;
]]
map.help.feature_list = [[
    &lt;cyan&gt;Feature List&lt;reset&gt;
        syntax: &lt;yellow&gt;feature list&lt;reset&gt;

        This command displays a list of all map features created via feature create and the associated room characters.
]]
map.help.area_add = [[
    &lt;cyan&gt;Area Add&lt;reset&gt;
        syntax: &lt;yellow&gt;area add &lt;area name&gt;&lt;reset&gt;

        This command will create a new area and automatically give it an ID.

        Example: &lt;yellow&gt;area add My City&lt;reset&gt; - create a new area called My City
]]
map.help.area_delete = [[
    &lt;cyan&gt;Area Delete&lt;reset&gt;
        syntax: &lt;yellow&gt;area delete &lt;area name&gt;&lt;reset&gt;

        This command will delete the given area. If the area is really big
        (thousands of rooms), deleting it at once would take a really long
        while and freeze your Mudlet while doing so. To combat the unpleasant
        experience, the script breaks up area deletion into batches of rooms
        (100 by default). While this still heavily impacts Mudlets performance,
        it allows you to see a progress meter of how far it has gotten and gives
        you an ability to pause it at any time by doing 'cancel area deletion'.

        Example: &lt;yellow&gt;area delete My City&lt;reset&gt; - delete an area called My City
]]
map.help.area_cancel = [[
    &lt;cyan&gt;Cancel Area Deletion&lt;reset&gt;
        syntax: &lt;yellow&gt;cancel area deletion&lt;reset&gt;

        This comand will stop an area deletion that has started. This will NOT
        restore deleted rooms - it merely pauses the process, so you can resume
        it with 'area delete' later on. You can type this in while Mudlet is
        deleting an area - it'll take a short while for letters to show up, but
        they will eventually.
]]
map.help.area_rename = [[
    &lt;cyan&gt;Area Rename&lt;reset&gt;
        syntax: &lt;yellow&gt;area rename &lt;name&gt;&lt;reset&gt;

        This command will rename the current area you're in to the new name.

        Example: &lt;yellow&gt;area rename My City&lt;reset&gt; - call the area you're in My City from now on

]]
map.help.arealock = [[
    &lt;cyan&gt;Arealock&lt;reset&gt;
        syntax: &lt;yellow&gt;arealock [filter]&lt;reset&gt;

        This command displays a list of areas you can lock/unlock, you can also
        give it an area name to filter by. If an area is locked the mapper will
        not attempt to speedwalk or go through any of the rooms in the area.

        Example: &lt;yellow&gt;arealock City&lt;reset&gt;
]]
map.help.room_coords = [[
    &lt;cyan&gt;Room Coordinates&lt;reset&gt;
        syntax: &lt;yellow&gt;room coords [v&lt;roomID&gt;] &lt;x&gt; &lt;y&gt; &lt;z&gt;&lt;reset&gt;
                &lt;yellow&gt;rc [v&lt;roomID&gt;] &lt;x&gt; &lt;y&gt; &lt;z&gt;&lt;reset&gt;

        This command will move a room to the new map coordinates. x,y and z will
        specify the new location of the room. The room ID is optional, it'll move
        the current room if you don't provide one.

        Example: &lt;yellow&gt;rc nw&lt;reset&gt; - move the room to be nw of the current location
                 &lt;yellow&gt;rc v34 w&lt;reset&gt; - move the room ID 34 west, note the letter 'v' in the command
                 &lt;yellow&gt;rc 1 -5 10&lt;reset&gt; - move the current room to those exact coordinates
                 &lt;yellow&gt;rc v12 8 3 -8&lt;reset&gt; - move the room #12 to 8x, 3y and -8z
                 &lt;yellow&gt;rc 14x 5y&lt;reset&gt; - move the current room to be at 14x and 5y, but the
                    same z-level you're on. You can include all three of x, y, z coordinates
                    or only one as you wish
]]
map.help.room_delete = [[
    &lt;cyan&gt;Room Delete&lt;reset&gt;
        syntax: &lt;yellow&gt;room delete &lt;direction|roomID&gt;&lt;reset&gt;
                &lt;yellow&gt;rld &lt;direction|roomID&gt;&lt;reset&gt;

        This command will delete a room given a relative direction or roomID.

        Example: &lt;yellow&gt;rld&lt;reset&gt; - current room, will delete the room you're currently in
                 &lt;yellow&gt;rld n&lt;reset&gt; - relative direction, will delete the room that's north of you
                 &lt;yellow&gt;rld 513&lt;reset&gt; - using roomID, will delete the room with ID 513
]]
map.help.room_weight = [[
    &lt;cyan&gt;Room Weight&lt;reset&gt;
        syntax: &lt;yellow&gt;room weight [direction|roomID] &lt;weight&gt;&lt;reset&gt;
                &lt;yellow&gt;rw [direction|roomID] &lt;weight&gt;&lt;reset&gt;

        This command updates the weight of a room, making it more or less
        desirable to travel through.  Direction or roomID is optional and
        defaults to the current room.

        Example: &lt;yellow&gt;rw 10&lt;reset&gt; - will set the room weight of the room you're standing in to 10
                 &lt;yellow&gt;rw n 4&lt;reset&gt; - relative direction, will set the room weight of the room that's
                    to the north of you to four
                 &lt;yellow&gt;rw 2343 2&lt;reset&gt; - using roomID, will set the room weight of room 2343 to 2
]]
map.help.room_weight_exit = [[
    &lt;cyan&gt;Room Weight Exit&lt;reset&gt;
        syntax: &lt;yellow&gt;rwe [roomID] &lt;weight&gt; &lt;exit&gt;&lt;reset&gt;

        This command updates the weight of a room exit, where weight is a
        positive number (default for exits is 0). Setting a higher weight will
        make the exit be less likely to be used. The exit can be a cardinal
        direction of either n,e,s,w,ne,se,sw,ne,up,down,in,out or the exact
        special exit text (including the script: part). This alias sets a weight
        one way only, so if you want to set it both ways, use it on the opposite
        side as well. Use 'rl' to check exit weights.

        Example: &lt;yellow&gt;rwe 1 n&lt;reset&gt; -  will set the weight of the exit north to 1
                 &lt;yellow&gt;rwe 2434 0 e&lt;reset&gt; - will reset the exit weight of an east exit that
                    leads out from the 2434 room
]]
map.help.room_link = [[
    &lt;cyan&gt;Room Link&lt;reset&gt;
        syntax: &lt;yellow&gt;room link [roomID] &lt;direction&gt; [one]&lt;reset&gt;
                &lt;yellow&gt;rlk [roomID] &lt;direction&gt; [one]&lt;reset&gt;

        This command will link a room given a direction and optional roomID.
        You can also add 'one' at the end of the command to make it be a one-way
        link.

        Example: &lt;yellow&gt;rlk n&lt;reset&gt; - relative direction, will link if exists
                    a room to the north of this one to your current location
                 &lt;yellow&gt;rlk 351 n&lt;reset&gt; - exact roomID and direction, will
                    link the current room to room #351 via a north exit
                 &lt;yellow&gt;rlk n one&lt;reset&gt; - will make an exit north one-way
]]
map.help.room_unlink = [[
    &lt;cyan&gt;Room Unlink&lt;reset&gt;
        syntax: &lt;yellow&gt;room unlink &lt;direction&gt;&lt;reset&gt;
                &lt;yellow&gt;urlk &lt;direction&gt;&lt;reset&gt;

                Unlink a room given a direction.  This function will unlink
                exits both ways, or one way if there is no incoming exit.

        Example: &lt;yellow&gt;urlk nw&lt;reset&gt; - relative direction, will unlink to the
                    northwest, and from the northwest room to the southeast
]]
map.help.room_door = [[
    &lt;cyan&gt;Room Door&lt;reset&gt;
        syntax: &lt;yellow&gt;rd [roomID] &lt;direction&gt; &lt;open|closed|locked|clear&gt;&lt;reset&gt;

                Will create a door from the current room to a direction
                specified.  Door status can be open or o, closed or c, locked or
                l, clear or gone. To delete a room, use clear or gone. Setting
                doors is one-way - to set two-way doors, use the alias from the
                opposite direction.


        Example: &lt;yellow&gt;rd n&lt;reset&gt; - add a one-way door north from the current room
                 &lt;yellow&gt;rd 23 w closed&lt;reset&gt; - add a closed door leading west in room 23
                 &lt;yellow&gt;rd n clear&lt;reset&gt; - remove the door to the north from the current
                    room on this side only
]]
map.help.room_character = [[
    &lt;cyan&gt;Room Character&lt;reset&gt;
        syntax: &lt;yellow&gt;rcc &lt;character|clear&gt; [roomID]&lt;reset&gt;

        This command will assign a single character, letter or number to the
        current room, or an optional given room.  Using clear will remove any
        characters.

        Example: &lt;yellow&gt;rcc $&lt;reset&gt; - put the dollar sign in the current room 
                    (e.g. to indicate a shop or bank)
                 &lt;yellow&gt;rcc C 234&lt;reset&gt; - put the letter C onto room 234
                 &lt;yellow&gt;rcc clear&lt;reset&gt; - remove any letter from the current
                 room
]]
map.help.exit_special = [[
    &lt;cyan&gt;Special Exits&lt;reset&gt;
        syntax: &lt;yellow&gt;exit special &lt;direction|roomID&gt; &lt;command&gt;&lt;reset&gt;
                &lt;yellow&gt;spe &lt;direction|roomID&gt; &lt;command&gt;&lt;reset&gt;

        This command will link two rooms via custom or special exit/script.

        Example: &lt;yellow&gt;spe n push rock&lt;reset&gt; - relative direction, will go to
                    the room that's north of you by doing 'push rock'
                 &lt;yellow&gt;spe 125 pull lever&lt;reset&gt; - will go to room 125 from the
                    current one by pulling a lever

        You can also specify a script to do code for you, by starting the exit
        command with script.

        Example: &lt;yellow&gt;spe 125 script: sendAll("pull lever", "enter gate")&lt;reset&gt;


]]
map.help.spev = [[
    &lt;cyan&gt;Remote Special Exits&lt;reset&gt;
        syntax: &lt;yellow&gt;spev &lt;fromID&gt; &lt;toID&gt; &lt;command&gt;&lt;reset&gt;

        This command will add a special exit between two remote rooms.

        Example: &lt;yellow&gt;spe 125 560 push rock&lt;reset&gt; - will link room 125 to room 560 with
                    the command 'push rock'
]]
map.help.spe_clear = [[
    &lt;cyan&gt;Clear Special Exits&lt;reset&gt;
        syntax: &lt;yellow&gt;exit special clear &lt;direction|roomID&gt;&lt;reset&gt;
                &lt;yellow&gt;spe clear &lt;direction|roomID&gt;&lt;reset&gt;

        This command will clear all special exits from the current, relative or
        given roomID.

        Example: &lt;yellow&gt;spe clear&lt;reset&gt; - delete all special exits in the room you're currently in
                 &lt;yellow&gt;spe clear n&lt;reset&gt; - delete all special exits in the room that's north of you
                 &lt;yellow&gt;spe clear 513&lt;reset&gt; - delete all special exits in room #513
]]
map.help.room_area = [[
    &lt;cyan&gt;Room Area&lt;reset&gt;
        syntax: &lt;yellow&gt;room area [v&lt;roomID&gt;] &lt;area name|areaID&gt;&lt;reset&gt;

        This command moves the current room to another area or a given optional
        room.

        Example: &lt;yellow&gt;room area My New Area&lt;reset&gt; - move the room you're in to 'My New Area'.
                 &lt;yellow&gt;room area v123 My New Area&lt;reset&gt; - move room 123 to My New Area
                 &lt;yellow&gt;room area 44&lt;reset&gt; - move the current room to the area ID 44
]]
map.help.room_label = [[
    &lt;cyan&gt;Room Label&lt;reset&gt;
        syntax: &lt;yellow&gt;room label [roomID] [fgColor] [bgColor] &lt;message&gt;&lt;reset&gt;

        This command adds a label to the current or specified room.  Foreground
        and background color are optional.

        Example: &lt;yellow&gt;room label My Label&lt;reset&gt; - adds a 'My Label' label to the current room
                 &lt;yellow&gt;room label 342 My Label&lt;reset&gt; - adds a label to room #342
                 &lt;yellow&gt;room label green My Label&lt;reset&gt; - adds a green label with a transparent
                    background to the current room
                 &lt;yellow&gt;room label green black My Label&lt;reset&gt; - adds a label with a green
                    foreground and black background to the current room
                 &lt;yellow&gt;room label 34 green black My Label&lt;reset&gt; - adds a label with a green
                    foreground and black background to room #34
]]
map.help.area_labels = [[
    &lt;cyan&gt;Area Labels&lt;reset&gt;
        syntax: &lt;yellow&gt;area labels &lt;area name&gt;&lt;reset&gt;

        This command displays all labels in a given area, with a link to delete.

        Example: &lt;yellow&gt;area label My Area&lt;reset&gt;
]]
map.help.feature_create = [[
    &lt;cyan&gt;Feature Create&lt;reset&gt;
        syntax: &lt;yellow&gt;feature create &lt;feature&gt; [char &lt;room character&gt;]&lt;reset&gt;

        This command will create a new map feature for use on rooms. You can
        also optionally add a character mark to the feature, which will be set
        when a map feature is added to a room. Note: Map feature names are not
        allowed to contain numbers.

        Example: &lt;yellow&gt;feature create A Nexus Point char N&lt;reset&gt; - creates a new feature
                    'A Nexus Point' with an assigned room character 'N'
]]
map.help.room_feature_create = [[
    &lt;cyan&gt;Room Create Feature&lt;reset&gt;
        syntax: &lt;yellow&gt;room create feature [v&lt;room id&gt;] &lt;feature&gt;&lt;reset&gt;
                &lt;yellow&gt;rcf [v&lt;room id&gt;] &lt;feature&gt;&lt;reset&gt;

        This command will add a created map feature to the room. If the map
        feature is associated with a character mark, it will be set on the room
        and existing marks get overwritten. The room number to add the feature
        to can be given with the optional argument (note: there is no space
        between the v and the ID).

        Example: &lt;yellow&gt;rcf A Nexus Point&lt;reset&gt; - add the feature 'A Nexus Point' to
                    the current room
                 &lt;yellow&gt;rcf v123 A Nexus Point&lt;reset&gt; - add the feature 'A Nexus Point'
                    to room #123
]]
map.help.room_feature_delete = [[
    &lt;cyan&gt;Room Delete Feature&lt;reset&gt;
        syntax: &lt;yellow&gt;room delete feature [v&lt;room id&gt;] &lt;feature&gt;&lt;reset&gt;
                &lt;yellow&gt;rdf [v&lt;room id&gt;] &lt;feature&gt;&lt;reset&gt;

        This command removes a map feature from the room. If the map feature is
        associated with a character mark and its set on the room, a random
        character mark from the other map features on the room is chosen to
        replace it. The room number to delete the feature from can be given with
        the optional argument (note: there is no space between the v and the
        ID).

        Example: &lt;yellow&gt;rdf v123 A Nexus Point&lt;reset&gt; - removes the feature 'A Nexus Point'
                    from the room #123
]]
map.help.feature_delete = [[
    &lt;cyan&gt;Feature Delete&lt;reset&gt;
        syntax: &lt;yellow&gt;feature delete &lt;feature&gt;&lt;reset&gt;

        This command deletes a global map feature and removes it from all rooms.

        Example: &lt;yellow&gt;feature delete A Nexus Point&lt;reset&gt; - removes the global feature
                    'A Nexus Point' and removes it from all rooms
]]



map.character = map.character or ""
map.prompt = map.prompt or {}
map.save = map.save or {}
map.save.recall = map.save.recall or {}
map.save.prompt_pattern = map.save.prompt_pattern or {}
map.save.ignore_patterns = map.save.ignore_patterns or {}
map.save.move_methods = map.save.move_methods or {}
map.silentUpdate = true

local oldstring = string
local string = utf8
string.format = oldstring.format
string.trim = oldstring.trim
string.starts = oldstring.starts
string.split = oldstring.split
string.ends = oldstring.ends


local profilePath = getMudletHomeDir()
profilePath = profilePath:gsub("\\","/")

map.defaults = {
    mode = "normal", -- can be lazy, simple, normal, or complex
    stretch_map = true,
    search_on_look = true,
    speedwalk_delay = 1,
    speedwalk_wait = true,
    speedwalk_random = true,
    max_search_distance = 1,
    clear_lines_on_send = true,
    map_window = {
        x = 0,
        y = 0,
        w = "30%",
        h = "40%",
        origin = "topright",
        shown = false,
    },
    prompt_test_patterns = {"^%[?%a*%]?&lt;.*&gt;", "^%[.*%]%s*&gt;", "^%w*[%.?!:]*&gt;", "^%[.*%]", "^[Hh][Pp]:.*&gt;"},
    custom_exits = {},  -- format: short_exit = {long_exit, reverse_exit, x_dif, y_dif, z_dif}
                        -- ex: { us = {"upsouth", "downnorth", 0, -1, 1}, dn = {"downnorth", "upsouth", 0, 1, -1} }
    custom_name_search = false,
    use_translation = true,
    lang_dirs = {n = 'n', ne = 'ne', nw = 'nw', e = 'e', w = 'w', s = 's', se = 'se', sw = 'sw',
        u = 'u', d = 'd', ["in"] = 'in', out = 'out', north = 'north', northeast = 'northeast',
        east = 'east', west = 'west', south = 'south', southeast = 'southeast', southwest = 'southwest',
        northwest = 'northwest', up = 'up', down = 'down', l = 'l', look = 'look',
        ed = 'ed', eu = 'eu', eastdown = 'eastdown', eastup = 'eastup',
        nd = 'nd', nu = 'nu', northdown = 'northdown', northup = 'northup',
        sd = 'sd', su = 'su', southdown = 'southdown', southup = 'southup',
        wd = 'wd', wu = 'wu', westdown = 'westdown', westup = 'westup',
    },
    debug = false,
    download_path = "https://raw.githubusercontent.com/Mudlet/Mudlet/development/src/mudlet-lua/lua/generic-mapper",
}

local move_queue, lines = {}, {}
local find_portal, vision_fail, room_detected, random_move, force_portal, find_prompt, downloading, walking, help_shown
local mt = getmetatable(map) or {}

local exitmap = {
    n = 'north',    ne = 'northeast',   nw = 'northwest',   e = 'east',
    w = 'west',     s = 'south',        se = 'southeast',   sw = 'southwest',
    u = 'up',       d = 'down',         ["in"] = 'in',      out = 'out',
    
    ed = 'eastdown',    eu = 'eastup',  nd = 'northdown',   nu = 'northup',
    sd = 'southdown',   su = 'southup', wd = 'westdown',    wu = 'westup',
}

local short = {}
for k,v in pairs(exitmap) do
    short[v] = k
end

local stubmap = {
    north = 1,      northeast = 2,      northwest = 3,      east = 4,
    west = 5,       south = 6,          southeast = 7,      southwest = 8,
    up = 9,         down = 10,          ["in"] = 11,        out = 12,
    northup = 13,   southdown = 14,     southup = 15,       northdown = 16,
    eastup = 17,    westdown = 18,      westup = 19,        eastdown = 20,
    [1] = "north",  [2] = "northeast",  [3] = "northwest",  [4] = "east",
    [5] = "west",   [6] = "south",      [7] = "southeast",  [8] = "southwest",
    [9] = "up",     [10] = "down",      [11] = "in",        [12] = "out",
    [13] = "northup", [14] = "southdown", [15] = "southup", [16] = "northdown",
    [17] = "eastup", [18] = "westdown", [19] = "westup",    [20] = "eastdown",
}

local coordmap = {
    [1] = {0,1,0},      [2] = {1,1,0},      [3] = {-1,1,0},     [4] = {1,0,0},
    [5] = {-1,0,0},     [6] = {0,-1,0},     [7] = {1,-1,0},     [8] = {-1,-1,0},
    [9] = {0,0,1},      [10] = {0,0,-1},    [11] = {0,0,0},     [12] = {0,0,0},
    [13] = {0,1,1},     [14] = {0,-1,-1},   [15] = {0,-1,1},    [16] = {0,1,-1},
    [17] = {1,0,1},     [18] = {-1,0,-1},   [19] = {-1,0,1},    [20] = {1,0,-1},
}

local reverse_dirs = {
    north = "south", south = "north", west = "east", east = "west", up = "down",
    down = "up", northwest = "southeast", northeast = "southwest", southwest = "northeast",
    southeast = "northwest", ["in"] = "out", out = "in",
    northup = "southdown", southdown = "northup", southup = "northdown", northdown = "southup",
    eastup = "westdown", westdown = "eastup", westup = "eastdown", eastdown = "westup",
}

local wait_echo = {}
local mapper_tag = "&lt;112,229,0&gt;(&lt;73,149,0&gt;mapper&lt;112,229,0&gt;): &lt;255,255,255&gt;"
local debug_tag = "&lt;255,165,0&gt;(&lt;200,120,0&gt;debug&lt;255,165,0&gt;): &lt;255,255,255&gt;"
local err_tag = "&lt;255,0,0&gt;(&lt;178,34,34&gt;error&lt;255,0,0&gt;): &lt;255,255,255&gt;"

local function config()
    local defaults = map.defaults
    local configs = map.configs or {}
    local path = profilePath.."/map downloads"
    if not io.exists(path) then lfs.mkdir(path) end
    -- load stored configs from file if it exists
    if io.exists(path.."/configs.lua") then
        table.load(path.."/configs.lua",configs)
    end
    -- overwrite default values with stored config values
    configs = table.update(defaults, configs)
    map.configs = configs
    map.configs.translate = {}
    for k, v in pairs(map.configs.lang_dirs) do
        map.configs.translate[v] = k
    end
    -- incorporate custom exits
    for k,v in pairs(map.configs.custom_exits) do
        exitmap[k] = v[1]
        reverse_dirs[v[1]] = v[2]
        short[v[1]] = k
        local count = #coordmap + 1
        coordmap[count] = {v[3],v[4],v[5]}
        stubmap[count] = v[1]
        stubmap[v[1]] = count
    end
    -- update to the current download path
    if map.configs.download_path == "https://raw.githubusercontent.com/JorMox/Mudlet/development/src/mudlet-lua/lua/generic-mapper" then
        map.configs.download_path = "https://raw.githubusercontent.com/Mudlet/Mudlet/development/src/mudlet-lua/lua/generic-mapper"
    end

    -- setup metatable to store sensitive values
    local protected = {"mapping", "currentRoom", "currentName", "currentExits", "currentArea",
        "prevRoom", "prevName", "prevExits", "mode", "version"}
    mt = getmetatable(map) or {}
    mt.__index = mt
    mt.__newindex = function(tbl, key, value)
            if not table.contains(protected, key) then
                rawset(tbl, key, value)
            else
                error("Protected Map Table Value")
            end
        end
    mt.set = function(key, value)
            if table.contains(protected, key) then
                mt[key] = value
            end
        end
    setmetatable(map, mt)
    map.set("mode", configs.mode)
    map.set("version", version)

    local saves = {}
    if io.exists(path.."/map_save.dat") then
        table.load(path.."/map_save.dat",saves)
    end
    saves.prompt_pattern = saves.prompt_pattern or {}
    saves.ignore_patterns = saves.ignore_patterns or {}
    saves.move_methods = saves.move_methods or {}
    saves.recall = saves.recall or {}
    map.save = saves

    if map.configs.map_window.shown then
        map.showMap(true)
    end
end

local function parse_help_text(text)
  text = text:gsub("%$ROOM_NAME_STATUS", (map.currentName and map.currentName ~= "") and '✔️' or '❌')
  text = text:gsub("%$ROOM_NAME", map.currentName or '')

  text = text:gsub("%$ROOM_EXITS_STATUS", (not map.currentExits or table.is_empty(map.currentExits)) and '❌' or '✔️')
  text = text:gsub("%$ROOM_EXITS", map.currentExits and table.concat(map.currentExits, ' ') or '')

  return text
end

function map.show_help(cmd)
    if cmd and cmd ~= "" then
        if cmd:starts("map ") then cmd = cmd:sub(5) end
        cmd = cmd:lower():gsub(" ","_")
        if not map.help[cmd] then
            map.echo("No help file on that command.")
        end
    else
        cmd = 1
    end

    for w in parse_help_text(map.help[cmd]):gmatch("[^\n]*\n") do
        local url, target = rex.match(w, [[&lt;(url)?link: ([^&gt;]+)&gt;]])
        -- lrexlib returns a non-capture as 'false', so determine which variable the capture went into
        if target == nil then target = url end
        if target then
            local before, linktext, _, link, _, after, ok = rex.match(w,
                          [[(.*)&lt;((url)?link): [^&gt;]+&gt;(.*)&lt;\/(url)?link&gt;(.*)]], 0, 'm')
            -- could not get rex.match to capture the newline - fallback to string.match
            local _, _, after = w:match("(.*)&lt;u?r?l?link: [^&gt;]+&gt;(.*)&lt;/u?r?l?link&gt;(.*)")

            cecho(before)
            fg("yellow")
            setUnderline(true)
            if linktext == "urllink" then
                echoLink(link, [[openWebPage("]]..target..[[")]], "Open webpage", true)
            elseif target ~= "1" then
                echoLink(link,[[map.show_help("]]..target..[[")]],"View: map help " .. target,true)
            else
                echoLink(link,[[map.show_help()]],"View: map help",true)
            end
            setUnderline(false)
            resetFormat()
            if after then cecho(after) end
        else
            cecho(w)
        end
    end
    echo("\n")
end

local bool_configs = {'stretch_map', 'search_on_look', 'speedwalk_wait', 'speedwalk_random',
    'clear_lines_on_send', 'debug', 'custom_name_search', 'use_translation'}
-- function intended to be used by an alias to change config values and save them to a file for later
function map.setConfigs(key, val, sub_key)
    if val == "off" or val == "false" then
        val = false
    elseif val == "on" or val == "true" then
        val = true
    end
    local toggle = false
    if val == nil or val == "" then toggle = true end
    key = key:gsub(" ","_")
    if tonumber(val) then val = tonumber(val) end
    if not toggle then
        if key == "map_window" then
            if map.configs.map_window[sub_key] then
                map.configs.map_window[sub_key] = val
                map.echo(string.format("Map config %s set to: %s", sub_key, tostring(val)))
            else
                map.echo("Unknown map config.",false, true)
            end
        elseif key =="lang_dirs" then
            sub_key = exitmap[sub_key] or sub_key
            if map.configs.lang_dirs[sub_key] then
                local long_dir, short_dir = val[1],val[2]
                if #long_dir &lt; #short_dir then long_dir, short_dir = short_dir, long_dir end
                map.configs.lang_dirs[sub_key] = long_dir
                map.configs.lang_dirs[short[sub_key]] = short_dir
                map.echo(string.format("Direction/command %s, abbreviated as %s, now interpreted as %s.", long_dir, short_dir, sub_key))
                map.configs.translate = {}
                for k, v in pairs(map.configs.lang_dirs) do
                    map.configs.translate[v] = k
                end
            else
                map.echo("Invalid direction/command.", false, true)
            end
        elseif key == "prompt_test_patterns" then
            if not table.contains(map.configs.prompt_test_patterns) then
                table.insert(map.configs.prompt_test_patterns, val)
                map.echo("Prompt pattern added to list: " .. val)
            else
                table.remove(map.configs.prompt_test_patterns, table.index_of(map.configs.prompt_test_patterns, val))
                map.echo("Prompt pattern removed from list: " .. val)
            end
        elseif key == "custom_exits" then
            if type(val) == "table" then
                for k, v in pairs(val) do
                    map.configs.custom_exits[k] = v
                    map.echo(string.format("Custom Exit short direction %s, long direction %s",k,v[1]))
                    map.echo(string.format("    set to: x: %s, y: %s, z: %s, reverse: %s",v[3],v[4],v[5],v[2]))
                end
            else
                map.echo("Custom Exit config must be in the form of a table.", false, true)
            end
        elseif map.configs[key] ~= nil then
            map.configs[key] = val
            map.echo(string.format("Config %s set to: %s", key, tostring(val)))
        else
            map.echo("Unknown configuration.",false,true)
            return
        end
    elseif toggle then
        if (type(map.configs[key]) == "boolean" and table.contains(bool_configs, key)) then
            map.configs[key] = not map.configs[key]
            map.echo(string.format("Config %s set to: %s", key, tostring(map.configs[key])))
        elseif key == "map_window" and sub_key == "shown" then
            map.configs.map_window.shown = not map.configs.map_window.shown
            map.echo(string.format("Map config %s set to: %s", "shown", tostring(map.configs.map_window.shown)))
        else
            map.echo("Unknown configuration.",false,true)
            return
        end
    end
    table.save(profilePath.."/map downloads/configs.lua",map.configs)
    config()
end

local function show_err(msg,debug)
    map.echo(msg,debug,true)
    error(msg,2)
end

local function print_echoes(what, debug, err)
    moveCursorEnd("main")
    local curline = getCurrentLine()
    if curline ~= "" then echo("\n") end
    decho(mapper_tag)
    if debug then decho(debug_tag) end
    if err then decho(err_tag) end
    cecho(what)
    echo("\n")
end

local function print_wait_echoes()
    for k,v in ipairs(wait_echo) do
        print_echoes(v[1],v[2],v[3])
    end
    wait_echo = {}
end

function map.echo(what, debug, err, wait)
    if debug and not map.configs.debug then return end
    what = tostring(what) or ""
    if wait then
        table.insert(wait_echo,{what, debug, err})
        return
    end
    print_wait_echoes()
    print_echoes(what, debug, err)
end

local function set_room(roomID)
    -- moves the map to the new room
    if map.currentRoom ~= roomID then
        map.set("prevRoom", map.currentRoom)
        map.set("currentRoom", roomID)
    end
    if getRoomName(map.currentRoom) ~= map.currentName then
        map.set("prevName", map.currentName)
        map.set("prevExits", map.currentExits)
        map.set("currentName", getRoomName(map.currentRoom))
        map.set("currentExits", getRoomExits(map.currentRoom))
        -- check handling of custom exits here
        for i = 13,#stubmap do
            map.currentExits[stubmap[i]] = tonumber(getRoomUserData(map.currentRoom,"exit " .. stubmap[i]))
        end
    end
    map.set("currentArea", getRoomArea(map.currentRoom))
    centerview(map.currentRoom)
    raiseEvent("onMoveMap", map.currentRoom)
end

local function add_door(roomID, dir, status)
    -- create or remove a door in the designated direction
    -- consider options for adding pickable and passable information
    dir = exitmap[dir] or dir
    if not table.contains(exitmap,dir) then
        error("Add Door: invalid direction.",2)
    end
    if type(status) ~= "number" then
        status = assert(table.index_of({"none","open","closed","locked"},status),
            "Add Door: Invalid status, must be none, open, closed, or locked") - 1
    end
    local exits = getRoomExits(roomID)
    -- check handling of custom exits here
    if not exits[dir] then
        setExitStub(roomID,stubmap[dir],true)
    end
    -- check handling of custom exits here
    if not table.contains({'u','d'},short[dir]) then
        setDoor(roomID,short[dir],status)
    else
        setDoor(roomID,dir,status)
    end
end

local function check_doors(roomID,exits)
    -- looks to see if there are doors in designated directions
    -- used for room comparison, can also be used for pathing purposes
    if type(exits) == "string" then exits = {exits} end
    local statuses = {}
    local doors = getDoors(roomID)
    local dir
    for k,v in pairs(exits) do
        dir = short[k] or short[v]
        if table.contains({'u','d'},dir) then
            dir = exitmap[dir]
        end
        if not doors[dir] or doors[dir] == 0 then
            return false
        else
            statuses[dir] = doors[dir]
        end
    end
    return statuses
end

local function find_room(name, area)
    -- looks for rooms with a particular name, and if given, in a specific area
    local rooms = searchRoom(name)
    if type(area) == "string" then
        local areas = getAreaTable() or {}
        for k,v in pairs(areas) do
            if string.lower(k) == string.lower(area) then
                area = v
                break
            end
        end
        area = areas[area] or nil
    end
    for k,v in pairs(rooms) do
        if string.lower(v) ~= string.lower(name) then
            rooms[k] = nil
        elseif area and getRoomArea(k) ~= area then
            rooms[k] = nil
        end
    end
    return rooms
end

local function getRoomStubs(roomID)
    -- turns stub info into table similar to exit table
    local stubs = getExitStubs(roomID)
    if type(stubs) ~= "table" then stubs = {} end
    -- check handling of custom exits here
    local tmp
    for i = 13,#stubmap do
        tmp = tonumber(getRoomUserData(roomID,"stub "..stubmap[i])) or tonumber(getRoomUserData(roomID,"stub"..stubmap[i])) -- for old version
        if tmp then table.insert(stubs,tmp) end
    end

    local exits = {}
    for k,v in pairs(stubs) do
        exits[stubmap[v]] = 0
    end
    return exits
end

local function connect_rooms(ID1, ID2, dir1, dir2, no_check)
    -- makes a connection between rooms
    -- can make backwards connection without a check
    local match = false
    if not ID1 and ID2 and dir1 then
        error("Connect Rooms: Missing Required Arguments.",2)
    end
    dir2 = dir2 or reverse_dirs[dir1]
    -- check handling of custom exits here
    if stubmap[dir1] &lt;= 12 then
        setExit(ID1,ID2,stubmap[dir1])
    else
        addSpecialExit(ID1, ID2, dir1)
        setRoomUserData(ID1,"exit " .. dir1,ID2)
    end
    if stubmap[dir1] &gt; 12 then
        -- check handling of custom exits here
        setRoomUserData(ID1,"stub "..dir1, stubmap[dir1])
    end
    local doors1, doors2 = getDoors(ID1), getDoors(ID2)
    local dstatus1, dstatus2 = doors1[short[dir1]] or doors1[dir1], doors2[short[dir2]] or doors2[dir2]
    if dstatus1 ~= dstatus2 then
        if not dstatus1 then
            add_door(ID1,dir1,dstatus2)
        elseif not dstatus2 then
            add_door(ID2,dir2,dstatus1)
        end
    end
    if map.mode ~= "complex" then
        local stubs = getRoomStubs(ID2)
        if stubs[dir2] then match = true end
        if (match or no_check) then
            -- check handling of custom exits here
            if stubmap[dir1] &lt;= 12 then
                setExit(ID2,ID1,stubmap[dir2])
            else
                addSpecialExit(ID2, ID1, dir2)
                setRoomUserData(ID2,"exit " .. dir2,ID1)
            end
            if stubmap[dir2] &gt; 12 then
                -- check handling of custom exits here
                setRoomUserData(ID2,"stub "..dir2, stubmap[dir2])
            end
        end
    end
end

local function check_room(roomID, name, exits, onlyName)
    -- check to see if room name or/and exits match expectations
    if not roomID then
        error("Check Room Error: No ID",2)
    end
    -- check with room hash id
    if map.prompt.hash then
        if map.prompt.hash == getRoomHashByID(roomID) then
            return true
        else
            return false
        end
    end

    if name ~= getRoomName(roomID) then return false end

    -- used in mode "lazy" to match only the room name
    if onlyName then return true end

    local t_exits = table.union(getRoomExits(roomID),getRoomStubs(roomID))
    -- check handling of custom exits here
    for i = 13,#stubmap do
        t_exits[stubmap[i]] = tonumber(getRoomUserData(roomID,"exit " .. stubmap[i])) or (tonumber(getRoomUserData(roomID,"stub " .. stubmap[i])) and 0) or (tonumber(getRoomUserData(roomID,"stub" .. stubmap[i])) and 0) -- for old version
    end
    for k,v in ipairs(exits) do
        if short[v] and not table.contains(t_exits,v) then return false end
        t_exits[v] = nil
    end
    return table.is_empty(t_exits) or check_doors(roomID,t_exits)
end

local function stretch_map(dir,x,y,z)
    -- stretches a map to make room for just added room that would overlap with existing room
    local dx,dy,dz
    if not dir then return end
    for k,v in pairs(getAreaRooms(map.currentArea)) do
        if v ~= map.currentRoom then
            dx,dy,dz = getRoomCoordinates(v)
            if dx &gt;= x and string.find(dir,"east") then
                dx = dx + 1
            elseif dx &lt;= x and string.find(dir,"west") then
                dx = dx - 1
            end
            if dy &gt;= y and string.find(dir,"north") then
                dy = dy + 1
            elseif dy &lt;= y and string.find(dir,"south") then
                dy = dy - 1
            end
            if dz &gt;= z and string.find(dir,"up") then
                dz = dz + 1
            elseif dz &lt;= z and string.find(dir,"down") then
                dz = dz - 1
            end
            setRoomCoordinates(v,dx,dy,dz)
        end
    end
end

local function create_room(name, exits, dir, coords)
    -- makes a new room with captured name and exits
    -- links with other rooms as appropriate
    -- links to adjacent rooms in direction of exits if in simple mode
    if map.mapping then
        name = map.sanitizeRoomName(name)
        map.echo("New Room: " .. name,false,false,(dir or find_portal or force_portal) and true or false)
        local newID = createRoomID()
        addRoom(newID)
        setRoomArea(newID, map.currentArea)
        setRoomName(newID, name)
        if map.prompt.hash then
            setRoomIDbyHash(newID, map.prompt.hash)
        end
        for k,v in ipairs(exits) do
            if stubmap[v] then
                if stubmap[v] &lt;= 12 then
                    setExitStub(newID, stubmap[v], true)
                else
                    -- add special char to prompt special exit
                    if string.find(v, "up") or string.find(v, "down") then
                        setRoomChar(newID, "◎")
                    end
                    -- check handling of custom exits here
                    setRoomUserData(newID, "stub "..v,stubmap[v])
                end
            end
        end
        if dir then
            connect_rooms(map.currentRoom, newID, dir)
        elseif find_portal or force_portal then
            addSpecialExit(map.currentRoom, newID, (find_portal or force_portal))
            setRoomUserData(newID,"portals",tostring(map.currentRoom)..":"..(find_portal or force_portal))
        end
        setRoomCoordinates(newID,unpack(coords))
        local pos_rooms = getRoomsByPosition(map.currentArea,unpack(coords))
        if not (find_portal or force_portal) and map.configs.stretch_map and table.size(pos_rooms) &gt; 1 then
            set_room(newID)
            stretch_map(dir,unpack(coords))
        end
        if map.mode == "simple" then
            local x,y,z = unpack(coords)
            local dx,dy,dz,rooms
            for k,v in ipairs(exits) do
                if stubmap[v] then
                    dx,dy,dz = unpack(coordmap[stubmap[v]])
                    rooms = getRoomsByPosition(map.currentArea,x+dx,y+dy,z+dz)
                    if table.size(rooms) == 1 then
                        connect_rooms(newID,rooms[0],v)
                    end
                end
            end
        end
        set_room(newID)
    end
end

local function find_area_limits(areaID)
    -- used to find min and max coordinate limits for an area
    if not areaID then
        error("Find Limits: Missing area ID",2)
    end
    local rooms = getAreaRooms(areaID)
    local minx, miny, minz = getRoomCoordinates(rooms[0])
    local maxx, maxy, maxz = minx, miny, minz
    local x,y,z
    for k,v in pairs(rooms) do
        x,y,z = getRoomCoordinates(v)
        minx = math.min(x,minx)
        maxx = math.max(x,maxx)
        miny = math.min(y,miny)
        maxy = math.max(y,maxy)
        minz = math.min(z,minz)
        maxz = math.max(z,maxz)
    end
    return minx, maxx, miny, maxy, minz, maxz
end

local function find_link(name, exits, dir, max_distance)
    -- search for matching room in desired direction
    -- in lazy mode check_room search only by name
    local x,y,z = getRoomCoordinates(map.currentRoom)
    if map.mapping and x then
        if max_distance &lt; 1 then
            max_distance = nil
        else
            max_distance = max_distance - 1
        end
        if not stubmap[dir] or not coordmap[stubmap[dir]] then return end
        local dx,dy,dz = unpack(coordmap[stubmap[dir]])
        local minx, maxx, miny, maxy, minz, maxz = find_area_limits(map.currentArea)
        local rooms, match, stubs
        if max_distance then
            minx, maxx = x - max_distance, x + max_distance
            miny, maxy = y - max_distance, y + max_distance
            minz, maxz = z - max_distance, z + max_distance
        end
        -- find link from room hash first
        if map.prompt.hash then
            local room = getRoomIDbyHash(map.prompt.hash)
            if room &gt; 0 then
                match = room
            end
        else
            repeat
                x, y, z = x + dx, y + dy, z + dz
                rooms = getRoomsByPosition(map.currentArea,x,y,z)
            until (x &gt; maxx or x &lt; minx or y &gt; maxy or y &lt; miny or z &gt; maxz or z &lt; minz or not table.is_empty(rooms))
            for k,v in pairs(rooms) do
                if check_room(v,name,exits,false) then
                    match = v
                    break
                elseif map.mode == "lazy" and check_room(v,name,exits,true) then
                    match = v
                    break
                end
            end
        end
        if match then
            connect_rooms(map.currentRoom, match, dir)
            set_room(match)
        else
            x,y,z = getRoomCoordinates(map.currentRoom)
            create_room(name, exits, dir,{x+dx,y+dy,z+dz})
        end
    end
end

local function move_map()
    -- tries to move the map to the next room
    local move = table.remove(move_queue,1)
    if move or random_move then
        local exits = (map.currentRoom and getRoomExits(map.currentRoom)) or {}
        -- check handling of custom exits here
        if map.currentRoom then
            for i = 13, #stubmap do
                exits[stubmap[i]] = tonumber(getRoomUserData(map.currentRoom,"exit " .. stubmap[i]))
            end
        end
        local special = (map.currentRoom and getSpecialExitsSwap(map.currentRoom)) or {}
        if move and not exits[move] and not special[move] then
            for k,v in pairs(special) do
                if string.starts(k,move) then
                    move = k
                    break
                end
            end
        end
        if find_portal then
            map.find_me(map.currentName,map.currentExits,move)
            find_portal = false
        elseif force_portal then
            find_portal = false
            map.echo("Creating portal destination")
            create_room(map.currentName, map.currentExits, nil, {getRoomCoordinates(map.currentRoom)})
            force_portal = false
        elseif move == "recall" and map.save.recall[map.character] then
            set_room(map.save.recall[map.character])
        elseif move == map.configs.lang_dirs['look'] and map.currentRoom and not check_room(map.currentRoom, map.currentName, map.currentExits) then
            -- this check isn't working as intended, find out why
            map.find_me(map.currentName,map.currentExits)
        else
            local onlyName
            if map.mode == "lazy" then
              onlyName = true
            else
              onlyName = false
            end
            if exits[move] and (vision_fail or check_room(exits[move], map.currentName, map.currentExits, onlyName)) then
                set_room(exits[move])
            elseif special[move] and (vision_fail or check_room(special[move], map.currentName, map.currentExits, onlyName)) then
                set_room(special[move])
            elseif not vision_fail then
                if map.mapping and move then
                    find_link(map.currentName, map.currentExits, move, map.configs.max_search_distance)
                else
                    map.find_me(map.currentName,map.currentExits, move)
                end
            end
        end
        vision_fail = false
    end
end

local function capture_move_cmd(dir,priority)
    -- captures valid movement commands
    local configs = map.configs
    if configs.clear_lines_on_send then
        lines = {}
    end
    dir = string.lower(dir)
    if dir == "/" then dir = "recall" end
    if dir == configs.lang_dirs['l'] then dir = configs.lang_dirs['look'] end
    if configs.use_translation then
        dir = configs.translate[dir] or dir
    end
    local door = string.match(dir,"open (%a+)")
    if map.mapping and door and (exitmap[door] or short[door]) then
        local doors = getDoors(map.currentRoom)
        if not doors[door] and not doors[short[door]] then
            map.set_door(door,"","")
        end
    end
    for i,v in ipairs(map.save.move_methods) do
    	local str = string.match(dir, v .. " (%a+)")
    	if str then 
    		dir = str
    		break
    	end
    end
    local portal = string.match(dir,"enter (%a+)")
    if map.mapping and portal then
        local portals = getSpecialExitsSwap(map.currentRoom)
        if not portals[dir] then
            map.set_portal(dir, true)
        end
    end
    if table.contains(exitmap,dir) or string.starts(dir,"enter ") or dir == "recall" then
      if dir ~= configs.lang_dirs['look'] then
        if priority then
            table.insert(move_queue,1,exitmap[dir] or dir)
        else
            table.insert(move_queue,exitmap[dir] or dir)
        end
      else
        if configs.search_on_look == true then
          table.insert(move_queue, dir)
        end
    end				
    elseif map.currentRoom then
        local special = getSpecialExitsSwap(map.currentRoom) or {}
				if not configs.speedwalk_wait and speedWalkPath then
						for index, room in ipairs(speedWalkPath) do
							special = table.union(special,getSpecialExitsSwap(room))
						end
				end
        if special[dir] then
            if priority then
                table.insert(move_queue,1,dir)
            else
                table.insert(move_queue,dir)
            end
        end
    end
end

local function deduplicate_exits(exits)
  local deduplicated_exits = {}
  for _, v in ipairs(exits) do
    deduplicated_exits[v] = true
  end

  return table.keys(deduplicated_exits)
end
local function capture_room_info(name, exits)
    -- captures room info, and tries to move map to match
    if (not vision_fail) and name and exits then
        map.set("prevName", map.currentName)
        map.set("prevExits", map.currentExits)
        name = string.trim(name)
        map.set("currentName", name)
        if exits:ends(".") then exits = exits:sub(1,#exits-1) end
        if not map.configs.use_translation then
            exits = string.gsub(string.lower(exits)," and "," ")
        end
        map.set("currentExits", {})
        for w in string.gmatch(exits,"%a+") do
            if map.configs.use_translation then
                local dir = map.configs.translate and map.configs.translate[w]
                if dir then table.insert(map.currentExits,dir) end
            else
                table.insert(map.currentExits,w)
            end
        end
        undupeExits = deduplicate_exits(map.currentExits)
        map.set("currentExits", undupeExits)
        map.echo(string.format("Exits Captured: %s (%s)",exits, table.concat(map.currentExits, " ")),true)
        move_map()
        raiseEvent('onCheckRoomScript')
    elseif vision_fail then
        move_map()
        raiseEvent('onCheckRoomScript')
    end
end

local function find_area(name)
    -- searches for the named area, and creates it if necessary
    local areas = getAreaTable()
    local areaID
    for k,v in pairs(areas) do
        if string.lower(name) == string.lower(k) then
            areaID = v
            break
        end
    end
    if not areaID then areaID = addAreaName(name) end
    if not areaID then
        show_err("Invalid Area. No such area found, and area could not be added.",true)
    end
    map.set("currentArea", areaID)
end

function map.load_map(address)
    local path = profilePath .. "/map downloads/map.dat"
    if not address then
        loadMap(path)
        map.echo("Map reloaded from local copy.")
    else
        if not string.match(address,"/[%a_]+%.dat$") then
            address = address .. "/map.dat"
        end
        downloading = true
        downloadFile(path, address)
        map.echo(string.format("Downloading map file from: %s.",address))
    end
end

function map.set_exit(dir,roomID)
    -- used to set unusual exits from the room you are standing in
    if map.mapping then
        roomID = tonumber(roomID)
        if not roomID then
            show_err("Set Exit: Invalid Room ID")
        end
        if not table.contains(exitmap,dir) and not string.starts(dir, "-p ") then
            show_err("Set Exit: Invalid Direction")
        end

        if not string.starts(dir, "-p ") then
            local exit
            if stubmap[exitmap[dir] or dir] &lt;= 12 then
                exit = short[exitmap[dir] or dir]
                setExit(map.currentRoom,roomID,exit)
            else
                -- check handling of custom exits here
                exit = exitmap[dir] or dir
                exit = "exit " .. exit
                setRoomUserData(map.currentRoom,exit,roomID)
            end
            map.echo("Exit " .. dir .. " now goes to roomID " .. roomID)
        else
            dir = string.gsub(dir,"^-p ","")
            addSpecialExit(map.currentRoom,roomID,dir)
            map.echo("Special exit '" .. dir .. "' now goes to roomID " .. roomID)
        end
    else
        map.echo("Not mapping",false,true)
    end
end

function map.find_path(roomName,areaName,return_tables)
    areaName = (areaName ~= "" and areaName) or nil
    local rooms = find_room(roomName,areaName)
    local found,dirs = false,{}
    local path = {}
    for k,v in pairs(rooms) do
        found = getPath(map.currentRoom,k)
        if found and (#dirs == 0 or #dirs &gt; #speedWalkDir) then
            dirs = speedWalkDir
            path = speedWalkPath
        end
    end
    if return_tables then
        if table.is_empty(path) then
            path, dirs = nil, nil
        end
        return path, dirs
    else
        if #dirs &gt; 0 then
            map.echo("Path to " .. roomName .. ((areaName and " in " .. areaName) or "") .. ": " .. table.concat(dirs,", "))
        else
            map.echo("No path found to " .. roomName .. ((areaName and " in " .. areaName) or "") .. ".",false,true)
        end
    end
end

function map.export_area(name)
    -- used to export a single area to a file
    local areas = getAreaTable()
    name = string.lower(name)
    for k,v in pairs(areas) do
        if name == string.lower(k) then name = k end
    end
    if not areas[name] then
        show_err("No such area.")
    end
    local rooms = getAreaRooms(areas[name])
    local tmp = {}
    for k,v in pairs(rooms) do
        tmp[v] = v
    end
    rooms = tmp
    local tbl = {}
    tbl.name = name
    tbl.rooms = {}
    tbl.exits = {}
    tbl.special = {}
    local rname, exits, stubs, doors, special, portals, door_up, door_down, coords, environment, roomChar
    for k,v in pairs(rooms) do
        rname = getRoomName(v)
        exits = getRoomExits(v)
        stubs = getExitStubs(v)
        doors = getDoors(v)
        special = getSpecialExitsSwap(v)
        portals = getRoomUserData(v,"portals") or ""
	environment = getRoomEnv(v)
	roomChar = getRoomChar(v)
        coords = {getRoomCoordinates(v)}
        tbl.rooms[v] = {name = rname, coords = coords, exits = exits, stubs = stubs, doors = doors, door_up = door_up,
            door_down = door_down, door_in = door_in, door_out = door_out, special = special, portals = portals, environment = environment, roomChar = roomChar}
        tmp = {}
        for k1,v1 in pairs(exits) do
            if not table.contains(rooms,v1) then
                tmp[k1] = {v1, getRoomName(v1)}
            end
        end
        if not table.is_empty(tmp) then
            tbl.exits[v] = tmp
        end
        tmp = {}
        for k1,v1 in pairs(special) do
            if not table.contains(rooms,v1) then
                tmp[k1] = {v1, getRoomName(v1)}
            end
        end
        if not table.is_empty(tmp) then
            tbl.special[v] = tmp
        end
    end
    local path = profilePath.."/"..string.gsub(string.lower(name),"%s","_")..".dat"
    table.save(path,tbl)
    map.echo("Area " .. name .. " exported to " .. path)
end

function map.import_area(name)
    name = profilePath .. "/" .. string.gsub(string.lower(name),"%s","_") .. ".dat"
    local tbl = {}
    table.load(name,tbl)
    if table.is_empty(tbl) then
        show_err("No file found")
    end
    local areas = getAreaTable()
    local areaID = areas[tbl.name] or addAreaName(tbl.name)
    local rooms = {}
    local ID
    for k,v in pairs(tbl.rooms) do
        ID = createRoomID()
        rooms[k] = ID
        addRoom(ID)
        setRoomName(ID,v.name)
        setRoomArea(ID,areaID)
        setRoomCoordinates(ID,unpack(v.coords))
        if type(v.stubs) == "table" then
            for i,j in pairs(v.stubs) do
                setExitStub(ID,j,true)
            end
        end
        for i,j in pairs(v.doors) do
            setDoor(ID,i,j)
        end
        setRoomUserData(ID,"portals",v.portals)
	setRoomEnv(ID,v.environment)
	setRoomChar(ID,v.roomChar)
    end
    for k,v in pairs(tbl.rooms) do
        for i,j in pairs(v.exits) do
            if rooms[j] then
                connect_rooms(rooms[k],rooms[j],i)
            end
        end
        for i,j in pairs(v.special) do
            if rooms[j] then
                addSpecialExit(rooms[k],rooms[j],i)
            end
        end
    end
    for k,v in pairs(tbl.exits) do
        for i,j in pairs(v) do
            if getRoomName(j[1]) == j[2] then
                connect_rooms(rooms[k],j[1],i)
            end
        end
    end
    for k,v in pairs(tbl.special) do
        for i,j in pairs(v) do
            addSpecialExit(k,j[1],i)
        end
    end
    map.fix_portals()
    map.echo("Area " .. tbl.name .. " imported from " .. name)
end

function map.set_recall()
    -- assigned the current room to be recall for the current character
    map.save.recall[map.character] = map.currentRoom
    table.save(profilePath .. "/map downloads/map_save.dat",map.save)
    map.echo("Recall room set to: " .. getRoomName(map.currentRoom) .. ".")
end

function map.set_portal(name, is_auto)
    -- creates a new portal in the room
    if map.mapping then
        if not string.starts(name,"-f ") then
            find_portal = name
        else
            name = string.gsub(name,"^-f ","")
            force_portal = name
        end
        move_queue = {name}
        if not is_auto then
            send(name)
        end
    else
        map.echo("Not mapping",false,true)
    end
end

function map.set_mode(mode)
    -- switches mapping modes
    if not table.contains({"lazy","simple","normal","complex"},mode) then
        show_err("Invalid Map Mode, must be 'lazy', 'simple', 'normal' or 'complex'.")
    end
    map.set("mode", mode)
    map.echo("Current mode set to: " .. mode)
end

function map.start_mapping(area_name)
    -- starts mapping, and sets the current area to the given one, or uses the current one
    if not map.currentName then
        show_err("Room detection not yet working, see &lt;yellow&gt;map basics&lt;reset&gt; for guidance.")
    end
    local rooms
    move_queue = {}
    area_name = area_name ~= "" and area_name or nil
    if map.currentArea and not area_name then
        local areas = getAreaTableSwap()
        area_name = areas[map.currentArea]
    end
    if not area_name then
        show_err("You haven't started mapping yet, how should the first area be called? Set it with: &lt;yellow&gt;start mapping &lt;area name&gt;&lt;reset&gt;")
    end
    map.echo("Now mapping in area: " .. area_name)
    map.set("mapping", true)
    find_area(area_name)
    rooms = find_room(map.currentName, map.currentArea)
    if table.is_empty(rooms) then
        if map.currentRoom and getRoomName(map.currentRoom) == map.currentName then
            map.set_area(area_name)
        else
            create_room(map.currentName, map.currentExits, nil, {0,0,0})
        end
    elseif map.currentRoom and map.currentArea ~= getRoomArea(map.currentRoom) then
        map.set_area(area_name)
    end
end

function map.stop_mapping()
    map.set("mapping", false)
    map.echo("Mapping off.")
end

function map.clear_moves()
    local commands_in_queue = #move_queue
    move_queue = {}
    map.echo("Move queue cleared, "..commands_in_queue.." commands removed.")
end

function map.show_moves()
    map.echo("Moves: "..(move_queue and table.concat(move_queue, ', ') or '(queue empty)'))
end

function map.set_area(name)
    -- assigns the current room to the area given, creates the area if necessary
    if map.mapping then
        find_area(name)
        if map.currentRoom and getRoomArea(map.currentRoom) ~= map.currentArea then
            setRoomArea(map.currentRoom,map.currentArea)
            set_room(map.currentRoom)
        end
    else
        map.echo("Not mapping",false,true)
    end
end

function map.set_door(dir,status,one_way)
    -- adds a door on a given exit
    if map.mapping then
        if not map.currentRoom then
            show_err("Make Door: No room found.")
        end
        dir = exitmap[dir] or dir
        if not stubmap[dir] then
            show_err("Make Door: Invalid direction.")
        end
        status = (status ~= "" and status) or "closed"
        one_way = (one_way ~= "" and one_way) or "no"
        if not table.contains({"yes","no"},one_way) then
            show_err("Make Door: Invalid one-way status, must be yes or no.")
        end

        local exits = getRoomExits(map.currentRoom)
        local exit
        -- check handling of custom exits here
        for i = 13,#stubmap do
            exit = "exit " .. stubmap[i]
            exits[stubmap[i]] = tonumber(getRoomUserData(map.currentRoom,exit))
        end
        local target_room = exits[dir]
        if target_room then
            exits = getRoomExits(target_room)
            -- check handling of custom exits here
            for i = 13,#stubmap do
                exit = "exit " .. stubmap[i]
                exits[stubmap[i]] = tonumber(getRoomUserData(target_room,exit))
            end
        end
        if one_way == "no" and (target_room and exits[reverse_dirs[dir]] == map.currentRoom) then
            add_door(target_room,reverse_dirs[dir],status)
        end
        add_door(map.currentRoom,dir,status)
        map.echo(string.format("Adding %s door to the %s", status, dir))
    else
        map.echo("Not mapping",false,true)
    end
end

function map.shift_room(dir)
    -- shifts a room around on the map
    if map.mapping then
        dir = exitmap[dir] or (table.contains(exitmap,dir) and dir)
        if not dir then
            show_err("Shift Room: Exit not found")
        end
        local x,y,z = getRoomCoordinates(map.currentRoom)
        dir = stubmap[dir]
        local coords = coordmap[dir]
        x = x + coords[1]
        y = y + coords[2]
        z = z + coords[3]
        setRoomCoordinates(map.currentRoom,x,y,z)
        centerview(map.currentRoom)
        map.echo("Shifting room",true)
    else
        map.echo("Not mapping",false,true)
    end
end

local function check_link(firstID, secondID, dir)
    -- check to see if two rooms are connected in a given direction
    if not firstID then error("Check Link Error: No first ID",2) end
    if not secondID then error("Check Link Error: No second ID",2) end
    local name = getRoomName(firstID)
    local exits1 = table.union(getRoomExits(firstID),getRoomStubs(firstID))
    local exits2 = table.union(getRoomExits(secondID),getRoomStubs(secondID))
    local exit
    -- check handling of custom exits here
    for i = 13,#stubmap do
        exit = "exit " .. stubmap[i]
        exits1[stubmap[i]] = tonumber(getRoomUserData(firstID,exit))
        exits2[stubmap[i]] = tonumber(getRoomUserData(secondID,exit))
    end
    local checkID = exits2[reverse_dirs[dir]]
    local exits = {}
    for k,v in pairs(exits1) do
        table.insert(exits,k)
    end
    return checkID and check_room(checkID,name,exits)
end

function map.find_me(name, exits, dir, manual)
    -- tries to locate the player using the current room name and exits, and if provided, direction of movement
    -- if direction of movement is given, narrows down possibilities using previous room info
    if move ~= "recall" then move_queue = {} end
    -- find from room hash id - map.find_me(nil, nil, nil, false)
    if map.prompt.hash then
        local room = getRoomIDbyHash(map.prompt.hash)
        if room &gt; 0 then
            set_room(room)
            map.echo("Room found, ID: " .. room, true)
            return
        else
            map.echo("Room not found in map database!", not manual, true)
            return
        end
    end
    local check = dir and map.currentRoom and table.contains(exitmap,dir)
    name = name or map.currentName
    exits = exits or map.currentExits
    if not name and not exits then
        show_err("Room not found, complete room name and exit data not available.")
    end
    local rooms = find_room(name)
    local match_IDs = {}
    for k,v in pairs(rooms) do
        if check_room(k, name, exits) then
            table.insert(match_IDs,k)
        end
    end
    rooms = match_IDs
    match_IDs = {}
    if table.size(rooms) &gt; 1 and check then
        for k,v in pairs(rooms) do
            if check_link(map.currentRoom,v,dir) then
                table.insert(match_IDs,v)
            end
        end
    elseif random_move then
        for k,v in pairs(getRoomExits(map.currentRoom)) do
            if check_room(v,map.currentName,map.currentExits) then
                table.insert(match_IDs,v)
            end
        end
    end
    if table.size(match_IDs) == 0 then
        match_IDs = rooms
    end
    if table.index_of(match_IDs,map.currentRoom) then
        match_IDs = {map.currentRoom}
    end
    if not table.is_empty(match_IDs) and not find_portal then
        set_room(match_IDs[1])
        map.echo("Room found, ID: " .. match_IDs[1],true)
    elseif find_portal then
        if not table.is_empty(match_IDs) then
            map.echo("Found portal destination, linking rooms",false,false,true)
            addSpecialExit(map.currentRoom,match_IDs[1],find_portal)
            local portals = getRoomUserData(match_IDs[1],"portals") or ""
            portals = portals .. "," .. tostring(map.currentRoom)..":"..find_portal
            setRoomUserData(match_IDs[1],"portals",portals)
            set_room(match_IDs[1])
            map.echo("Room found, ID: " .. match_IDs[1],true)
        else
            map.echo("Creating portal destination",false,false,true)
            create_room(map.currentName, map.currentExits, nil, {getRoomCoordinates(map.currentRoom)})
        end
        find_portal = false
    elseif table.is_empty(match_IDs) then
        map.echo("Room not found in map database", not manual, true)
    end
end

function map.fix_portals()
    if map.mapping then
        -- used to clear and update data for portal back-referencing
        local rooms = getRooms()
        local portals
        for k,v in pairs(rooms) do
            setRoomUserData(k,"portals","")
        end
        for k,v in pairs(rooms) do
            for cmd,room in pairs(getSpecialExitsSwap(k)) do
                portals = getRoomUserData(room,"portals") or ""
                if portals ~= "" then portals = portals .. "," end
                portals = portals .. tostring(k) .. ":" .. cmd
                setRoomUserData(room,"portals",portals)
            end
        end
        map.echo("Portals Fixed")
    else
        map.echo("Not mapping",false,true)
    end
end

function map.merge_rooms()
    -- used to combine essentially identical rooms with the same coordinates
    -- typically, these are generated due to mapping errors
    if map.mapping then
        map.echo("Merging rooms")
        local x,y,z = getRoomCoordinates(map.currentRoom)
        local rooms = getRoomsByPosition(map.currentArea,x,y,z)
        local exits, portals, room, cmd, curportals
        local room_count = 1
        for k,v in pairs(rooms) do
            if v ~= map.currentRoom then
                if getRoomName(v) == getRoomName(map.currentRoom) then
                    room_count = room_count + 1
                    for k1,v1 in pairs(getRoomExits(v)) do
                        setExit(map.currentRoom,v1,stubmap[k1])
                        exits = getRoomExits(v1)
                        if exits[reverse_dirs[k1]] == v then
                            setExit(v1,map.currentRoom,stubmap[reverse_dirs[k1]])
                        end
                    end
                    for k1,v1 in pairs(getDoors(v)) do
                        setDoor(map.currentRoom,k1,v1)
                    end
                    for k1,v1 in pairs(getSpecialExitsSwap(v)) do
                        addSpecialExit(map.currentRoom,v1,k1)
                    end
                    portals = getRoomUserData(v,"portals") or ""
                    if portals ~= "" then
                        portals = string.split(portals,",")
                        for k1,v1 in ipairs(portals) do
                            room,cmd = unpack(string.split(v1,":"))
                            addSpecialExit(tonumber(room),map.currentRoom,cmd)
                            curportals = getRoomUserData(map.currentRoom,"portals") or ""
                            if not string.find(curportals,room) then
                                curportals = curportals .. "," .. room .. ":" .. cmd
                                setRoomUserData(map.currentRoom,"portals",curportals)
                            end
                        end
                    end
                    -- check handling of custom exits here for doors and exits, and reverse exits
                    for i = 13,#stubmap do
                        local door = "door " .. stubmap[i]
                        local tmp = tonumber(getRoomUserData(v,door))
                        if tmp then
                            setRoomUserData(map.currentRoom,door,tmp)
                        end
                        local exit = "exit " .. stubmap[i]
                        tmp = tonumber(getRoomUserData(v,exit))
                        if tmp then
                            setRoomUserData(map.currentRoom,exit,tmp)
                            if tonumber(getRoomUserData(tmp, "exit " .. reverse_dirs[stubmap[i]])) == v then
                                setRoomUserData(tmp, exit, map.currentRoom)
                            end
                        end
                    end
                    deleteRoom(v)
                end
            end
        end
        if room_count &gt; 1 then
            map.echo(room_count .. " rooms merged", true)
        end
    else
        map.echo("Not mapping",false,true)
    end
end

function map.findAreaID(areaname, exact)
    local areaname = areaname:lower()
    local list = getAreaTable()

    -- iterate over the list of areas, matching them with substring match.
    -- if we get match a single area, then return its ID, otherwise return
    -- 'false' and a message that there are than one are matches
    local returnid, fullareaname, multipleareas = nil, nil, {}
    for area, id in pairs(list) do
        if (not exact and area:lower():find(areaname, 1, true)) or (exact and areaname == area:lower()) then
            returnid = id
            fullareaname = area
            multipleareas[#multipleareas+1] = area
        end
    end

    if #multipleareas == 1 then
        return returnid, fullareaname
    else
        return nil, nil, multipleareas
    end
end

function map.echoRoomList(areaname, exact)
    local areaid, msg, multiples
    local listcolor, othercolor = "DarkSlateGrey","LightSlateGray"
    if tonumber(areaname) then
        areaid = tonumber(areaname)
        msg = getAreaTableSwap()[areaid]
    else
        areaid, msg, multiples = map.findAreaID(areaname, exact)
    end
    if areaid then
        local roomlist, endresult = getAreaRooms(areaid) or {}, {}

        -- obtain a room list for each of the room IDs we got
        local getRoomName = getRoomName
        for _, id in pairs(roomlist) do
            endresult[id] = getRoomName(id)
        end
        roomlist[#roomlist+1], roomlist[0] = roomlist[0], nil
        -- sort room IDs so we can display them in order
        table.sort(roomlist)

        local echoLink, format, fg, echo = echoLink, string.format, fg, cecho
        -- now display something half-decent looking
        cecho(format("&lt;%s&gt;List of all rooms in &lt;%s&gt;%s&lt;%s&gt; (areaID &lt;%s&gt;%s&lt;%s&gt; - &lt;%s&gt;%d&lt;%s&gt; rooms):\n",
            listcolor, othercolor, msg, listcolor, othercolor, areaid, listcolor, othercolor, #roomlist, listcolor))
        -- use pairs, as we can have gaps between room IDs
        for _, roomid in pairs(roomlist) do
            local roomname = endresult[roomid]
            cechoLink(format("&lt;%s&gt;%7s",othercolor,roomid), 'map.speedwalk('..roomid..')',
                format("Go to %s (%s)", roomid, tostring(roomname)), true)
            cecho(format("&lt;%s&gt;: &lt;%s&gt;%s&lt;%s&gt;.\n", listcolor, othercolor, roomname, listcolor))
        end
    elseif not areaid and #multiples &gt; 0 then
        local allareas, format = getAreaTable(), string.format
        local function countrooms(areaname)
            local areaid = allareas[areaname]
            local allrooms = getAreaRooms(areaid) or {}
            local areac = (#allrooms or 0) + (allrooms[0] and 1 or 0)
            return areac
        end
        map.echo("For which area would you want to list rooms for?")
        for _, areaname in ipairs(multiples) do
            echo("  ")
            setUnderline(true)
            cechoLink(format("&lt;%s&gt;%-40s (%d rooms)", othercolor, areaname, countrooms(areaname)),
                'map.echoRoomList("'..areaname..'", true)', "Click to view the room list for "..areaname, true)
            setUnderline(false)
            echo("\n")
        end
    else
        map.echo(string.format("Don't know of any area named '%s'.", areaname),false,true)
    end
    resetFormat()
end

function map.echoAreaList()
    local totalroomcount = 0
    local rlist = getAreaTableSwap()
    local listcolor, othercolor = "DarkSlateGrey","LightSlateGray"

    -- count the amount of rooms in an area, taking care to count the room in the 0th
    -- index as well if there is one
    -- saves the total room count on the side as well
    local function countrooms(areaid)
        local allrooms = getAreaRooms(areaid) or {}
        local areac = (#allrooms or 0) + (allrooms[0] and 1 or 0)
        totalroomcount = totalroomcount + areac
        return areac
    end

    local getAreaRooms, cecho, fg, echoLink = getAreaRooms, cecho, fg, echoLink
    cecho(string.format("&lt;%s&gt;List of all areas we know of (click to view room list):\n",listcolor))
    for id = 1,table.maxn(rlist) do
        if rlist[id] then
            cecho(string.format("&lt;%s&gt;%7d ", othercolor, id))
            fg(listcolor)
            echoLink(string.format("%-40s (%d rooms)",rlist[id],countrooms(id)), 'map.echoRoomList("'..id..'", true)',
                "View the room list for "..rlist[id], true)
            echo("\n")
        end
    end
    cecho(string.format("&lt;%s&gt;Total amount of rooms in this map: %s\n", listcolor, totalroomcount))
end

function map.search_timer_check()
    if find_prompt then
        map.echo("Prompt not auto-detected, use 'map prompt' to set a prompt pattern.",false,true)
        find_prompt = false
    end
end

function map.find_prompt()
    find_prompt = true
    map.echo("Searching for prompt.")
    send("\n", false)
    tempTimer(5, "map.search_timer_check()")
end

function map.make_prompt_pattern(str)
    if not str:starts("^") then str = "^"..str end
    map.save.prompt_pattern[map.character] = str
    find_prompt = false
    table.save(profilePath .. "/map downloads/map_save.dat",map.save)
    map.echo("Prompt pattern set: " .. str)
end

function map.make_ignore_pattern(str)
    map.save.ignore_patterns = map.save.ignore_patterns or {}
    if not table.contains(map.save.ignore_patterns,str) then
        table.insert(map.save.ignore_patterns,str)
        map.echo("Ignore pattern added: " .. str)
    else
        table.remove(map.save.ignore_patterns, table.index_of(map.save.ignore_patterns, str))
        map.echo("Ignore pattern removed: " .. str)
    end
    table.save(profilePath .. "/map downloads/map_save.dat",map.save)
end

function map.make_move_method(str)
    map.save.move_methods = map.save.move_methods or {}
    if not table.contains(map.save.move_methods,str) then
        table.insert(map.save.move_methods,str)
        map.echo("Move method added: " .. str)
    else
        table.remove(map.save.move_methods, table.index_of(map.save.move_methods, str))
        map.echo("Move method removed: " .. str)
    end
    table.save(profilePath .. "/map downloads/map_save.dat",map.save)
end

local function grab_line()
    table.insert(lines,line)
    if map.save.prompt_pattern[map.character] and string.match(line, map.save.prompt_pattern[map.character]) then
        if map.prompt.exits and map.prompt.exits ~= "" then
            raiseEvent("onNewRoom")
        end
        print_wait_echoes()
        map.echo("Prompt captured",true)
    end
    if find_prompt then
        for k,v in ipairs(map.configs.prompt_test_patterns) do
            if string.match(line,v) then
                map.save.prompt_pattern[map.character] = v
                table.save(profilePath .. "/map downloads/map_save.dat",map.save)
                find_prompt = false
                map.echo("Prompt found")
                break
            end
        end
    end
end

local function name_search()
    local room_name
    if map.configs.custom_name_search then
        room_name = mudlet.custom_name_search(lines)
    else
        local line_count = #lines + 1
        local cur_line, last_line
        local prompt_pattern = map.save.prompt_pattern[map.character]
        if not prompt_pattern then return end
        while not room_name do
            line_count = line_count - 1
            if not lines[line_count] then break end
            cur_line = lines[line_count]
            for k,v in ipairs(map.save.ignore_patterns) do
                cur_line = string.trim(string.gsub(cur_line,v,""))
            end
            if string.find(cur_line,prompt_pattern) then
                cur_line = string.trim(string.gsub(cur_line,prompt_pattern,""))
                if cur_line ~= "" then
                    room_name = cur_line
                else
                    room_name = last_line
                end
            elseif line_count == 1 then
                cur_line = string.trim(cur_line)
                if cur_line ~= "" then
                    room_name = cur_line
                else
                    room_name = last_line
                end
            elseif not string.match(cur_line,"^%s*$") then
                last_line = cur_line
            end
        end
        lines = {}
        room_name = room_name:sub(1,100)
    end
    return room_name
end

local function handle_exits(exits)
    local room = map.prompt.room or name_search()
    room = map.sanitizeRoomName(room)
    exits = map.prompt.exits or exits
    exits = string.lower(exits)
    exits = string.gsub(exits,"%a+", exitmap)
    if room then
        map.echo("Room Name Captured: " .. room, true)
        room = string.trim(room)
        capture_room_info(room, exits)
        map.prompt.room = nil
        map.prompt.exits = nil
    end
end

local continue_walk, timerID
continue_walk = function(new_room)
    if not walking then return end
    -- calculate wait time until next command, with randomness
    local wait = map.configs.speedwalk_delay or 0
    if wait &gt; 0 and map.configs.speedwalk_random then
        wait = wait * (1 + math.random(0,100)/100)
    end
    -- if no wait after new room, move immediately
    if new_room and map.configs.speedwalk_wait and wait == 0 then
        new_room = false
    end
    -- send command if we don't need to wait
    if not new_room then
        --handle script exits
        if string.starts(map.walkDirs[1], "script:") then
          map.walkDirs[1] = string.gsub(map.walkDirs[1], "script:", "")
          loadstring(table.remove(map.walkDirs,1))()
        else
          send(table.remove(map.walkDirs,1))
        end
        -- check to see if we are done
        if #map.walkDirs == 0 then
            walking = false
            speedWalkPath, speedWalkWeight = {}, {}
            raiseEvent("sysSpeedwalkFinished")
        end
    end
    -- make tempTimer to send next command if necessary
    if walking and (not map.configs.speedwalk_wait or (map.configs.speedwalk_wait and wait &gt; 0)) then
        if timerID then killTimer(timerID) end
        timerID = tempTimer(wait, function() continue_walk() end)
    end
end

function map.speedwalk(roomID, walkPath, walkDirs)
    roomID = roomID or speedWalkPath[#speedWalkPath]
    getPath(map.currentRoom, roomID)
    walkPath = speedWalkPath
    walkDirs = speedWalkDir
    if #speedWalkPath == 0 then
        map.echo("No path to chosen room found.",false,true)
        return
    end
    table.insert(walkPath, 1, map.currentRoom)
    -- go through dirs to find doors that need opened, etc
    -- add in necessary extra commands to walkDirs table
    local k = 1
    repeat
        local id, dir = walkPath[k], walkDirs[k]
        if exitmap[dir] or short[dir] then
            local door = check_doors(id, exitmap[dir] or dir)
            local status = door and door[dir]
            if status and status &gt; 1 then
                -- if locked, unlock door
                if status == 3 then
                    table.insert(walkPath,k,id)
                    table.insert(walkDirs,k,"unlock " .. (exitmap[dir] or dir))
                    k = k + 1
                end
                -- if closed, open door
                table.insert(walkPath,k,id)
                table.insert(walkDirs,k,"open " .. (exitmap[dir] or dir))
                k = k + 1
            end
        end
        k = k + 1
    until k &gt; #walkDirs
    if map.configs.use_translation then
        for k, v in ipairs(walkDirs) do
            walkDirs[k] = map.configs.lang_dirs[v] or v
        end
    end
    -- perform walk
    walking = true
    if map.configs.speedwalk_wait or map.configs.speedwalk_delay &gt; 0 then
        map.walkDirs = walkDirs
        continue_walk()
    else
        for _,dir in ipairs(walkDirs) do
           if string.starts(dir, "script:") then
              dir = string.gsub(dir, "script:", "")
              loadstring(dir)()
            else
              send(dir)
           end
        end
        walking = false
        raiseEvent("sysSpeedwalkFinished")
    end
end

function doSpeedWalk()
    if #speedWalkPath ~= 0 then
        raiseEvent("sysSpeedwalkStarted")
        map.speedwalk(nil, speedWalkPath, speedWalkDir)
    else
        map.echo("No path to chosen room found.",false,true)
    end
end

function map.pauseSpeedwalk()
    if #speedWalkDir ~= 0 then
        walking = false
        raiseEvent("sysSpeedwalkPaused")
        map.echo("Speedwalking paused.")
    else
        map.echo("Not currently speedwalking.")
    end
end

function map.resumeSpeedwalk(delay)
    if #speedWalkDir ~= 0 then
        map.find_me(nil, nil, nil, true)
        raiseEvent("sysSpeedwalkResumed")
        map.echo("Speedwalking resumed.")
        tempTimer(delay or 0, function() map.speedwalk(nil, speedWalkPath, speedWalkDir) end)
    else
        map.echo("Not currently speedwalking.")
    end
end

function map.stopSpeedwalk()
    if #speedWalkDir ~= 0 then
        walking = false
        map.walkDirs, speedWalkDir, speedWalkPath, speedWalkWeight = {}, {}, {}, {}
        raiseEvent("sysSpeedwalkStopped")
        map.echo("Speedwalking stopped.")
    else
        map.echo("Not currently speedwalking.")
    end
end

function map.toggleSpeedwalk(what)
    assert(what == nil or what == "on" or what == "off", "map.toggleSpeedwalk wants 'on', 'off' or nothing as an argument")

    if what == "on" or (what == nil and walking) then
        map.pauseSpeedwalk()
    elseif what == "off" or (what == nil and not walking) then
        map.resumeSpeedwalk()
    end
end

local function check_version()
    downloading = false
    local path = profilePath .. "/map downloads/versions.lua"
    local versions = {}
    table.load(path, versions)
    local pos = table.index_of(versions, map.version) or 0
    if pos ~= #versions then
        enableAlias("Map Update Alias")
        if not map.silentUpdate then
          map.echo(string.format("The Generic Mapping Script is currently &lt;red&gt;%d&lt;reset&gt; versions behind.",#versions - pos))
          map.echo("To update now, please type: &lt;yellow&gt;map update&lt;reset&gt;")
        else
          map.updateVersion()
        end
    end
    map.update_timer = tempTimer(3600, [[map.checkVersion()]])
end

function map.checkVersion()
    if #getRooms() &gt; 0 then
      map.silentUpdate = false
    end    
    if map.update_timer then
        killTimer(map.update_timer)
        map.update_timer = nil
    end
    if not map.update_waiting and map.configs.download_path ~= "" then
        local path, file = profilePath .. "/map downloads", "/versions.lua"
        downloading = true
        downloadFile(path .. file, map.configs.download_path .. file)
        map.update_waiting = true
    end
end

local function update_version()
    downloading = false
    local path = profilePath .. "/map downloads/generic_mapper.xml"
    disableAlias("Map Update Alias")
    map.updatingMapper = true
    uninstallPackage("generic_mapper")
    installPackage(path)
    map.updatingMapper = nil
    if not map.silentUpdate then
      map.echo("Generic Mapping Script updated successfully.")
    end
end

function map.updateVersion()
    local path, file = profilePath .. "/map downloads", "/generic_mapper.xml"
    downloading = true
    downloadFile(path .. file, map.configs.download_path .. file)
end

function map.showMap(shown)
    local configs = map.configs.map_window
    shown = shown or not configs.shown
    map.configs.map_window.shown = shown
    map.silentUpdate = false
    local x, y, w, h, origin = configs.x, configs.y, configs.w, configs.h, configs.origin
    if string.find(origin,"bottom") then
        if y == 0 or y == "0%" then
            y = h
        end
        if type(y) == "number" then
            y = -y
        else
            y = "-"..y
        end
    end
    if string.find(origin,"right") then
        if x == 0 or x == "0%" then
            x = w
        end
        if type(x) == "number" then
            x = -x
        else
            x = "-"..x
        end
    end
    local mapper = Geyser.Mapper:new({name = "my_mapper", x = x, y = y, w = w, h = h})
    mapper:resize(w,h)
    mapper:move(x,y)
    if shown then
        mapper:show()
    else
        mapper:hide()
    end
end

-- some games embed an ASCII map on the same line, which messes up the room room name
-- extract the longest continuous piece of text from the line to be the room name
function map.sanitizeRoomName(roomtitle)
  assert(type(roomtitle) == "string", "map.sanitizeRoomName: bad argument #1 expected room title, got "..type(roomtitle).."!")
  if not roomtitle:match("  ") then return roomtitle end

  local parts = roomtitle:split("  ")
  table.sort(parts, function(a,b) return #a &lt; #b end)
  local longestpart = parts[#parts]

  local trimmed = utf8.match(longestpart, "[%w ]+"):trim()
  return trimmed
end

function map.eventHandler(event, ...)
    if event == "onNewRoom" then
        handle_exits(arg[1])
        if walking and map.configs.speedwalk_wait then
            continue_walk(true)
        end
    elseif event == "onPrompt" then
        if map.prompt.exits and map.prompt.exits ~= "" then
            raiseEvent("onNewRoom")
        end
        print_wait_echoes()
        map.echo("Prompt Captured",true)
    elseif event == "onMoveFail" then
        map.echo("onMoveFail",true)
        table.remove(move_queue,1)
    elseif event == "onVisionFail" then
        map.echo("onVisionFail",true)
        vision_fail = true
        capture_room_info()
    elseif event == "onRandomMove" then
        map.echo("onRandomMove",true)
        random_move = true
        move_queue = {}
    elseif event == "onForcedMove" then
        map.echo("onForcedMove",true)
        capture_move_cmd(arg[1],arg[2]=="true")
    elseif event == "onNewLine" then
        grab_line()
    elseif event == "sysDataSendRequest" then
        capture_move_cmd(arg[1])
        -- check to prevent multiple version checks in a row without user intervention
        if map.update_waiting and map.update_timer then
            map.update_waiting = nil
        -- check to ensure version check cycle is started
        elseif not map.update_waiting and not map.update_timer then
            map.checkVersion()
        end
    elseif event == "sysDownloadDone" and downloading then
        local file = arg[1]
        if string.ends(file,"/map.dat") then
            loadMap(file)
            downloading = false
            map.echo("Map File Loaded.")
        elseif string.ends(file,"/versions.lua") then
            check_version()
        elseif string.ends(file,"/generic_mapper.xml") then
            update_version()
        end
    elseif event == "sysDownloadError" and downloading then
        local file = arg[1]
        if string.ends(file,"/versions.lua") and mudlet.translations.interfacelanguage == "zh_CN" then
            -- update to the current download path for chinese user
            if map.configs.download_path == "https://raw.githubusercontent.com/Mudlet/Mudlet/development/src/mudlet-lua/lua/generic-mapper" then
                map.configs.download_path = "https://gitee.com/mudlet/Mudlet/raw/development/src/mudlet-lua/lua/generic-mapper"
                map.checkVersion()
            end
        end
    elseif event == "sysLoadEvent" or event == "sysInstall" then
        config()
    elseif event == "mapOpenEvent" then
        if not help_shown and not map.save.prompt_pattern[map.character or ""] then
            map.find_prompt()
            send(map.configs.lang_dirs['look'], true)
            tempTimer(3, function() map.show_help("quick_start"); help_shown = true end)
        end
    elseif event == "mapStop" then
        map.set("mapping", false)
        walking = false
        map.echo("Mapping and speedwalking stopped.")
    elseif event == "sysManualLocationSetEvent" then
      set_room(arg[1])
    elseif event == "sysUninstallPackage" and not map.updatingMapper and arg[1] == "generic_mapper" then
        for _,id in ipairs(map.registeredEvents) do
            killAnonymousEventHandler(id)
        end
    end
end

map.registeredEvents = {
registerAnonymousEventHandler("sysDownloadDone", "map.eventHandler"),
registerAnonymousEventHandler("sysDownloadError", "map.eventHandler"),
registerAnonymousEventHandler("sysLoadEvent", "map.eventHandler"),
registerAnonymousEventHandler("sysConnectionEvent", "map.eventHandler"),
registerAnonymousEventHandler("sysInstall", "map.eventHandler"),
registerAnonymousEventHandler("sysDataSendRequest", "map.eventHandler"),
registerAnonymousEventHandler("onMoveFail", "map.eventHandler"),
registerAnonymousEventHandler("onVisionFail", "map.eventHandler"),
registerAnonymousEventHandler("onRandomMove", "map.eventHandler"),
registerAnonymousEventHandler("onForcedMove", "map.eventHandler"),
registerAnonymousEventHandler("onNewRoom", "map.eventHandler"),
registerAnonymousEventHandler("onNewLine", "map.eventHandler"),
registerAnonymousEventHandler("mapOpenEvent", "map.eventHandler"),
registerAnonymousEventHandler("mapStop", "map.eventHandler"),
registerAnonymousEventHandler("onPrompt", "map.eventHandler"),
registerAnonymousEventHandler("sysManualLocationSetEvent", "map.eventHandler"),
registerAnonymousEventHandler("sysUninstallPackage", "map.eventHandler")
}


function map.echon(what)
  moveCursorEnd("main") if getCurrentLine() ~= "" then echo"\n" end
  decho("&lt;112,229,0&gt;(&lt;73,149,0&gt;mapper&lt;112,229,0&gt;): &lt;255,255,255&gt;")
  cecho(tostring(what))
end

function map.roomexists(num)
  if not num then return false end
  if roomExists then return roomExists(num) end

  local s,m = pcall(getRoomArea, tonumber(num))
  return (s and true or false)
end

-- translates n to north and so forth
-- should incorporate generic_mappers exit_map, stub_map
local tempDir = {
    n = "north",
    e = "east",
    s = "south",
    w = "west",
    ne = "northeast",
    se = "southeast",
    sw = "southwest",
    nw = "northwest",
    u = "up",
    d = "down",
    i = "in",
    o = "out",
    ["in"] = "in"
}
local anytolongmap = {}
for s, l in pairs(tempDir) do anytolongmap[l] = l; anytolongmap[s] = l end

function map.anytolong(exit)

  return anytolongmap[exit]
end

function map.anytoshort(exit)
  local t = {
    n = "north",
    e = "east",
    s = "south",
    w = "west",
    ne = "northeast",
    se = "southeast",
    sw = "southwest",
    nw = "northwest",
    u = "up",
    d = "down",
    ["in"] = "in",
    out = "out"
  }
  local rt = {}
  for s,l in pairs(t) do
    rt[l] = s; rt[s] = s
  end

  return rt[exit]
end


function map.ranytolong(exit)
  local t = {
    n = "south",
    north = "south",
    e = "west",
    east = "west",
    s = "north",
    south = "north",
    w = "east",
    west = "east",
    ne = "southwest",
    northeast = "southwest",
    se = "northwest",
    southeast = "northwest",
    sw = "northeast",
    southwest = "northeast",
    nw = "southeast",
    northwest = "southeast",
    u = "down",
    up = "down",
    d = "up",
    down = "up",
    i = "out",
    ["in"] = "out",
    o = "in",
    out = "in"
  }

  return t[exit]
end

-- returns nil or the room number relative to this one
function map.relativeroom(from, dir)
  if not map.roomexists(from) then return end

  local exits = getRoomExits(tonumber(from))
  return exits[map.anytolong(dir)]
end

function map.roomFind(query, lines)
  if query:ends('.') then
    query = query:sub(1, -2)
  end
  local defaultLine = 30 -- this could this to a setting instead of a static number
  local result = map.searchRoom(query)
  if lines == 'all' then
    lines = table.size(result)
  end
  lines = (lines ~= '') and tonumber(lines) or defaultLine

  --create a new table (roomsTable) with keys and add areas to the table
  local roomsTable = {}
  for k, v in pairs(result) do
    local a = getRoomArea(k) or "unknown"
    roomsTable[#roomsTable + 1] = {num = k, area = a, name = v}
  end
  --sort roomsTable by area name
  table.sort(
    roomsTable,
    function(a, b)
      return a.area &lt; b.area
    end
  )
  --start displaying info
  if type(result) == "string" or not next(result) then
    cecho("&lt;grey&gt;You have no recollection of any room with that name.")
    return
  end
  cecho("&lt;DarkSlateGrey&gt;You know the following relevant rooms:\n")

  local i = 1
  if not tonumber(select(2, next(result))) then
    cecho(string.format("&lt;white&gt; %-10s%-40s%s\n", "ROOM ID", "ROOM NAME", "ROOM AREA"))
    for _, v in ipairs(roomsTable) do
      if i &gt; lines then
        break
      end
      roomid = tonumber(v.num)
      roomname = v.name
      roomarea = v.area
      cechoLink(
        string.format("&lt;cyan&gt; %-10s", roomid),
        'map.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho(string.format("&lt;LightSlateGray&gt;%-40s", string.sub(tostring(roomname), 1, 39)))
      cechoLink(
        string.format(
          "&lt;DarkSlateGrey&gt;%s&lt;DarkSlateGrey&gt;\n", getRoomAreaName(getRoomArea(roomid))
        ),
        [[map.echoPath(map.currentRoom, ]] .. roomid .. [[)]],
        "Display directions from here to " .. roomname,
        true
      )
      resetFormat()
      i = i + 1
    end
  else
    -- new style
    --- not sure what this new area code is but it doesn't seem to fire
    for roomname, roomid in pairs(result) do
      roomid = tonumber(roomid)
      cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
      cechoLink(
        "&lt;cyan&gt;" .. roomid,
        'map.gotoRoom(' .. roomid .. ')',
        string.format("Go to %s (%s)", roomid, tostring(roomname)),
        true
      )
      cecho(
        string.format(
          "&lt;DarkSlateGrey&gt;) in &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt;.", getRoomAreaName(getRoomArea(roomid))
        )
      )
      fg("DarkSlateGrey")
      echoLink(
        " &gt; Show path\n",
        [[map.echoPath(map.currentRoom, ]] .. roomid .. [[)]],
        "Display directions from here to " .. roomname,
        true
      )
      resetFormat()
    end
  end
  if table.size(result) &lt;= lines then
    cecho(string.format("&lt;DarkSlateGrey&gt;%d rooms found.\n", table.size(result)))
  else
    lastRoomQuery = query
    cechoLink(
      string.format(
        "&lt;DarkSlateGrey&gt;%d of %d rooms shown. Click to see all rooms.\n", lines, table.size(result)
      ),
      'map.roomFind(lastRoomQuery, "all")',
      string.format("Show all %d rooms.", table.size(result)),
      true
    )
  end
end

function map.searchRoom(what)
  local result = searchRoom(what)
  local realResult = {}
  for key, value in pairs(type(result) == "table" and result or {}) do
      -- both ways, because searchRoom can return either id-room name or the reverse
      if type(key) == "string" then
        realResult[key:ends(" (road)") and key:sub(1, -8) or key] = value
      else
        realResult[key] = value:ends(" (road)") and value:sub(1, -8) or value
      end
  end
  result = realResult
  return result
end


-- Lock Area

map.locked = map.locked or {}
map.lastLockSearch = map.lastLockSearch or nil

function map.doLockArea(search)
	local areaList
	if search ~= nil then
		local r = rex.new(string.lower(search))
		map.lastLockSearch = search
		for name, id in pairs(getAreaTable()) do
			if r:match(string.lower(name)) then
				areaList = areaList or {}
				areaList[name] = id
			end
		end
		if areaList == nil then
			map.echo("'" .. search .. "' did not match any known areas!")
			return
		end
	else
		map.lastLockSearch = nil
		areaList = getAreaTable()
	end

	for name, id in pairs(areaList) do
    map.echon(string.format("%-40s %s", name, " "))
--		map.echon(name .. string.rep(" ", 40 - string.len(name)))
		if not map.locked[id] then
			setFgColor(0, 200, 0)
			setUnderline(true)
			echoLink("Lock!", [[map.lockArea( ']] .. name:gsub("'", [[\']]) .. [[', true )]], "Click to lock area '" .. name .. "'", true)
		else
			setFgColor(200, 0, 0)
			setUnderline(true)
			echoLink("Unlock!", [[map.lockArea( ']] .. name:gsub("'", [[\']]) .. [[', false )]], "Click to unlock area '" .. name .. "'", true)
		end
	end

	if not search then
		echo"\n\n" map.echo("Use &lt;green&gt;arealock &lt;area&gt;&lt;white&gt; to filter areas.")
	end
end

function map.lockArea(name, lock, dontreshow)
	local areas = getAreaTable()
	local rooms = getAreaRooms(areas[name]) or {}
    local lockRoom = lockRoom
    local count = 0
	for _, room in pairs(rooms) do
		lockRoom(room, lock)
        count = count + 1
	end

	map.locked[areas[name]] = lock and true or nil
	map.echo(string.format("Area '%s' %slocked! All %s room%s within it.", name, (lock and '' or 'un'), count, (count == 1 and '' or 's')))

	if not dontreshow then map.doLockArea(map.lastLockSearch) end
end


function map.roomLook(input)
  -- we can do a report with a number

  local function handle_number(num)
    -- compile all available data
    if not map.roomexists(num) then
      map.echo(num .. " doesn't seem to exist.")
      return
    end
    local s, areanum = pcall(getRoomArea, num)
    if not s then
      map.echo(areanum);
      return ;
    end
    local exits = getRoomExits(num)
    local name = getRoomName(num)
    local islocked = roomLocked(num)
    local weight = (getRoomWeight(num) and getRoomWeight(num) or "?")
    -- getRoomWeight is buggy in one of the versions, is actually linked to setRoomWeight and thus returns nil
    local exitweights = (getExitWeights and getExitWeights(num) or {})
    local coords = {getRoomCoordinates(num)}
    local specexits = getSpecialExits(num)
    local env = getRoomEnv(num)
    -- generic_mapper doesn't have support for environments like IRE_mapper
    local envname = (map.envidsr and map.envidsr[env]) or "?"
    -- generate a report
    map.echo(
      string.format(
        "Room: %s #: %d area: %s (%d)", name, num, getRoomAreaName(areanum), areanum
      )
    )
    map.echo(
      string.format(
        "Coordinates: x:%d, y:%d, z:%d, locked: %s, weight: %s",
        coords[1],
        coords[2],
        coords[3],
        (islocked and "yes" or "no"),
        tostring(weight)
      )
    )
    map.echo(
      string.format(
        "Environment: %s (%d)%s",
        tostring(envname),
        env,
        (getRoomUserData(num, "indoors") ~= '' and ", indoors" or '')
      )
    )
    map.echo(string.format("Exits (%d):", table.size(exits)))
    for exit, leadsto in pairs(exits) do
      echo(
        string.format(
          "  %s -&gt; %s (%d)%s%s\n",
          exit,
          getRoomName(leadsto),
          leadsto,
          (
            (getRoomArea(leadsto) or "?") == areanum and
            "" or
            " (in " ..
            (getRoomAreaName(getRoomArea(leadsto)) or "?") ..
            ")"
          ),
          (
            (not exitweights[map.anytoshort(exit)] or exitweights[map.anytoshort(exit)] == 0) and
            "" or
            " (weight: " ..
            exitweights[map.anytoshort(exit)] ..
            ")"
          )
        )
      )
    end
    -- display special exits if we got any
    if next(specexits) then
      map.echo(string.format("Special exits (%d):", table.size(specexits)))
      for leadsto, command in pairs(specexits) do
        if type(command) == "string" then
          echo(string.format("  %s -&gt; %s (%d)\n", command, getRoomName(leadsto), leadsto))
        else
          -- new format - exit name, command
          for cmd, locked in pairs(command) do
            if locked == '1' then
              cecho(
                string.format(
                  "&lt;DarkSlateGrey&gt;  %s -&gt; %s (%d) (locked)\n", cmd, getRoomName(leadsto), leadsto
                )
              )
            else
              echo(string.format("  %s -&gt; %s (%d)\n", cmd, getRoomName(leadsto), leadsto))
            end
          end
        end
      end
    end
    local message = "This room has the feature '%s'."
    for _, mapFeature in pairs(map.getRoomMapFeatures(num)) do
      map.echo(string.format(message, mapFeature))
    end
    -- actions we can do. This will be a short menu of sorts for actions
    map.echo("Stuff you can do:")
    echo("  ")
    echo("Clear all labels ")
    setUnderline(true)
    echoLink("(in area)", 'map.clearLabels(' .. areanum .. ')', '', true)
    setUnderline(false)
    echo(" ")
    setUnderline(true)
    echoLink(
      "(whole map)",
      [[
    if not map.clearinglabels then
      map.echo("Are you sure you want to clear all of your labels on this map? If yes, click the link again.")
      map.clearinglabels = true
    else
      map.clearLabels("map")
      map.clearinglabels = nil
    end
    ]],
      '',
      true
    )
    setUnderline(false)
    echo("\n")
  end

  -- see if we can do anything with the name

  local function handle_name(name)
    local result = map.searchRoom(name)
    if type(result) == "string" then
      cecho("&lt;grey&gt;You have no recollection of any room with that name.")
      return
    end
    -- if we got one result, then act on it
    if table.size(result) == 1 then
      if type(next(result)) == "number" then
        handle_number(next(result))
      else
        handle_number(select(2, next(result)))
      end
      return
    end
    -- if not, then ask the user to clarify which one would they want
    map.echo("Which room specifically would you like to look up?")
    if not select(2, next(result)) or not tonumber(select(2, next(result))) then
      for roomid, roomname in pairs(result) do
        roomid = tonumber(roomid)
        cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
        cechoLink(
          "&lt;cyan&gt;" .. roomid,
          'map.roomLook(' .. roomid .. ')',
          string.format("View room details for %s (%s)", roomid, tostring(roomname)),
          true
        )
        cecho(
          string.format(
            "&lt;DarkSlateGrey&gt;) in the &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt;.\n",
            getRoomAreaName(getRoomArea(roomid))
          )
        )
      end
    else
      for roomname, roomid in pairs(result) do
        roomid = tonumber(roomid)
        cecho(string.format("  &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt; (", tostring(roomname)))
        cechoLink(
          "&lt;cyan&gt;" .. roomid,
          'map.roomLook(' .. roomid .. ')',
          string.format("View room details for %s (%s)", roomid, tostring(roomname)),
          true
        )
        cecho(
          string.format(
            "&lt;DarkSlateGrey&gt;) in the &lt;LightSlateGray&gt;%s&lt;DarkSlateGrey&gt;.\n",
            getRoomAreaName(getRoomArea(roomid))
          )
        )
      end
    end
  end

  if not input then
    if not map.roomexists(map.currentRoom) then
      map.echo(map.currentRoom .. " doesn't seem to be mapped yet.")
      echo("\n")
      map.echo(string.format("version %s.", tostring(map.version)))
      return
    else
      input = map.currentRoom
    end
  end
  if tonumber(input) then
    handle_number(tonumber(input))
  else
    handle_name(input)
  end
  map.echo(string.format("version %s.", tostring(map.version)))
end


local function loadMapFeatures()
  local mapFeaturesString = getMapUserData("mapFeatures")
  local mapFeatures
  if mapFeaturesString and mapFeaturesString ~= "" then
    mapFeatures = yajl.to_value(mapFeaturesString)
  else
    mapFeatures = {}
  end
  return mapFeatures
end

local function saveMapFeatures(mapFeaturesToSave)
  local mapFeaturesString = yajl.to_string(mapFeaturesToSave)
  setMapUserData("mapFeatures", mapFeaturesString)
end

function map.createMapFeature(featureName, roomCharacter)
  if not featureName or featureName == "" then
    map.echo("Can't create an empty map feature.")
    return
  end
  if featureName:find("%d") then
    map.echo("Map feature names must not contain numbers.")
    return
  end
  roomCharacter = roomCharacter or ""
  if type(roomCharacter) ~= "string" then
    map.echo(
      "The new room character must be either a string or nil. " ..
      type(roomCharacter) ..
      " is not allowed."
    )
    return
  end
  local lowerFeatureName = featureName:lower()
  local mapFeatures = loadMapFeatures()
  if not mapFeatures[lowerFeatureName] then
    mapFeatures[lowerFeatureName] = roomCharacter
    saveMapFeatures(mapFeatures)
    map.echo(
      "Created map feature '" ..
      featureName ..
      "' with the room character '" ..
      roomCharacter ..
      "'."
    )
  else
    map.echo("A map feature with the name '" .. featureName .. "' already exists.")
    return
  end
  return true
end

function map.listMapFeatures()
  local mapFeatures = loadMapFeatures()
  map.echo("This map has the following features:")
  echo(string.format("    %-25s | %s\n", "feature name", "room character"))
  echo(string.format("    ---------------------------------------------\n"))
--  echo(string.format("    %s\n", string.rep("-", 45)))
  for featureName, roomCharacter in pairs(mapFeatures) do
    echo(string.format("    %-25s | %s\n", featureName, roomCharacter))
  end
  return true
end

function map.roomCreateMapFeature(featureName, roomId)
  -- checks for the feature name
  if not featureName then
    map.echo("Which feature would you like to create?")
    return
  end
  local lowerFeatureName = featureName:lower()
  local mapFeatures = loadMapFeatures()
  if not mapFeatures[lowerFeatureName] then
    map.echo(
      "A feature with name '" ..
      featureName ..
      "' does not exist. You need to use 'feature create' first."
    )
    return
  end
  -- checks for the room ID
  if not roomId then
    if not map.currentRoom then
      map.echo("Don't know where we are at the moment.")
      return
    end
    roomId = map.currentRoom
  else
    if type(roomId) ~= "number" then
      map.echo("Need a room ID as number for creating a map feature on a room.")
      return
    end
  end
  if not getRoomName(roomId) then
    map.echo("Room number '" .. roomId .. "' does not exist.")
    return
  end
  -- check if feature already exists
  if table.contains(map.getRoomMapFeatures(roomId), lowerFeatureName) then
    map.echo("Room '" .. roomId .. "' has already map feature '" .. featureName .. "'.")
    return
  end
  -- create map feature in room
  setRoomUserData(roomId, "feature-" .. lowerFeatureName, "true")
  map.echo(string.format("Map feature '%s' created in room number '%d'.", featureName, roomId))
  local featureRoomChar = mapFeatures[lowerFeatureName]
  if featureRoomChar ~= "" then
    setRoomChar(roomId, featureRoomChar)
    map.echo("The room now carries the room char '" .. featureRoomChar .. "'.")
  end
  return true
end

function map.roomDeleteMapFeature(featureName, roomId)
  -- checks for the feature name
  if not featureName then
    map.echo("Which feature would you like to delete?")
    return
  end
  local lowerFeatureName = featureName:lower()
  -- checks for the room ID
  if not roomId then
    if not map.currentRoom then
      map.echo("Don't know where we are at the moment.")
      return
    end
    roomId = map.currentroom
  else
    if type(roomId) ~= "number" then
      map.echo("Need a room ID as number for deleting a map feature from a room.")
      return
    end
  end
  if not getRoomName(roomId) then
    map.echo("Room number '" .. roomId .. "' does not exist.")
    return
  end
  -- check if feature exists
  local roomMapFeatures = map.getRoomMapFeatures(roomId)
  if not table.contains(roomMapFeatures, lowerFeatureName) then
    map.echo("Room '" .. roomId .. "' doesn't have map feature '" .. featureName .. "'.")
    return
  end
  -- delete map feature from room
  setRoomUserData(roomId, "feature-" .. lowerFeatureName, "")
  map.echo(string.format("Map feature '%s' deleted from room number '%d'.", featureName, roomId))
  -- now update room char if needed.
  -- first update current map features of this room
  roomMapFeatures = map.getRoomMapFeatures(roomId)
  local mapFeatures = loadMapFeatures()
  -- find out if we need to set a new room character
  if getRoomChar(roomId) == mapFeatures[lowerFeatureName] and getRoomChar(roomId) ~= "" then
    local index, otherRoomMapFeature
    -- find another usable room character
    repeat
      index, otherRoomMapFeature = next(roomMapFeatures, index)
    until not otherRoomMapFeature or mapFeatures[otherRoomMapFeature] ~= ""
    if otherRoomMapFeature then
      -- we found a usable room character, now set it
      local newRoomChar = mapFeatures[otherRoomMapFeature]
      setRoomChar(roomId, newRoomChar)
      map.echo("Using '" .. newRoomChar .. "' as new room character.")
    else
      -- we didn't find a usable room character, delete it.
      setRoomChar(roomId, "")
      map.echo("Deleted the current room character.")
    end
  end
  return true
end

function map.getRoomMapFeatures(roomId)
  -- checks for the room ID
  if not roomId then
    if not map.currentRoom then
      map.echo("Don't know where we are at the moment.")
      return
    end
    roomId = map.currentRoom
  else
    if type(roomId) ~= "number" then
      map.echo("Need a room ID as number for getting all map features of a room.")
      return
    end
  end
  if not getRoomName(roomId) then
    map.echo("Room number '" .. roomId .. "' does not exist.")
    return
  end
  local result = {}
  local mapFeatures = loadMapFeatures()
  for mapFeature in pairs(mapFeatures) do
    if getRoomUserData(roomId, "feature-" .. mapFeature) == "true" then
      result[#result + 1] = mapFeature
    end
  end
  return result
end

function map.deleteMapFeature(featureName)
  if not featureName or featureName == "" then
    map.echo("Which map feature would you like to delete?")
    return
  end
  local lowerFeatureName = featureName:lower()
  local mapFeatures = loadMapFeatures()
  if not mapFeatures[lowerFeatureName] then
    map.echo("Map feature '" .. featureName .. "' does not exist.")
    return
  end
  local roomsWithFeature = searchRoomUserData("feature-" .. lowerFeatureName, "true")
  for _, roomId in pairs(roomsWithFeature) do
    local deletionResult = map.roomDeleteMapFeature(lowerFeatureName, roomId)
    if not deletionResult then
      map.echo(
        "Something went wrong deleting the map feature '" ..
        featureName ..
        "' from all rooms. Deletion incomplete."
      )
      return
    end
  end
  mapFeatures[lowerFeatureName] = nil
  saveMapFeatures(mapFeatures)
  map.echo("Deleted map feature '" .. featureName .. "' from map.")
  return true
end

function map.getMapFeatures()
  return loadMapFeatures()
end


function map.echoPath(from, to)
  assert(tonumber(from) and tonumber(to), "map.echoPath: both from and to have to be room IDs")
  if getPath(from, to) then
    map.echo(
      "&lt;white&gt;Directions from &lt;yellow&gt;" ..
      string.upper(searchRoom(from)) ..
      " &lt;white&gt;to &lt;yellow&gt;" ..
      string.upper(searchRoom(to)) ..
      "&lt;white&gt;:"
    )
    map.echo(table.concat(speedWalkDir, ", "))
    return map.speedWalkDir
  else
    map.echo(
      "&lt;white&gt;I can't find a way from &lt;yellow&gt;" ..
      string.upper(searchRoom(from)) ..
      " &lt;white&gt;to &lt;yellow&gt;" ..
      string.upper(searchRoom(to)) ..
      "&lt;white&gt;"
    )
  end
end


function map.listSpecialExits(filter)
  local c = 0
  map.echo("Listing special exits...")
  for area, areaname in pairs(getAreaTableSwap()) do
    local rooms = getAreaRooms(area) or {}
    for i = 0, #rooms do
      local exits = getSpecialExits(rooms[i] or 0)
      if exits and next(exits) then
        for exit, cmd in pairs(exits) do
          if type(cmd) == "table" then
            cmd = next(cmd)
          end
          if cmd:match("^%d") then
            cmd = cmd:sub(2)
          end
          if not filter or cmd:lower():find(filter, 1, true) then
            if getRoomArea(exit) ~= area then
              cecho(
                string.format(
                  "&lt;dark_slate_grey&gt;%s &lt;LightSlateGray&gt;(%d, in %s)&lt;dark_slate_grey&gt; &lt;MediumSlateBlue&gt;-&gt; &lt;coral&gt;%s -&lt;MediumSlateBlue&gt;&gt;&lt;dark_slate_grey&gt; %s &lt;LightSlateGray&gt;(%d, in %s)\n",
                  getRoomName(rooms[i]),
                  rooms[i],
                  areaname,
                  cmd,
                  getRoomName(exit),
                  exit,
                  getRoomAreaName(getRoomArea(exit)) or '?'
                )
              )
            else
              cecho(
                string.format(
                  "&lt;dark_slate_grey&gt;%s &lt;LightSlateGray&gt;(%d)&lt;dark_slate_grey&gt; &lt;MediumSlateBlue&gt;-&gt; &lt;coral&gt;%s &lt;MediumSlateBlue&gt;-&gt;&lt;dark_slate_grey&gt; %s &lt;LightSlateGray&gt;(%d)&lt;dark_slate_grey&gt; in %s\n",
                  getRoomName(rooms[i]),
                  rooms[i],
                  cmd,
                  getRoomName(exit),
                  exit,
                  areaname
                )
              )
            end
            c = c + 1
          end
        end
      end
    end
  end
  map.echo(
    string.format(
      "%d exits listed%s.", c, (not filter and '' or ", with for the filter '" .. filter .. "'")
    )
  )
end

function map.delSpecialExits(filter)
  local c = 0
  for area, areaname in pairs(getAreaTableSwap()) do
    local rooms = getAreaRooms(area) or {}
    for i = 0, #rooms do
      local exits = getSpecialExits(rooms[i] or 0)
      if exits and next(exits) then
        for exit, cmd in pairs(exits) do
          if type(cmd) == "table" then
            cmd = next(cmd)
          end
          if cmd:match("^%d") then
            cmd = cmd:sub(2)
          end
          if not filter or cmd:lower():find(filter, 1, true) then
            local rid, action
            local originalExits = {}
            local e = getSpecialExits(rooms[i])
            for t, n in pairs(e) do
              rid = tonumber(t)
              for a, l in pairs(n) do
                action = tostring(a)
              end
              if not action:find(filter, 1, true) then
                originalExits[rid] = action
              end
            end
            clearSpecialExits(rooms[i])
            for rid, act in pairs(originalExits) do
              addSpecialExit(rooms[i], tonumber(rid), tostring(act))
            end
            c = c + 1
          end
        end
      end
    end
  end
  map.echo(
    string.format(
      "%d exits deleted%s.", c, (not filter and '' or ", with for the filter '" .. filter .. "'")
    )
  )
end


do
local oldsetExit = setExit

local exitmap = {
  n = 1,
  north = 1,
  ne = 2,
  northeast = 2,
  nw = 3,
  northwest = 3,
  e = 4,
  east = 4,
  w = 5,
  west = 5,
  s = 6,
  south = 6,
  se = 7,
  southeast = 7,
  sw = 8,
  southwest = 8,
  u = 9,
  up = 9,
  d = 10,
  down = 10,
  ["in"] = 11,
  out = 12
}

function map.setExit(from, to, direction)
  if type(direction) == "string" and not exitmap[direction] then return false end

  return oldsetExit(from, to, type(direction) == "string" and exitmap[direction] or direction)
end
end


function map.deleteArea(name, exact)
  local id, fname, ma = map.findAreaID(name, exact)
  if id then
    map.doareadelete(id)
  elseif next(ma) then
    map.echo("Which one of these specifically would you like to delete?")
    fg("DimGrey")
    for _, name in ipairs(ma) do
      echo("  ")
      setUnderline(true)
      echoLink(name, [[map.deleteArea("]] .. name .. [[", true)]], "Delete " .. name, true)
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
  else
    map.echo("Don't know of that area.")
  end
end

-- the function actually doing area deletion

function map.doareadelete(areaid)
  map.deletingarea = {}
  local t = map.deletingarea
  local rooms = getAreaRooms(areaid)
  t.roomcount = table.size(rooms)
  t.roombatches = {}
  t.currentbatch = 1
  t.areaid = areaid
  t.areaname = getAreaTableSwap()[areaid]
  -- delete the area right away if there's nothing in it
  if t.roomcount == 0 then
    deleteArea(t.areaid)
    map.echo("All done! The area was already gone/empty.")
  end
  local rooms_per_batch = 100
  -- split up rooms into tables of tables, to be deleted in batches so
  -- that our print statements in between get a chance to be processed
  for batch = 1, t.roomcount, 100 do
    t.roombatches[#t.roombatches + 1] = {}
    local onebatch = t.roombatches[#t.roombatches]
    for inbatch = 1, 100 do
      onebatch[#onebatch + 1] = rooms[batch + inbatch]
    end
  end

  function map.deletenextbatch()
    local t = map.deletingarea
    if not t then
      return
    end
    local currentbatch = t.roombatches[t.currentbatchi]
    if currentbatch == nil then
      deleteArea(t.areaid)
      map.echo("All done! Deleted the '" .. t.areaname .. "' area.")
      map.deletingarea = nil
      centerview(map.currentRoom)
      return
    end
    local deleteRoom = deleteRoom
    for i = 1, #currentbatch do
      deleteRoom(currentbatch[i])
    end
    map.echo(
      string.format(
        "Deleted %d batch%s so far, %d left to go - %.2f%% done out of %d needed",
        t.currentbatchi,
        (t.currentbatchi == 1 and '' or 'es'),
        #t.roombatches - t.currentbatchi,
        (100 / #t.roombatches) * t.currentbatchi,
        #t.roombatches
      )
    )
    t.currentbatchi = t.currentbatchi + 1
    tempTimer(0.010, map.deletenextbatch)
  end

  t.currentbatchi = 1
  map.echo("Prepped room batches, starting deletion...")
  tempTimer(0.010, map.deletenextbatch)
end

function map.renameArea(name, exact)
  if not (map.currentroom or getRoomArea(map.currentRoom)) then
    map.echo("Don't know what area are we in at the moment, to rename it.")
  else
    map.echo(
      string.format(
        "Renamed %s to %s (%d).",
        getRoomAreaName(getRoomArea(map.currentRoom)),
        name,
        getRoomArea(map.currentRoom)
      )
    )
    setAreaName(getRoomArea(map.currentRoom), name)			
    centerview(map.currentRoom)
  end
end

function map.roomArea(otherroom, name, exact)
  local id, fname, ma
  if tonumber(name) then
    id = tonumber(name);
    fname = getAreaTableSwap()[id]
  else
    id, fname, ma = map.findAreaID(name, exact)
  end
  if fname == nil then
    map.echo("Area unknown, can't move room.")
    return
  end
  if otherroom ~= "" and not map.roomexists(otherroom) then
    map.echo("Room id " .. otherroom .. " doesn't seem to exist.")
    return
  elseif otherroom == "" and not map.roomexists(map.currentRoom) then
    map.echo("Don't know where we are at the moment.")
    return
  end
  otherroom = otherroom ~= "" and otherroom or map.currentRoom
  if id then
    setRoomArea(otherroom, id)
    map.echo(
      string.format(
        "Moved %s to %s (%d).",
        (getRoomName(otherroom) ~= "" and getRoomName(otherroom) or "''"),
        fname,
        id
      )
    )
    centerview(otherroom)
  elseif next(ma) then
    map.echo("Into which area exactly would you like to move the room?")
    fg("DimGrey")
    for _, name in ipairs(ma) do
      echo("  ")
      setUnderline(true)
      echoLink(
        name, [[map.roomArea('', "]] .. name .. [[", true)]], "Move the room to " .. name, true
      )
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
  else
    map.echo("Don't know of that area.")
  end
end


function map.clearLabels(areaid)
  local function clearlabels(areaid)
    local t = getMapLabels(areaid)
    if type(t) ~= "table" then
      return
    end
    for labelid, _ in pairs(t) do
      deleteMapLabel(areaid, labelid)
    end
  end

  if areaid == "map" then
    for areaid in pairs(getAreaTableSwap()) do
      clearlabels(areaid)
    end
    map.echo("Cleared labels in all of the map.")
    return
  end
  clearlabels(areaid)
  map.echo(string.format("Cleared all labels in '%s'.", map.getAreaTableSwap()[areaid]))
end

function map.roomLabel(input)
  if not createMapLabel then
    map.echo(
      "Your Mudlet doesn't support createMapLabel() yet - please update to 2.0-test3 or better."
    )
    return
  end
  local tk = input:split(" ")
  local room, fg, bg, message = map.currentRoom, "yellow", "red", "Some room label"
  -- input always have to be something, so tk[1] at least always exists
  if tonumber(tk[1]) then
    room = tonumber(table.remove(tk, 1))
    -- remove the number, so we're left with the colors or msg
  end
  -- next: is this a foreground color?
  if tk[1] and color_table[tk[1]] then
    fg = table.remove(tk, 1)
  end
  -- next: is this a background color?
  if tk[1] and color_table[tk[1]] then
    bg = table.remove(tk, 1)
  end
  -- the rest would be our message
  if tk[1] then
    message = table.concat(tk, " ")
  end
  -- if we haven't provided a room ID and we don't know where we are yet, we can't make a label
  if not room then
    map.echo("We don't know where we are to make a label here.")
    return
  end
  local x, y, z = getRoomCoordinates(room)
  local f1, f2, f3 = unpack(color_table[fg])
  local b1, b2, b3 = unpack(color_table[bg])
  -- finally: do it :)
  local lid = createMapLabel(getRoomArea(room), message, x, y, z, f1, f2, f3, b1, b2, b3)
  map.echo(
    string.format(
      "Created new label #%d '%s' in %s.", lid, message, getRoomAreaName(getRoomArea(room))
    )
  )
end

function map.areaLabels(where, exact)
  if not getMapLabels then
    map.echo(
      "Your Mudlet doesn't support getMapLabels() yet - please update to 2.0-test3 or better."
    )
    return
  end
  if (not where or not type(where) == "string") and not map.currentRoom then
    map.echo("For which area would you like to view labels?")
    return
  end
  if not where then
    exact = true
    where = getRoomAreaName(getRoomArea(map.currentRoom))
  end
  local areaid, msg, multiples = map.findAreaID(where, exact)
  if areaid then
    local t = getMapLabels(areaid)
    if type(t) ~= "table" or not next(t) then
      map.echo(string.format("'%s' doesn't seem to have any labels.", getRoomAreaName(areaid)))
      return
    end
    map.echo(string.format("Area labels for '%s'", getRoomAreaName(areaid)))
    for labelid, labeltext in pairs(t) do
      fg("DimGrey")
      echo(string.format("  %d) %s (", labelid, labeltext))
      fg("orange_red")
      setUnderline(true)
      echoLink(
        'delete',
        string.format(
          'deleteMapLabel(%d, %d); map.echo("Deleted label #' .. labelid .. '")', areaid, labelid
        ),
        "Delete label #" .. labelid .. " from " .. getRoomAreaName(areaid)
      )
      setUnderline(false)
      echo(")\n")
    end
    resetFormat()
  elseif not areaid and #multiples &gt; 0 then
    map.echo("Which area would you like to view exactly?")
    fg("DimGrey")
    for _, areaname in ipairs(multiples) do
      echo("  ");
      setUnderline(true)
      echoLink(
        areaname,
        'map.areaLabels("' .. areaname .. '", true)',
        "Click to view labels in " .. areaname,
        true
      )
      setUnderline(false)
      echo("\n")
    end
    resetFormat()
    return
  else
    map.echo(string.format("Don't know of any area named '%s'.", where))
    return
  end
end

</script>
				<eventHandlerList />
			</Script>
		</ScriptGroup>
	</ScriptPackage>
	<KeyPackage>
		<Key isActive="no" isFolder="no">
			<name>New key</name>
			<packageName></packageName>
			<script></script>
			<command></command>
			<keyCode>33554431</keyCode>
			<keyModifier>0</keyModifier>
		</Key>
	</KeyPackage>
	<VariablePackage>
		<HiddenVariables />
		<VariableGroup>
			<name>map</name>
			<keyType>4</keyType>
			<value></value>
			<valueType>5</valueType>
			<VariableGroup>
				<name>configs</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<VariableGroup>
					<name>translate</name>
					<keyType>4</keyType>
					<value></value>
					<valueType>5</valueType>
					<Variable>
						<name>e</name>
						<keyType>4</keyType>
						<value>e</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>d</name>
						<keyType>4</keyType>
						<value>d</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>wd</name>
						<keyType>4</keyType>
						<value>wd</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>northwest</name>
						<keyType>4</keyType>
						<value>northwest</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>southdown</name>
						<keyType>4</keyType>
						<value>southdown</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>eastdown</name>
						<keyType>4</keyType>
						<value>eastdown</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>nw</name>
						<keyType>4</keyType>
						<value>nw</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>n</name>
						<keyType>4</keyType>
						<value>n</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>ne</name>
						<keyType>4</keyType>
						<value>ne</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>southup</name>
						<keyType>4</keyType>
						<value>southup</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>west</name>
						<keyType>4</keyType>
						<value>west</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>u</name>
						<keyType>4</keyType>
						<value>u</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>w</name>
						<keyType>4</keyType>
						<value>w</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>north</name>
						<keyType>4</keyType>
						<value>north</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>westup</name>
						<keyType>4</keyType>
						<value>westup</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>se</name>
						<keyType>4</keyType>
						<value>se</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>northdown</name>
						<keyType>4</keyType>
						<value>northdown</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>westdown</name>
						<keyType>4</keyType>
						<value>westdown</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>ed</name>
						<keyType>4</keyType>
						<value>ed</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>northup</name>
						<keyType>4</keyType>
						<value>northup</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>up</name>
						<keyType>4</keyType>
						<value>up</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>s</name>
						<keyType>4</keyType>
						<value>s</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>south</name>
						<keyType>4</keyType>
						<value>south</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>nd</name>
						<keyType>4</keyType>
						<value>nd</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>southeast</name>
						<keyType>4</keyType>
						<value>southeast</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>wu</name>
						<keyType>4</keyType>
						<value>wu</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>east</name>
						<keyType>4</keyType>
						<value>east</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>sw</name>
						<keyType>4</keyType>
						<value>sw</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>eu</name>
						<keyType>4</keyType>
						<value>eu</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>su</name>
						<keyType>4</keyType>
						<value>su</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>in</name>
						<keyType>4</keyType>
						<value>in</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>eastup</name>
						<keyType>4</keyType>
						<value>eastup</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>sd</name>
						<keyType>4</keyType>
						<value>sd</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>out</name>
						<keyType>4</keyType>
						<value>out</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>northeast</name>
						<keyType>4</keyType>
						<value>northeast</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>nu</name>
						<keyType>4</keyType>
						<value>nu</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>down</name>
						<keyType>4</keyType>
						<value>down</value>
						<valueType>4</valueType>
					</Variable>
					<Variable>
						<name>southwest</name>
						<keyType>4</keyType>
						<value>southwest</value>
						<valueType>4</valueType>
					</Variable>
				</VariableGroup>
			</VariableGroup>
		</VariableGroup>
		<VariableGroup>
			<name>color_table</name>
			<keyType>4</keyType>
			<value></value>
			<valueType>5</valueType>
			<VariableGroup>
				<name>light_gray</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_027</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>pale_turquoise</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>175</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_178</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>purple</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>160</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>32</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_079</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_034</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>PaleGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>152</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>251</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>152</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_041</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>sky_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>135</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>206</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>235</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_goldenrod_yellow</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>210</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>OrangeRed</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>69</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_185</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_014</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>OliveDrab</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>107</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>142</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>35</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>PapayaWhip</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>239</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>213</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>chocolate</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>210</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>30</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>cornflower_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>100</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>149</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>237</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_160</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_black</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_light_yellow</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>gold</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>215</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>lawn_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>124</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>252</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_036</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>grey</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>190</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>190</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>190</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>NavajoWhite</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>222</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>173</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_008</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_204</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>sandy_brown</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>244</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>164</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>96</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_024</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_048</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>MediumSpringGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>154</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkOliveGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>85</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>107</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>47</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_244</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>133</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>133</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>133</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_012</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_025</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_salmon</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>160</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>122</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_226</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ForestGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>34</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>139</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>34</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_194</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>burlywood</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>222</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>184</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>135</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>BlanchedAlmond</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>235</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_131</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>HotPink</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>180</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_sea_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>143</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>188</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>143</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>MediumSlateBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>123</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>104</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightGrey</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_violet</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>148</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>saddle_brown</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>139</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>69</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>19</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>medium_orchid</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>186</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>85</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_yellow</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_230</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_238</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>67</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>67</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>67</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>MintCream</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_188</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>pale_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>152</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>251</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>152</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>pale_goldenrod</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>232</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>170</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_164</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>mint_cream</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>violet_red</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>208</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>32</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>144</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_215</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_248</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>177</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>177</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>177</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_163</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_031</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_044</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>spring_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>127</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>orange</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>165</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightCyan</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>224</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_143</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightSeaGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>32</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>178</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>170</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>salmon</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>114</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightSteelBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>176</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>196</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>222</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_000</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>indian_red</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>92</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>92</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_144</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_steel_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>176</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>196</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>222</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_251</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_090</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>100</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_064</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ghost_white</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>248</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>248</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_016</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>gray</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>190</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>190</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>190</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>powder_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>176</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>224</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>230</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_222</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkViolet</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>148</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_098</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>olive_drab</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>107</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>142</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>35</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>maroon</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>176</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>48</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>96</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>snow</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_094</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_050</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_cyan</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_171</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>MediumTurquoise</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>72</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>209</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>blanched_almond</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>235</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_087</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>173</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>216</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>230</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>seashell</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_111</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_013</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_light_red</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>MistyRose</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>228</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>225</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightGray</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_121</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>173</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>216</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>230</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_119</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkSalmon</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>233</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>150</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>122</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_211</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_214</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_077</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_252</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>222</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>222</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>222</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiCyan</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_086</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_002</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_156</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>turquoise</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>64</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>224</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>208</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>SaddleBrown</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>139</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>69</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>19</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_199</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>honeydew</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightSlateGrey</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>119</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>136</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_217</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>tomato</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>99</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>71</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_184</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>forest_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>34</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>139</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>34</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_212</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightSlateBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>132</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_slate_gray</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>119</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>136</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_light_black</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>PaleVioletRed</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>219</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>147</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightGoldenrod</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>221</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>130</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_slate_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>132</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>medium_purple</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>147</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>219</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_175</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_183</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>PaleGoldenrod</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>232</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>170</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_234</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>22</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>22</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>22</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dim_grey</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>red</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_010</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_176</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_magenta</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_001</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>lavender</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>230</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>230</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>green_yellow</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>173</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>47</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_046</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_olive_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>85</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>107</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>47</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_068</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>midnight_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>25</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>25</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_104</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>moccasin</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>228</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>181</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkOrange</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>140</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_017</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>NavyBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>papaya_whip</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>239</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>213</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>brown</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>165</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>42</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>42</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_sea_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>32</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>178</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>170</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_109</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_126</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_168</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_005</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>black</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_009</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>yellow</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_slate_grey</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>119</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>136</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>goldenrod</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>218</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>165</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>32</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>lavender_blush</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_227</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_053</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiWhite</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>192</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>192</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>192</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_197</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>GreenYellow</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>173</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>47</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>magenta</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_100</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_145</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_140</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_202</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>MediumAquamarine</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>170</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_235</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>33</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>33</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>33</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>thistle</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>216</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>191</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>216</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_162</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_066</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_221</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_097</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_236</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>44</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>44</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>44</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_102</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_011</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_029</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_146</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_223</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_070</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_231</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_233</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>11</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>11</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>11</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_055</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>antique_white</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>235</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>215</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_115</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_133</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_red</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_255</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>PaleTurquoise</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>175</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>medium_aquamarine</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>170</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_063</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_242</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>111</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>111</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>111</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_191</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkGoldenrod</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>184</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>134</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>11</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_071</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_228</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>SpringGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>127</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_093</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_khaki</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>189</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>183</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>107</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>SlateBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>106</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>90</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiRed</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_153</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_167</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_018</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_033</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiLightCyan</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>alice_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>248</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_241</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>100</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>100</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>100</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkSlateGray</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>47</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>79</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>79</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_035</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>slate_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>106</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>90</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_237</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>55</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>55</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>55</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>bisque</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>228</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>196</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>AntiqueWhite</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>235</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>215</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>IndianRed</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>92</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>92</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_white</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>192</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>192</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>192</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_148</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_goldenrod</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>221</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>130</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_253</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>233</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>233</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>233</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiLightMagenta</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DimGrey</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_103</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_172</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightSlateGray</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>119</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>136</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_038</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>lime_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>50</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>50</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>deep_sky_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>191</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiYellow</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>misty_rose</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>228</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>225</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>rosy_brown</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>188</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>143</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>143</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_245</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>144</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>144</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>144</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DimGray</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_light_cyan</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_054</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_207</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>white_smoke</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_slate_gray</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>47</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>79</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>79</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_141</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DeepSkyBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>191</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_213</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>gainsboro</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>220</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>220</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>220</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>medium_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_224</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>MediumPurple</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>147</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>219</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_089</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_198</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_166</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>firebrick</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>178</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>34</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>34</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>VioletRed</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>208</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>32</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>144</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_074</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkSeaGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>143</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>188</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>143</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_122</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>navy</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>cornsilk</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>248</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>220</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_189</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightPink</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>182</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>193</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightSkyBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>135</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>206</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_060</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_088</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkSlateGrey</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>47</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>79</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>79</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>pink</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>192</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>203</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>medium_violet_red</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>199</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>21</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>133</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>peru</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>133</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>63</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_021</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_200</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_028</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_069</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_142</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_052</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>beige</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>220</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_051</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>deep_pink</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>20</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>147</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>medium_turquoise</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>72</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>209</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_161</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>RoyalBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>65</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>225</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_135</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_020</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiLightBlack</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_225</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_249</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>188</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>188</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>188</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkTurquoise</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>206</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>209</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>MediumSeaGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>60</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>179</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>113</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>GhostWhite</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>248</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>248</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_123</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiBlack</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_062</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_015</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_120</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightGoldenrodYellow</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>210</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkKhaki</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>189</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>183</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>107</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_232</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_239</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>78</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>78</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>78</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_219</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_083</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_061</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_075</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>linen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>230</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_coral</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>AliceBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>248</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_059</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightSalmon</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>160</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>122</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>khaki</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>230</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>140</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_073</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_201</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_128</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>hot_pink</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>180</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LemonChiffon</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>OldLace</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>253</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>230</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>FloralWhite</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_216</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>sienna</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>160</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>82</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>45</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_149</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>yellow_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>154</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>50</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_203</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>CadetBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>95</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>158</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>160</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_159</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightCoral</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_187</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>sea_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>46</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>139</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>87</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_206</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>coral</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>127</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>80</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>SkyBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>135</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>206</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>235</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_037</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>aquamarine</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>127</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>212</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_155</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LavenderBlush</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_085</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_047</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_250</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>200</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>200</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>200</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>transparent</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>4</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_106</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>WhiteSmoke</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>azure</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>navajo_white</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>222</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>173</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_107</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>lemon_chiffon</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LimeGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>50</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>50</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_205</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>white</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_078</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiLightBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>PeachPuff</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>218</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>185</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>medium_slate_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>123</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>104</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_116</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_173</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_129</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_152</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_195</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_246</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>155</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>155</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>155</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_057</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>cadet_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>95</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>158</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>160</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_040</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_151</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>MediumBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_022</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LawnGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>124</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>252</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_132</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_081</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiLightGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>MediumVioletRed</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>199</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>21</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>133</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkOrchid</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>50</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_058</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>royal_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>65</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>225</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DeepPink</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>20</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>147</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>SlateGrey</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>144</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_158</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_157</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DodgerBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>30</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>144</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_056</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_004</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_170</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_099</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_096</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_169</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>cyan</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_174</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_210</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_196</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_177</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>steel_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>70</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>130</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>180</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_124</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>plum</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>221</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>160</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>221</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_light_magenta</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>BlueViolet</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>138</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>43</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>226</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_186</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_067</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>pale_violet_red</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>219</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>147</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_134</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_137</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_045</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_147</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_019</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_180</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_243</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>122</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>122</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>122</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ivory</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_yellow</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>224</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_108</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_turquoise</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>206</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>209</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_042</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_240</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>89</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>89</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>89</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>navy_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>YellowGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>154</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>205</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>50</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_112</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_247</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>166</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>166</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>166</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_254</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>244</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>244</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>244</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiLightYellow</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_goldenrod</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>184</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>134</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>11</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_101</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>medium_spring_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>154</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_032</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_125</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>SandyBrown</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>244</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>164</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>96</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_030</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_092</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_slate_grey</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>47</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>79</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>79</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_095</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_light_white</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_023</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_cyan</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>224</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_003</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_orchid</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>50</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_117</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_193</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_138</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_190</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>old_lace</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>253</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>230</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_091</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_065</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_150</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>medium_sea_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>60</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>179</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>113</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_slate_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>72</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>61</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>139</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_127</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_154</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_118</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkSlateBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>72</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>61</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>139</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_080</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_084</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>tan</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>210</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>180</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>140</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>SeaGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>46</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>139</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>87</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiLightRed</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_192</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_136</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_043</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>PowderBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>176</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>224</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>230</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>LightYellow</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>224</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_208</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_grey</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_pink</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>182</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>193</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_007</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>192</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>192</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>192</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_139</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_orange</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>140</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dark_salmon</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>233</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>150</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>122</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_220</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_179</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_209</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>CornflowerBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>100</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>149</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>237</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>floral_white</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>240</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiLightWhite</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>RosyBrown</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>188</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>143</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>143</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_229</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>SteelBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>70</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>130</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>180</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>orchid</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>218</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>214</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_026</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_light_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_110</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>DarkGreen</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>100</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansiMagenta</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_218</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_114</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_light_green</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_049</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>violet</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>130</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>238</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_165</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_006</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>chartreuse</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>127</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>orange_red</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>69</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>SlateGray</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>144</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_181</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>peach_puff</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>218</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>185</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>blue_violet</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>138</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>43</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>226</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dodger_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>30</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>144</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_105</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>dim_gray</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>105</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>MidnightBlue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>25</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>25</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_039</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_130</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_182</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_076</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>light_sky_blue</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>135</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>206</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>250</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_113</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>204</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>MediumOrchid</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>186</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>85</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>211</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_072</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>153</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>102</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>slate_grey</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>144</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>wheat</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>245</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>222</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>179</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>ansi_082</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>51</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>255</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>0</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
			<VariableGroup>
				<name>slate_gray</name>
				<keyType>4</keyType>
				<value></value>
				<valueType>5</valueType>
				<Variable>
					<name>1</name>
					<keyType>3</keyType>
					<value>112</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>2</name>
					<keyType>3</keyType>
					<value>128</value>
					<valueType>3</valueType>
				</Variable>
				<Variable>
					<name>3</name>
					<keyType>3</keyType>
					<value>144</value>
					<valueType>3</valueType>
				</Variable>
			</VariableGroup>
		</VariableGroup>
	</VariablePackage>
</MudletPackage>
